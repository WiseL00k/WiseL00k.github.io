<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PCL2自定义皮肤教程</title>
      <link href="/posts/6a165316.html"/>
      <url>/posts/6a165316.html</url>
      
        <content type="html"><![CDATA[<h1 id="PCL2自定义皮肤教程"><a href="#PCL2自定义皮肤教程" class="headerlink" title="PCL2自定义皮肤教程"></a>PCL2自定义皮肤教程</h1><p>首先前往<a href="https://littleskin.cn/?lang=zh_CN">LittleSkin - 快速、可靠的 Minecraft 皮肤站</a></p><p>注册好账号</p><p>之后在用户中心，按如下操作</p><p><img src="https://pic1.imgdb.cn/item/6791d88bd0e0a243d4f70ada.png"></p><p>添加好新角色后，在我的衣柜，给角色添加皮肤材质。</p><p>之后在仪表盘处，将按钮拖到PCL2启动器处，<strong>真的就是拖过去</strong></p><p><img src="https://pic1.imgdb.cn/item/6791d920d0e0a243d4f70b09.png"></p><p>之后你的PCL2启动器，会变成这样</p><p><img src="https://pic1.imgdb.cn/item/6791d980d0e0a243d4f70b2b.png"></p><p>如果打开游戏后，在游戏内还是没能看到你设置的自定义皮肤。</p><p>可以在加一个Mod，在Mod下载处搜索<strong>万用皮肤补丁</strong>，根据你对应的游戏版本进行下载即可。</p><p><img src="https://pic1.imgdb.cn/item/6791da1bd0e0a243d4f70b5b.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> MC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遇到过的问题及解决方法</title>
      <link href="/posts/2b45e8ee.html"/>
      <url>/posts/2b45e8ee.html</url>
      
        <content type="html"><![CDATA[<h1 id="遇到过的问题及解决方法"><a href="#遇到过的问题及解决方法" class="headerlink" title="遇到过的问题及解决方法"></a>遇到过的问题及解决方法</h1><span id="more"></span><p>问题：使用命令行pip安装python包的时候，会一直出现黄色Warning警告，关闭代理，解决。但是之后需要使用又要重新打开，比较麻烦。因此找到个不用关闭代理的方法。</p><p>解决方法：<a href="https://blog.csdn.net/qq_40483419/article/details/144216858?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-144216858-blog-122165774.235%5Ev43%5Econtrol&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-144216858-blog-122165774.235%5Ev43%5Econtrol&utm_relevant_index=5">pip无法安装包，提示WARNING: Retrying…after connection broken by ‘ProxyError(‘Cannot connect to proxy.‘…_pip安装没反应-CSDN博客</a></p><p><img src="https://pic1.imgdb.cn/item/678cfa27d0e0a243d4f5ad92.png"></p><p>原因：clash无法正确识别pip的http流量，导致流量没走代理。开启这个clash中自带的Specify Protocol工具，或者直接关闭代理都可以解决。</p><p>但是总是关闭代理又打开比较麻烦，比较推荐这个工具。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 问题 </tag>
            
            <tag> 解决方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win11常用快捷键</title>
      <link href="/posts/16598fab.html"/>
      <url>/posts/16598fab.html</url>
      
        <content type="html"><![CDATA[<h1 id="Win11常用快捷键"><a href="#Win11常用快捷键" class="headerlink" title="Win11常用快捷键"></a>Win11常用快捷键</h1><p><code>win+alt+b</code>开关HDR</p><p><code>win+p</code>投影设置</p><p><code>win+d</code>回到桌面</p>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MC乌托邦3.0整合包安装教程</title>
      <link href="/posts/51ab9a47.html"/>
      <url>/posts/51ab9a47.html</url>
      
        <content type="html"><![CDATA[<h1 id="MC乌托邦3-0整合包安装教程"><a href="#MC乌托邦3-0整合包安装教程" class="headerlink" title="MC乌托邦3.0整合包安装教程"></a>MC乌托邦3.0整合包安装教程</h1><span id="more"></span><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="下载PCL启动器"><a href="#下载PCL启动器" class="headerlink" title="下载PCL启动器"></a>下载PCL启动器</h3><p>到作者官网(<a href="https://afdian.com/p/0164034c016c11ebafcb52540025c377">PCL 最新正式版永久下载丨龙腾猫跃丨爱发电</a>)，下载PCL启动器</p><h3 id="下载整合包"><a href="#下载整合包" class="headerlink" title="下载整合包"></a>下载整合包</h3><p>到<a href="https://note.youdao.com/s/7BOzSgLt">作者官网</a>，下载好乌托邦3.0整合包</p><h3 id="留档"><a href="#留档" class="headerlink" title="留档"></a>留档</h3><p>如果找不到的话，我也打包好了需要的文件，通过这两条链接来下载</p><p><a href="https://pan.quark.cn/s/dc394ab2d68f">PCL下载</a></p><p><a href="https://pan.quark.cn/s/7cc1c908ddeb">乌托邦3.0整合包</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="https://pic1.imgdb.cn/item/677c095bd0e0a243d4f0385b.png"></p><p>创建一个新的文件夹，我这里叫PCL，将下载的这俩个文件拖到新的PCL文件夹里。</p><p>只解压带PCL字样的压缩包，之后打开解压后的程序，可以看到文件夹多出了几个文件夹，就是上图中最上面的两个文件夹，说明PCL启动器安装好了。</p><p>之后打开PCL启动器，同样是原来那个exe程序。打开后，按如下操作</p><p><img src="https://pic1.imgdb.cn/item/677c0a27d0e0a243d4f03a39.png"></p><p><img src="https://pic1.imgdb.cn/item/677c0a80d0e0a243d4f03ac3.png"></p><p><img src="https://pic1.imgdb.cn/item/677c0adbd0e0a243d4f03b67.png"></p><p><img src="https://pic1.imgdb.cn/item/677c0afed0e0a243d4f03bb4.png"></p><p>等待下载完成即可</p><p><img src="https://pic1.imgdb.cn/item/677c0c30d0e0a243d4f03e38.png"></p><p>如果你的电脑还没配置过java环境的话，点击启动游戏后，应该会提示你下载java环境。</p><p>一般选自动配置即可。</p><p>之后启动游戏，便可以开启你的乌托邦之旅!</p>]]></content>
      
      
      
        <tags>
            
            <tag> MC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VsCode常用快捷键</title>
      <link href="/posts/53b37f43.html"/>
      <url>/posts/53b37f43.html</url>
      
        <content type="html"><![CDATA[<h1 id="VsCode常用快捷键"><a href="#VsCode常用快捷键" class="headerlink" title="VsCode常用快捷键"></a>VsCode常用快捷键</h1><span id="more"></span><p><code>shitf+alt+方向键</code> 复制当前行向方向键方向</p>]]></content>
      
      
      
        <tags>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简单的C语言菜单框架</title>
      <link href="/posts/de47911f.html"/>
      <url>/posts/de47911f.html</url>
      
        <content type="html"><![CDATA[<h1 id="一个简单的C语言菜单框架"><a href="#一个简单的C语言菜单框架" class="headerlink" title="一个简单的C语言菜单框架"></a>一个简单的C语言菜单框架</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>做C语言课设总是用到菜单，发现菜单的使用频率特别高。想试着结合面向对象的思想尝试着写一个简单的C语言菜单框架。</p><span id="more"></span><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>一个菜单内的内容通常由多个菜单项和一些其他信息组成。而一个菜单项内又由菜单项的内容和选择后执行的回调函数组成。而菜单项执行的回调函数通常分为两种：一种是进入下一级菜单、另一种是执行对应功能函数。</p><p>因此做如下定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 菜单</span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125; Menu;</span><br><span class="line"></span><br><span class="line">// 菜单项</span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125; MenuItem;</span><br><span class="line"></span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125; MenuItemList;</span><br></pre></td></tr></table></figure><p>可提供的接口如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void registerMenu();</span><br><span class="line">void registerMenuItem();</span><br></pre></td></tr></table></figure><p>待完工…</p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统配置</title>
      <link href="/posts/a03ae733.html"/>
      <url>/posts/a03ae733.html</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>一些常用的工具配置，工具安装文档</p><p>方便新环境迅速安装配置。</p><span id="more"></span><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="Vim安装"><a href="#Vim安装" class="headerlink" title="Vim安装"></a>Vim安装</h3><p>推荐<a href="https://github.com/WiseL00k/vimplus">vimplus</a>，可以帮我们一键自动安装常用的vim插件。</p><p><img src="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/vimplus-logo.png" alt="vimplus"></p><h4 id="An-automatic-configuration-program-for-vim"><a href="#An-automatic-configuration-program-for-vim" class="headerlink" title="An automatic configuration program for vim"></a>An automatic configuration program for vim</h4><h4 id="安装vimplus"><a href="#安装vimplus" class="headerlink" title="安装vimplus"></a>安装vimplus</h4><pre><code>git clone https://github.com/chxuan/vimplus.git ~/.vimpluscd ~/.vimplus./install.sh //不加sudo</code></pre><h4 id="设置Nerd-Font"><a href="#设置Nerd-Font" class="headerlink" title="设置Nerd Font"></a>设置Nerd Font</h4><p>为防止vimplus显示乱码，需设置linux终端字体为<code>Droid Sans Mono Nerd Font</code>。</p><h4 id="多用户支持"><a href="#多用户支持" class="headerlink" title="多用户支持"></a>多用户支持</h4><p>将vimplus在某个用户下安装好后，若需要在其他用户也能够使用vimplus，则执行</p><pre><code>sudo ./install_to_user.sh username1 username2 //替换为真实用户名</code></pre><h4 id="更新vimplus"><a href="#更新vimplus" class="headerlink" title="更新vimplus"></a>更新vimplus</h4><p>紧跟vimplus的步伐，尝鲜新特性</p><pre><code>./update.sh</code></pre><h4 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h4><blockquote><ul><li>[~&#x2F;.vimrc][82]为vimplus的默认配置，一般不做修改</li><li>[~&#x2F;.vimrc.custom.plugins][83]为用户自定义插件列表，用户增加、卸载插件请修改该文件</li><li>[<del>&#x2F;.vimrc.custom.config][84]为用户自定义配置文件，一般性配置请放入该文件，可覆盖[</del>&#x2F;.vimrc][82]里的配置</li></ul></blockquote><h3 id="ZSH安装"><a href="#ZSH安装" class="headerlink" title="ZSH安装"></a>ZSH安装</h3><h3 id="Thefuck"><a href="#Thefuck" class="headerlink" title="Thefuck"></a>Thefuck</h3><p>一款自动纠错终端工具</p><p><a href="https://github.com/nvbn/thefuck">nvbn&#x2F;thefuck: Magnificent app which corrects your previous console command.</a></p><h3 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h3><p>方便快捷查询命令常用用法</p><p><a href="https://github.com/tldr-pages/tldr">tldr-pages&#x2F;tldr: 📚 Collaborative cheatsheets for console commands</a></p><h3 id="fd"><a href="#fd" class="headerlink" title="fd"></a>fd</h3><p>一款替代find命令的工具</p><p><a href="https://github.com/sharkdp/fd">sharkdp&#x2F;fd: A simple, fast and user-friendly alternative to ‘find’</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 系统配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小工具</title>
      <link href="/posts/1c0373de.html"/>
      <url>/posts/1c0373de.html</url>
      
        <content type="html"><![CDATA[<h1 id="小工具分享"><a href="#小工具分享" class="headerlink" title="小工具分享"></a>小工具分享</h1><p>这里分享一些我觉得很好用的小工具，大部分都是开源的软件。</p><span id="more"></span><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="uTools"><a href="#uTools" class="headerlink" title="uTools"></a>uTools</h3><p><img src="https://res.u-tools.cn/website5/static/assets/logo.png"></p><p>uTools真的是非常好用的集成工具，非常能够提升自己的办公效率，这款软件里面集成了许多常用小工具集合。</p><p>比如搜索神器：<code>Everything</code>，同时，它还支持OCR，翻译，批量文件重命名等常用功能。</p><p>官网下载链接:<a href="https://u.tools/">uTools官网 - 新一代效率工具平台</a></p><h3 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h3><p><img src="https://www.voidtools.com//zh-cn/support/everything/Everything.Search.Window.png"></p><p>作为一款轻量化开源的文件检索软件，搜索速度拉爆Windows自带的检索文件功能。还支持自定义检索文件类型，用过都说好。</p><p>官网下载链接：<a href="https://www.voidtools.com/zh-cn/">Everything</a></p><p>未完待续…</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git commit信息规范</title>
      <link href="/posts/afba152f.html"/>
      <url>/posts/afba152f.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git-commit信息规范"><a href="#Git-commit信息规范" class="headerlink" title="Git commit信息规范"></a>Git commit信息规范</h1><p>在个人开发中，对于commit message(提交信息)，个人开发者往往比较随意，只要写的自己能看懂就行。但是养成良好的commit规范，也能够或多或少地提升自己的个人开发效率。也便于在出现bug时，方便回溯排查。</p><p>但是在团队开发中，Commit message(提交信息)就显得尤为重要，一个好的commit message总是能够提升团队开发效率的。因此这里介绍一种常用的commit message规范–<a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit?tab=t.0#heading=h.greljkmo14y0">Angular规范</a>。如下图：</p><span id="more"></span><p><img src="https://pic.imgdb.cn/item/67569ffad0e0a243d4e043ea.png"></p><h2 id="Angular规范"><a href="#Angular规范" class="headerlink" title="Angular规范"></a>Angular规范</h2><h3 id="Commit-message-的格式"><a href="#Commit-message-的格式" class="headerlink" title="Commit message 的格式"></a>Commit message 的格式</h3><p>每次提交，Commit message 都包括三个部分：header，body 和 footer。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;footer&gt;</span><br></pre></td></tr></table></figure><p>其中，header 是必需的，body 和 footer 可以省略。<br>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</p><h3 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h3><p>Header部分只有一行，包括三个字段：<code>type</code>（必需）、<code>scope</code>（可选）和<code>subject</code>（必需）。</p><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p>用于说明 commit 的类别，只允许使用下面7个标识。</p><ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul><p>如果type为<code>feat</code>和<code>fix</code>，则该 commit 将肯定出现在 Change log 之中。其他情况（<code>docs</code>、<code>chore</code>、<code>style</code>、<code>refactor</code>、<code>test</code>）由你决定，要不要放入 Change log，建议是不要。</p><h4 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h4><p>scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p><p>例如在<code>Angular</code>，可以是<code>$location</code>, <code>$browser</code>, <code>$compile</code>, <code>$rootScope</code>, <code>ngHref</code>, <code>ngClick</code>, <code>ngView</code>等。</p><p>如果你的修改影响了不止一个<code>scope</code>，你可以使用<code>*</code>代替。</p><h4 id="subject"><a href="#subject" class="headerlink" title="subject"></a>subject</h4><p><code>subject</code>是 commit 目的的简短描述，不超过50个字符。</p><p>其他注意事项：</p><ul><li>以动词开头，使用第一人称现在时，比如change，而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号（.）</li></ul><h3 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h3><p>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">More <span class="keyword">detailed</span> explanatory <span class="keyword">text</span>, <span class="keyword">if</span> necessary.  Wrap <span class="keyword">it</span> <span class="built_in">to</span> </span><br><span class="line">about <span class="number">72</span> <span class="keyword">characters</span> <span class="keyword">or</span> so. </span><br><span class="line"></span><br><span class="line">Further paragraphs come <span class="keyword">after</span> blank <span class="keyword">lines</span>.</span><br><span class="line"></span><br><span class="line">- Bullet points are okay, too</span><br><span class="line">- Use <span class="keyword">a</span> hanging indent</span><br></pre></td></tr></table></figure><p>有两个注意点:</p><ul><li>使用第一人称现在时，比如使用change而不是changed或changes。</li><li>永远别忘了第2行是空行</li><li>应该说明代码变动的动机，以及与以前行为的对比。</li></ul><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>Footer 部分只用于以下两种情况：</p><h4 id="不兼容变动"><a href="#不兼容变动" class="headerlink" title="不兼容变动"></a>不兼容变动</h4><p>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">BREAKING CHANGE:</span> <span class="string">isolate</span> <span class="string">scope</span> <span class="string">bindings</span> <span class="string">definition</span> <span class="string">has</span> <span class="string">changed.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">To migrate the code follow the example below:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">Before:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">scope:</span> &#123;</span><br><span class="line">      <span class="attr">myAttr:</span> <span class="string">&#x27;attribute&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attr">After:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">scope:</span> &#123;</span><br><span class="line">      <span class="attr">myAttr:</span> <span class="string">&#x27;@&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">The</span> <span class="string">removed</span> <span class="string">`inject`</span> <span class="string">wasn&#x27;t</span> <span class="string">generaly</span> <span class="string">useful</span> <span class="string">for</span> <span class="string">directives</span> <span class="string">so</span> <span class="string">there</span> <span class="string">should</span> <span class="string">be</span> <span class="literal">no</span> <span class="string">code</span> <span class="string">using</span> <span class="string">it.</span></span><br></pre></td></tr></table></figure><h4 id="关闭-Issue"><a href="#关闭-Issue" class="headerlink" title="关闭 Issue"></a>关闭 Issue</h4><p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Closes </span><span class="comment">#234</span></span><br></pre></td></tr></table></figure><h3 id="Revert"><a href="#Revert" class="headerlink" title="Revert"></a>Revert</h3><p>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">revert: feat(pencil): <span class="keyword">add</span> <span class="string">&#x27;graphiteWidth&#x27;</span> <span class="keyword">option</span></span><br><span class="line"></span><br><span class="line">This reverts <span class="keyword">commit</span> <span class="number">667</span>ecc1654a317a13331b17617d973392f415f02.</span><br></pre></td></tr></table></figure><p>Body部分的格式是固定的，必须写成<code>This reverts commit &lt;hash&gt;</code>.，其中的hash是被撤销 commit 的 SHA 标识符。</p><p>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://segmentfault.com/a/1190000009048911">git commit 规范指南 - 不挑食的程序员 - SegmentFault 思否</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anyview数据结构参考代码</title>
      <link href="/posts/524e8698.html"/>
      <url>/posts/524e8698.html</url>
      
        <content type="html"><![CDATA[<h1 id="Anyview数据结构参考代码"><a href="#Anyview数据结构参考代码" class="headerlink" title="Anyview数据结构参考代码"></a>Anyview数据结构参考代码</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><img src="https://pic.imgdb.cn/item/67552805d0e0a243d4dfde21.png"></p><p>可能会有些错误，仅供参考！！！</p><p><del>请不要做CV工程师</del>，系统有查重！</p><p>考虑到题库每年都可能更新，题目不一定完全一致。</p><p>也欢迎大家PR，纠正更新题库。</p><span id="more"></span><p><a href="https://github.com/WiseL00k/DS_Anyview" class="github-corner" aria-label="View source on GitHub"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#64CEAA; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"/><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"/><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"/></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style></p><h2 id="第1章"><a href="#第1章" class="headerlink" title="第1章"></a>第1章</h2><h3 id="DC01PE06"><a href="#DC01PE06" class="headerlink" title="DC01PE06"></a>DC01PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Descend</span><span class="params">(<span class="type">int</span> &amp;a, <span class="type">int</span> &amp;b, <span class="type">int</span> &amp;c)</span>  <span class="comment">// 通过交换，令 a &gt;= b &gt;= c</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = b;</span><br><span class="line">        b = a;</span><br><span class="line">        a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(b &lt; c)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = c;</span><br><span class="line">        c = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = b;</span><br><span class="line">        b = a;</span><br><span class="line">        a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE08"><a href="#DC01PE08" class="headerlink" title="DC01PE08"></a>DC01PE08</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Polynomial</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> a[], <span class="type">float</span> x0)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> rlt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        rlt += a[i]*<span class="built_in">pow</span>(x0,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rlt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE11"><a href="#DC01PE11" class="headerlink" title="DC01PE11"></a>DC01PE11</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Fibonacci</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> m, <span class="type">int</span> &amp;f)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (k &lt; <span class="number">2</span> || m &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m &lt; k<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f += <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m == k<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f += <span class="number">1</span>;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = m<span class="number">-1</span>; i &gt;= m-k; --i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Fibonacci</span>(k,i,f);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE18"><a href="#DC01PE18" class="headerlink" title="DC01PE18"></a>DC01PE18</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fac</span><span class="params">(<span class="type">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num == <span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num * <span class="built_in">fac</span>(num<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">Series</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    Status flag = OK;</span><br><span class="line">    <span class="keyword">if</span>(n &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> temp = <span class="built_in">fac</span>(i) * <span class="built_in">pow</span>(<span class="number">2</span>,i);</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; MAXINT) </span><br><span class="line">        &#123;</span><br><span class="line">            flag = EOVERFLOW;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i<span class="number">-1</span>] = <span class="built_in">fac</span>(i) * <span class="built_in">pow</span>(<span class="number">2</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE20"><a href="#DC01PE20" class="headerlink" title="DC01PE20"></a>DC01PE20</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printName</span><span class="params">(stuType student[], <span class="type">int</span> index[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,student[index[i]].name[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE21"><a href="#DC01PE21" class="headerlink" title="DC01PE21"></a>DC01PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">highestScore</span><span class="params">(stuType *student[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 返回最高成绩  */</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> maxScore = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(student[i]-&gt;score &gt; maxScore)</span><br><span class="line">        &#123;</span><br><span class="line">            maxScore = student[i]-&gt;score;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxScore;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE22"><a href="#DC01PE22" class="headerlink" title="DC01PE22"></a>DC01PE22</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printFirstName_HighestScore</span><span class="params">(stuType *student[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> maxScore = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> maxScoreIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(student[i]-&gt;score &gt; maxScore)</span><br><span class="line">        &#123;</span><br><span class="line">            maxScore = student[i]-&gt;score;</span><br><span class="line">            maxScoreIndex = i;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,student[maxScoreIndex]-&gt;name[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%.2f\n&quot;</span>,maxScore);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE23"><a href="#DC01PE23" class="headerlink" title="DC01PE23"></a>DC01PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printLastName_HighestScore</span><span class="params">(stuType *student[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> maxScore = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> maxScoreIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(student[i]-&gt;score &gt;= maxScore)</span><br><span class="line">        &#123;</span><br><span class="line">            maxScore = student[i]-&gt;score;</span><br><span class="line">            maxScoreIndex = i;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,student[maxScoreIndex]-&gt;name[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%.2f\n&quot;</span>,maxScore);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE30"><a href="#DC01PE30" class="headerlink" title="DC01PE30"></a>DC01PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">StrSequence* <span class="title">reverseStr</span><span class="params">(StrSequence* strSeq)</span></span></span><br><span class="line"><span class="function"><span class="comment">/*返回一个结构体，该结构体将strSeq中的字符串逆序存放*/</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    ElemType* reverseStr = (ElemType*)<span class="built_in">malloc</span>(strSeq-&gt;length*<span class="built_in">sizeof</span>(<span class="type">char</span>));      <span class="comment">//中间缓冲区</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, j = strSeq-&gt;length<span class="number">-1</span>; i &lt; strSeq-&gt;length; ++i,--j)</span><br><span class="line">    &#123;</span><br><span class="line">        reverseStr[i] = strSeq-&gt;elem[j];</span><br><span class="line">    &#125;</span><br><span class="line">    strSeq-&gt;elem = reverseStr;</span><br><span class="line">    <span class="keyword">return</span> strSeq;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE49"><a href="#DC01PE49" class="headerlink" title="DC01PE49"></a>DC01PE49</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateSequence</span><span class="params">(Sequence &amp;S, <span class="type">int</span> n, ElemType *a)</span> </span>&#123; </span><br><span class="line">   <span class="keyword">if</span>(n &lt;= <span class="number">0</span> || a == <span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> ERROR;</span><br><span class="line">   &#125;</span><br><span class="line">   S.elem = (ElemType*)<span class="built_in">malloc</span>(n*<span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">   &#123;</span><br><span class="line">      S.elem[i] = a[i];</span><br><span class="line">   &#125;</span><br><span class="line">   S.length = n;</span><br><span class="line">   <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE61"><a href="#DC01PE61" class="headerlink" title="DC01PE61"></a>DC01PE61</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">LinkList <span class="title">MakeNode</span><span class="params">(ElemType x)</span> </span>&#123; </span><br><span class="line">    LinkList pNode = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    <span class="keyword">if</span> (pNode) </span><br><span class="line">    &#123;</span><br><span class="line">        pNode-&gt;data = x;</span><br><span class="line">        pNode-&gt;next = <span class="literal">NULL</span>;       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pNode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE63"><a href="#DC01PE63" class="headerlink" title="DC01PE63"></a>DC01PE63</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">LinkList <span class="title">CreateLinkList</span><span class="params">(ElemType x, ElemType y)</span> </span>&#123; </span><br><span class="line">    LinkList pHead = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    <span class="keyword">if</span>(pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        pHead-&gt;data = x;</span><br><span class="line">        pHead-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">        <span class="keyword">if</span>(pHead-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            pHead-&gt;next-&gt;data = y;</span><br><span class="line">            pHead-&gt;next-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE65"><a href="#DC01PE65" class="headerlink" title="DC01PE65"></a>DC01PE65</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">LinkList <span class="title">CreateOrdLList</span><span class="params">(ElemType x, ElemType y)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    LinkList pHead = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    <span class="keyword">if</span>(pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        pHead-&gt;data = x&lt;y?x:y;</span><br><span class="line">        pHead-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">        <span class="keyword">if</span>(pHead-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            pHead-&gt;next-&gt;data = x&gt;y?x:y;;</span><br><span class="line">            pHead-&gt;next-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第2章"><a href="#第2章" class="headerlink" title="第2章"></a>第2章</h2><h3 id="DC02PE03"><a href="#DC02PE03" class="headerlink" title="DC02PE03"></a>DC02PE03</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty_Sq</span><span class="params">(SqStack S)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE05"><a href="#DC02PE05" class="headerlink" title="DC02PE05"></a>DC02PE05</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">GetTop_Sq</span><span class="params">(SqStack S, ElemType &amp;e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(S.top == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    e = S.elem[--S.top];</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE07"><a href="#DC02PE07" class="headerlink" title="DC02PE07"></a>DC02PE07</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Pop_Sq</span><span class="params">(SqStack &amp;S, ElemType &amp;e)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    e = S.elem[--S.top];</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE11"><a href="#DC02PE11" class="headerlink" title="DC02PE11"></a>DC02PE11</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">InitStack_Sq2</span><span class="params">(SqStack2 &amp;S, <span class="type">int</span> size, <span class="type">int</span> inc)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(size &lt;= <span class="number">0</span> || inc &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    S.elem = (ElemType*)<span class="built_in">malloc</span>(size*<span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">    S.top = S.elem;</span><br><span class="line">    S.size = size;</span><br><span class="line">    S.increment = inc;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE13"><a href="#DC02PE13" class="headerlink" title="DC02PE13"></a>DC02PE13</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty_Sq2</span><span class="params">(SqStack2 S)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == S.elem)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE15"><a href="#DC02PE15" class="headerlink" title="DC02PE15"></a>DC02PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Push_Sq2</span><span class="params">(SqStack2 &amp;S, ElemType e)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == S.elem+S.size)</span><br><span class="line">    &#123;</span><br><span class="line">        S.elem = (ElemType*)<span class="built_in">realloc</span>(S.elem,S.size+S.increment);</span><br><span class="line">        <span class="keyword">if</span>(!S.elem)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">        S.top = S.elem+S.size;</span><br><span class="line">    &#125;</span><br><span class="line">    *S.top = e;</span><br><span class="line">    S.top++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE17"><a href="#DC02PE17" class="headerlink" title="DC02PE17"></a>DC02PE17</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Pop_Sq2</span><span class="params">(SqStack2 &amp;S, ElemType &amp;e)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == S.elem)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    e = *(--S.top);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE19"><a href="#DC02PE19" class="headerlink" title="DC02PE19"></a>DC02PE19</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CopyStack_Sq</span><span class="params">(SqStack S1, SqStack &amp;S2)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">StackEmpty_Sq</span>(S1))</span><br><span class="line">    &#123;</span><br><span class="line">        S2 = S1;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SqStack tempSq;</span><br><span class="line">    Status flag1,flag2;</span><br><span class="line">    flag1 = <span class="built_in">InitStack_Sq</span>(tempSq, S<span class="number">1.</span>size, S<span class="number">1.</span>increment);</span><br><span class="line">    flag2 = <span class="built_in">InitStack_Sq</span>(S2, S<span class="number">1.</span>size, S<span class="number">1.</span>increment);</span><br><span class="line">    <span class="keyword">if</span>(!(flag1 &amp;&amp; flag2))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(S<span class="number">1.</span>top != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tempSq.elem[tempSq.top++] = S<span class="number">1.</span>elem[--S<span class="number">1.</span>top]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(tempSq.top != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        S<span class="number">2.</span>elem[S<span class="number">2.</span>top++] = tempSq.elem[--tempSq.top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE20"><a href="#DC02PE20" class="headerlink" title="DC02PE20"></a>DC02PE20</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Conversion</span><span class="params">(<span class="type">int</span> N, <span class="type">int</span> rd)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    SqStack tempStack;</span><br><span class="line">    ElemType temp;</span><br><span class="line">    <span class="built_in">InitStack_Sq</span>(tempStack, MAXSIZE, INCREMENT);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(N &gt;= rd)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = N % rd;</span><br><span class="line">        N /= rd;</span><br><span class="line">        <span class="built_in">Push_Sq</span>(tempStack, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Push_Sq</span>(tempStack,N);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">Pop_Sq</span>(tempStack, temp))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">DestroyStack_Sq</span>(tempStack);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE21"><a href="#DC02PE21" class="headerlink" title="DC02PE21"></a>DC02PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">matchBracketSequence</span><span class="params">(<span class="type">char</span>* exp, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(n &amp; <span class="number">1</span> == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    Status flag = TRUE;</span><br><span class="line">    SqStack bufStack;</span><br><span class="line">    ElemType temp;</span><br><span class="line">    <span class="built_in">InitStack_Sq</span>(bufStack, MAXSIZE, INCREMENT);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(exp[i] == <span class="string">&#x27;&#123;&#x27;</span> || exp[i] == <span class="string">&#x27;[&#x27;</span> || exp[i] == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push_Sq</span>(bufStack, exp[i]);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">Pop_Sq</span>(bufStack, temp))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((temp == <span class="string">&#x27;&#123;&#x27;</span> &amp;&amp; exp[i] != <span class="string">&#x27;&#125;&#x27;</span>) || (temp == <span class="string">&#x27;[&#x27;</span> &amp;&amp; exp[i] != <span class="string">&#x27;]&#x27;</span>) || (temp == <span class="string">&#x27;(&#x27;</span> &amp;&amp; exp[i] != <span class="string">&#x27;)&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">StackEmpty_Sq</span>(bufStack))</span><br><span class="line">    &#123;</span><br><span class="line">        flag = FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">DestroyStack_Sq</span>(bufStack);</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE23"><a href="#DC02PE23" class="headerlink" title="DC02PE23"></a>DC02PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">QueueLength_Sq</span><span class="params">(SqQueue Q)</span> </span>&#123; </span><br><span class="line">    <span class="type">int</span> queueLength = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (Q.front != Q.rear) &#123;</span><br><span class="line">        Q.front = (Q.front<span class="number">+1</span>)%Q.maxSize;</span><br><span class="line">        ++queueLength;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> queueLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE25"><a href="#DC02PE25" class="headerlink" title="DC02PE25"></a>DC02PE25</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">EnCQueue</span><span class="params">(CTagQueue &amp;Q, ElemType x)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(Q.rear == Q.front &amp;&amp; Q.tag == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;    </span><br><span class="line">    &#125;</span><br><span class="line">    Q.elem[Q.rear] = x;</span><br><span class="line">    Q.rear = (++Q.rear)%MAXQSIZE;</span><br><span class="line">    <span class="keyword">if</span>(Q.rear == Q.front)</span><br><span class="line">    &#123;</span><br><span class="line">        Q.tag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">DeCQueue</span><span class="params">(CTagQueue &amp;Q, ElemType &amp;x)</span></span>&#123;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(Q.rear == Q.front &amp;&amp; Q.tag == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;    </span><br><span class="line">    &#125;</span><br><span class="line">    x = Q.elem[Q.front];</span><br><span class="line">    Q.front = (++Q.front)%MAXQSIZE;</span><br><span class="line">    <span class="keyword">if</span>(Q.front == Q.rear)</span><br><span class="line">    &#123;</span><br><span class="line">        Q.tag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE27"><a href="#DC02PE27" class="headerlink" title="DC02PE27"></a>DC02PE27</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">EnCQueue</span><span class="params">(CLenQueue &amp;Q, ElemType x)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (Q.length == MAXQSIZE) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;    </span><br><span class="line">    &#125;</span><br><span class="line">    Q.elem[(++Q.rear) % MAXQSIZE] = x;</span><br><span class="line">    Q.length++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">DeCQueue</span><span class="params">(CLenQueue &amp;Q, ElemType &amp;x)</span></span>&#123;</span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(Q.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (Q.rear &gt;= Q.length) &#123;</span><br><span class="line">        x = Q.elem[Q.rear - Q.length + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        x = Q.elem[(Q.rear + (MAXQSIZE-Q.length)<span class="number">+1</span>) % MAXQSIZE];</span><br><span class="line">    &#125;</span><br><span class="line">    Q.length--;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE32"><a href="#DC02PE32" class="headerlink" title="DC02PE32"></a>DC02PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitSqQueue</span><span class="params">(SqQueue* queue, <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (queue) </span><br><span class="line">    &#123;</span><br><span class="line">        queue-&gt;maxSize = size;</span><br><span class="line">        queue-&gt;base = (ElemType*)<span class="built_in">malloc</span>(size*<span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">        queue-&gt;front = <span class="number">0</span>;</span><br><span class="line">        queue-&gt;rear = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="title">Fib</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> n)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">long</span> rlt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    SqQueue fibQueue;</span><br><span class="line">    <span class="built_in">InitSqQueue</span>(&amp;fibQueue, n<span class="number">+1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">+1</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; k<span class="number">-1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            fibQueue.base[fibQueue.rear++] = <span class="number">0</span>; </span><br><span class="line">            fibQueue.rear %= fibQueue.maxSize;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i == k<span class="number">-1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            fibQueue.base[fibQueue.rear++] = <span class="number">1</span>; </span><br><span class="line">            fibQueue.rear %= fibQueue.maxSize;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            temp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i-k; j &lt; i; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                temp += fibQueue.base[j]; </span><br><span class="line">            &#125;    </span><br><span class="line">            fibQueue.base[fibQueue.rear++] = temp;</span><br><span class="line">            fibQueue.rear %= fibQueue.maxSize;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rlt = fibQueue.base[n];</span><br><span class="line">    <span class="keyword">return</span> rlt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE33"><a href="#DC02PE33" class="headerlink" title="DC02PE33"></a>DC02PE33</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">Compare</span><span class="params">(SqList A, SqList B)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (A.length == <span class="number">0</span> &amp;&amp; B.length != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (B.length == <span class="number">0</span> &amp;&amp; A.length != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (A.length == <span class="number">0</span> &amp;&amp; B.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; A.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == B.length) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(A.elem[i] == B.elem[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (A.elem[i] &gt; B.elem[i]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.length) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE35"><a href="#DC02PE35" class="headerlink" title="DC02PE35"></a>DC02PE35</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Inverse</span><span class="params">(SqList &amp;L)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    ElemType temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length/<span class="number">2</span>; ++i) &#123;</span><br><span class="line">        temp = L.elem[i];</span><br><span class="line">        L.elem[i] = L.elem[L.length<span class="number">-1</span>-i];</span><br><span class="line">        L.elem[L.length<span class="number">-1</span>-i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE45"><a href="#DC02PE45" class="headerlink" title="DC02PE45"></a>DC02PE45</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Union</span><span class="params">(SqList &amp;La, List Lb)</span></span></span><br><span class="line"><span class="function"></span>&#123;     <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Lb.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Search_Sq</span>(La,Lb.elem[i]) == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Append_Sq</span>(La, Lb.elem[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE53"><a href="#DC02PE53" class="headerlink" title="DC02PE53"></a>DC02PE53</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty_L</span><span class="params">(LStack S)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (S) &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE55"><a href="#DC02PE55" class="headerlink" title="DC02PE55"></a>DC02PE55</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">GetTop_L</span><span class="params">(LStack S, ElemType &amp;e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (S) &#123;</span><br><span class="line">        e = S-&gt;data;</span><br><span class="line">        S = S-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE61"><a href="#DC02PE61" class="headerlink" title="DC02PE61"></a>DC02PE61</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">QueueEmpty_LQ</span><span class="params">(LQueue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (Q.front) &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE63"><a href="#DC02PE63" class="headerlink" title="DC02PE63"></a>DC02PE63</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">QueueLength_LQ</span><span class="params">(LQueue Q)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> queueLength = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!Q.front) &#123;</span><br><span class="line">        <span class="keyword">return</span> queueLength;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(Q.front != Q.rear)</span><br><span class="line">    &#123;</span><br><span class="line">        queueLength++;</span><br><span class="line">        Q.front = Q.front-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ++queueLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE68"><a href="#DC02PE68" class="headerlink" title="DC02PE68"></a>DC02PE68</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">InitCLQueue</span><span class="params">(CLQueue &amp;rear)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    rear = (CLQueue)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(CLQNode));</span><br><span class="line">    <span class="keyword">if</span>(!rear)</span><br><span class="line">        <span class="keyword">return</span> EOVERFLOW;</span><br><span class="line">    rear-&gt;data = <span class="number">0</span>;</span><br><span class="line">    rear-&gt;next = rear;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">EnCLQueue</span><span class="params">(CLQueue &amp;rear, ElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(rear)</span><br><span class="line">    &#123;       </span><br><span class="line">        CLQueue tempCLQueue;</span><br><span class="line">        tempCLQueue = (CLQueue)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(CLQNode));</span><br><span class="line">        <span class="keyword">if</span>(!tempCLQueue)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> EOVERFLOW;</span><br><span class="line">        &#125;</span><br><span class="line">        tempCLQueue-&gt;next = rear-&gt;next;</span><br><span class="line">        tempCLQueue-&gt;data = x;</span><br><span class="line">        rear-&gt;next = tempCLQueue;</span><br><span class="line">        rear = rear-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">DeCLQueue</span><span class="params">(CLQueue &amp;rear, ElemType &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (rear == rear-&gt;next) &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(rear)</span><br><span class="line">    &#123;</span><br><span class="line">        CLQueue frontCLQueue = rear-&gt;next-&gt;next;</span><br><span class="line">        x = frontCLQueue-&gt;data;</span><br><span class="line">        rear-&gt;next-&gt;next = frontCLQueue-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(frontCLQueue);</span><br><span class="line">        frontCLQueue = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE71"><a href="#DC02PE71" class="headerlink" title="DC02PE71"></a>DC02PE71</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">ListEmpty_L</span><span class="params">(LinkList L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE73"><a href="#DC02PE73" class="headerlink" title="DC02PE73"></a>DC02PE73</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">DestroyList_L</span><span class="params">(LinkList &amp;L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    LinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(L)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = L;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE75"><a href="#DC02PE75" class="headerlink" title="DC02PE75"></a>DC02PE75</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">ClearList_L</span><span class="params">(LinkList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data = <span class="literal">NULL</span>;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE77"><a href="#DC02PE77" class="headerlink" title="DC02PE77"></a>DC02PE77</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ListLength_L</span><span class="params">(LinkList L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(L)</span><br><span class="line">    &#123;</span><br><span class="line">        ++length;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> length<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE82"><a href="#DC02PE82" class="headerlink" title="DC02PE82"></a>DC02PE82</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Insert_L</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!L || i &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (i-- != <span class="number">1</span>) &#123;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(q)</span><br><span class="line">        &#123;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!L)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;data = e;</span><br><span class="line">    <span class="keyword">if</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        p-&gt;next = q;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE84"><a href="#DC02PE84" class="headerlink" title="DC02PE84"></a>DC02PE84</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Delete_L</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType &amp;e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || !L) &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">for</span>(; i-- != <span class="number">1</span>; p = q, q = q-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!q)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    e = q-&gt;data;</span><br><span class="line">    p-&gt;next = q-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(q);</span><br><span class="line">    q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE86"><a href="#DC02PE86" class="headerlink" title="DC02PE86"></a>DC02PE86</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Split_L</span><span class="params">(LinkList L, LinkList &amp;Li, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    Li = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || !L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">for</span>(;i-- != <span class="number">1</span>; p = q, q = q-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    Li = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    Li-&gt;next = q;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE88"><a href="#DC02PE88" class="headerlink" title="DC02PE88"></a>DC02PE88</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Cut_L</span><span class="params">(LinkList L, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || !L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">for</span>(;i-- != <span class="number">1</span>; p = q, q = q-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        p = q;</span><br><span class="line">        q = q-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">    p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE90"><a href="#DC02PE90" class="headerlink" title="DC02PE90"></a>DC02PE90</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">DeleteX_L</span><span class="params">(LinkList L, ElemType x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> deleteCount = <span class="number">0</span>;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    LinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(q-&gt;data == x)</span><br><span class="line">        &#123;</span><br><span class="line">            ++deleteCount;</span><br><span class="line">            p-&gt;next = q-&gt;next;</span><br><span class="line">            temp = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(temp);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            p = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> deleteCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE91"><a href="#DC02PE91" class="headerlink" title="DC02PE91"></a>DC02PE91</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">DeleteSome_L</span><span class="params">(LinkList L, ElemType x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> deleteCount = <span class="number">0</span>;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    LinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(q-&gt;data &lt; x)</span><br><span class="line">        &#123;</span><br><span class="line">            ++deleteCount;</span><br><span class="line">            p-&gt;next = q-&gt;next;</span><br><span class="line">            temp = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(temp);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            p = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> deleteCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE93"><a href="#DC02PE93" class="headerlink" title="DC02PE93"></a>DC02PE93</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">DuLinkList <span class="title">delDuplicateDuLNodes</span><span class="params">(DuLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> L;</span><br><span class="line">    &#125;</span><br><span class="line">    DuLinkList p = L-&gt;next;</span><br><span class="line">    DuLinkList q = <span class="literal">NULL</span>;</span><br><span class="line">    DuLinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (q-&gt;data == p-&gt;data) &#123;</span><br><span class="line">                temp = q;</span><br><span class="line">                <span class="keyword">if</span>(q-&gt;next)</span><br><span class="line">                &#123;</span><br><span class="line">                    q-&gt;prior-&gt;next = q-&gt;next;</span><br><span class="line">                    q-&gt;next-&gt;prior = q-&gt;prior;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    q-&gt;prior-&gt;next = <span class="literal">NULL</span>;    </span><br><span class="line">                &#125;</span><br><span class="line">                q = q-&gt;next;</span><br><span class="line">                <span class="built_in">free</span>(temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                q = q-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE94"><a href="#DC02PE94" class="headerlink" title="DC02PE94"></a>DC02PE94</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverseDuLinkList</span><span class="params">(DuLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L || !L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DuLinkList p = L-&gt;next, q = <span class="literal">NULL</span>;</span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//q为下一个要插入到L节点后的节点</span></span><br><span class="line">        q = p-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将p节点插入到L节点直接后继</span></span><br><span class="line">        p-&gt;prior = L;</span><br><span class="line">        p-&gt;next = L-&gt;next; </span><br><span class="line">        <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;next-&gt;prior = p;</span><br><span class="line">        &#125;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line"></span><br><span class="line">        p = q;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE95"><a href="#DC02PE95" class="headerlink" title="DC02PE95"></a>DC02PE95</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverseDuCirLinkList</span><span class="params">(DuCirLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L || !L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//暂时保存头节点和首末节点的循环关系</span></span><br><span class="line">    DuLinkList p = L-&gt;next, q = <span class="literal">NULL</span>, lastFrontP = L-&gt;next;</span><br><span class="line">    <span class="comment">//将头节点与所以数据节点暂时切断链接</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    L-&gt;prior-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//q为下一个要插入到L节点后的节点</span></span><br><span class="line">        q = p-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将p节点插入到L节点直接后继</span></span><br><span class="line">        p-&gt;prior = L;</span><br><span class="line">        p-&gt;next = L-&gt;next; </span><br><span class="line">        <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;next-&gt;prior = p;</span><br><span class="line">        &#125;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line"></span><br><span class="line">        p = q;</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;prior = lastFrontP;</span><br><span class="line">    lastFrontP-&gt;next = L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE97"><a href="#DC02PE97" class="headerlink" title="DC02PE97"></a>DC02PE97</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InterleavedTravelDuCirLinkList</span><span class="params">(DuCirLinkList L, DuLNode* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    DuCirLinkList f = p-&gt;next, r = p-&gt;prior;</span><br><span class="line">    <span class="keyword">if</span> (f == p) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (f == r) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p != L)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,p-&gt;data); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,f-&gt;data); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(f == r)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(f == L || f == p)        <span class="comment">//对遍历时出现的特殊情况处理</span></span><br><span class="line">                f = f-&gt;next; </span><br><span class="line">                <span class="keyword">if</span>(f == r)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,f-&gt;data);   </span><br><span class="line">            f = f-&gt;next; </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(r == f)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(r == L || r == p)</span><br><span class="line">                r = r-&gt;prior; </span><br><span class="line">                <span class="keyword">if</span>(f == r)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,r-&gt;data);   </span><br><span class="line">            r = r-&gt;prior;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(r != L)                      <span class="comment">//如果重合遍历位置不是头结点，则输出</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,r-&gt;data);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p != L)                      <span class="comment">//如果起始位置不是头结点，则输出</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,p-&gt;data); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE98"><a href="#DC02PE98" class="headerlink" title="DC02PE98"></a>DC02PE98</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">isLeagalDuCirLinkList</span><span class="params">(DuCirLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="comment">//思路：根据双向循环链表定义，出现空节点一定是不合法，所以主要是做判空操作，还有前驱和后继节点判断</span></span><br><span class="line">    <span class="keyword">if</span> (!L) &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE; </span><br><span class="line">    &#125;</span><br><span class="line">    DuCirLinkList p = L-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(!p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p == L-&gt;prior)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p != L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;next) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;next-&gt;prior) &#123;</span><br><span class="line">                <span class="keyword">if</span>(p-&gt;next-&gt;prior == p)</span><br><span class="line">                &#123;</span><br><span class="line">                    p = p-&gt;next;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> FALSE;</span><br><span class="line">                &#125;       </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> FALSE;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第3章"><a href="#第3章" class="headerlink" title="第3章"></a>第3章</h2><h3 id="DC03PE01"><a href="#DC03PE01" class="headerlink" title="DC03PE01"></a>DC03PE01</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">conflictsOfInsertSort</span><span class="params">(RcdSqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; L-&gt;length; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (L-&gt;rcd[i + <span class="number">1</span>].key &lt; L-&gt;rcd[i].key)</span><br><span class="line">        &#123; </span><br><span class="line">            L-&gt;rcd[<span class="number">0</span>] = L-&gt;rcd[i + <span class="number">1</span>];</span><br><span class="line">            j = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                j--;</span><br><span class="line">                L-&gt;rcd[j + <span class="number">1</span>] = L-&gt;rcd[j];</span><br><span class="line">                ++result;</span><br><span class="line">            &#125; <span class="keyword">while</span> (L-&gt;rcd[<span class="number">0</span>].key &lt; L-&gt;rcd[j - <span class="number">1</span>].key); </span><br><span class="line">            L-&gt;rcd[j] = L-&gt;rcd[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC03PE03"><a href="#DC03PE03" class="headerlink" title="DC03PE03"></a>DC03PE03</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertSort</span><span class="params">(RcdSqList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; L.length; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.rcd[i<span class="number">+1</span>].key &lt; L.rcd[i].key) &#123;</span><br><span class="line">            L.rcd[L.length<span class="number">+1</span>].key = L.rcd[i<span class="number">+1</span>].key;</span><br><span class="line">            j = i<span class="number">+1</span>;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                j--;</span><br><span class="line">                L.rcd[j<span class="number">+1</span>].key = L.rcd[j].key;</span><br><span class="line">            &#125;<span class="keyword">while</span>(L.rcd[L.length<span class="number">+1</span>].key &lt; L.rcd[j<span class="number">-1</span>].key); </span><br><span class="line">            L.rcd[j].key = L.rcd[L.length<span class="number">+1</span>].key;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC03PE06"><a href="#DC03PE06" class="headerlink" title="DC03PE06"></a>DC03PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(RcdSqList2 &amp;L)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> change = L.length,temp_change = L.length;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; change; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">GT</span>(L.rcd[j],L.rcd[j<span class="number">+1</span>]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Swap</span>(L.rcd[j],L.rcd[j<span class="number">+1</span>]);</span><br><span class="line">                temp_change = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(change == temp_change)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        change = temp_change;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC03PE23"><a href="#DC03PE23" class="headerlink" title="DC03PE23"></a>DC03PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CountSort</span><span class="params">(RcdSqList2 &amp;L)</span>  </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> c[MAXSIZE<span class="number">+1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    KeyType a[MAXSIZE<span class="number">+1</span>] = &#123;<span class="number">0</span>&#125;;     <span class="comment">//保留初始序列，辅助后期对序列进行重新排列</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= L.length; ++i) &#123;</span><br><span class="line">        a[i] = L.rcd[i].key;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= L.length; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= L.length; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (L.rcd[j].key &lt; a[i]) &#123;</span><br><span class="line">                ++c[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= L.length; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (c[j] == i) &#123;</span><br><span class="line">                L.rcd[i<span class="number">+1</span>].key = a[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第4章"><a href="#第4章" class="headerlink" title="第4章"></a>第4章</h2><h3 id="DC04PE04"><a href="#DC04PE04" class="headerlink" title="DC04PE04"></a>DC04PE04</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintKeys</span><span class="params">(HashTable ht, <span class="type">void</span>(*print)(StrKeyType))</span></span>&#123;</span><br><span class="line"><span class="comment">/* 请调用形参中的print函数输出关键字 */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> letter = <span class="string">&#x27;A&#x27;</span>; letter &lt;= <span class="string">&#x27;Z&#x27;</span>; letter++) &#123;</span><br><span class="line">        <span class="type">int</span> i = (letter-<span class="string">&#x27;A&#x27;</span>)%ht.size;</span><br><span class="line">        <span class="keyword">while</span>(ht.rcd[i].tag != <span class="number">0</span>)       <span class="comment">//没到空，就线性往下搜索</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ht.rcd[i].tag == <span class="number">1</span> &amp;&amp; ht.rcd[i].key[<span class="number">0</span>] == letter) &#123; <span class="comment">//必须为有效位且第一位是该字母才输出</span></span><br><span class="line">                <span class="built_in">print</span>(ht.rcd[i].key);</span><br><span class="line">            &#125;</span><br><span class="line">            i = (i<span class="number">+1</span>)%ht.size;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC04PE15"><a href="#DC04PE15" class="headerlink" title="DC04PE15"></a>DC04PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">BuildHashTab</span><span class="params">(ChainHashTab &amp;H, <span class="type">int</span> n, HKeyType es[])</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    H.count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> isRepeat = FALSE;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        isRepeat = FALSE;</span><br><span class="line">        HLink q = H.rcd[<span class="built_in">Hash</span>(H,es[i])];</span><br><span class="line">        HLink p = (HLink)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> HNode));</span><br><span class="line">        p-&gt;data = es[i];</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (H.rcd[<span class="built_in">Hash</span>(H,es[i])]) &#123;</span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(q-&gt;data == es[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    isRepeat = TRUE;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">while</span> (<span class="built_in">Collision</span>(H,q));</span><br><span class="line">            <span class="keyword">if</span>(isRepeat)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">free</span>(p);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p-&gt;next = H.rcd[<span class="built_in">Hash</span>(H,es[i])];</span><br><span class="line">            H.rcd[<span class="built_in">Hash</span>(H,es[i])] = p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            H.rcd[<span class="built_in">Hash</span>(H,es[i])] = p;</span><br><span class="line">        &#125;</span><br><span class="line">        H.count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC04PE30"><a href="#DC04PE30" class="headerlink" title="DC04PE30"></a>DC04PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">countConflics</span><span class="params">(LHashTable H)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> confilcsTimes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; H.size; ++i)</span><br><span class="line">&#123;</span><br><span class="line">Node* p = H.rcd[i];</span><br><span class="line"><span class="keyword">if</span> (p) &#123;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line">++confilcsTimes;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">--confilcsTimes;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> confilcsTimes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC04PE35"><a href="#DC04PE35" class="headerlink" title="DC04PE35"></a>DC04PE35</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Node* <span class="title">searchLHash</span><span class="params">(LHashTable H, KeyType key, <span class="type">int</span> &amp;c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node* p = H.rcd[H.<span class="built_in">hash</span>(key,H.size)];</span><br><span class="line">c = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (p) &#123;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;r.key == key) &#123;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line">++c;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">--c;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第5章"><a href="#第5章" class="headerlink" title="第5章"></a>第5章</h2><h3 id="DC05PE04"><a href="#DC05PE04" class="headerlink" title="DC05PE04"></a>DC05PE04</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">G</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span> &amp;&amp; n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m &gt; <span class="number">0</span> &amp;&amp; n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">G</span>(m<span class="number">-1</span>,<span class="number">2</span>*n)+n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE05"><a href="#DC05PE05" class="headerlink" title="DC05PE05"></a>DC05PE05</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">F</span><span class="params">(<span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> n*<span class="built_in">F</span>(n/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE06"><a href="#DC05PE06" class="headerlink" title="DC05PE06"></a>DC05PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Sqrt</span><span class="params">(<span class="type">float</span> A, <span class="type">float</span> p, <span class="type">float</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(p*p-A) &lt; e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Sqrt</span>(A,(p+A/p)/<span class="number">2</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE07"><a href="#DC05PE07" class="headerlink" title="DC05PE07"></a>DC05PE07</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Akm</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">0</span> || n &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m != <span class="number">0</span> &amp;&amp; n == <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Akm</span>(m<span class="number">-1</span>,<span class="number">1</span>);        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m != <span class="number">0</span> &amp;&amp; n != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Akm</span>(m<span class="number">-1</span>,<span class="built_in">Akm</span>(m,n<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> n<span class="number">+1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE15"><a href="#DC05PE15" class="headerlink" title="DC05PE15"></a>DC05PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">F</span><span class="params">(<span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> rlt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        rlt = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt; <span class="number">0</span>; i/=<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rlt *= i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rlt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE16"><a href="#DC05PE16" class="headerlink" title="DC05PE16"></a>DC05PE16</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Sqrt</span><span class="params">(<span class="type">float</span> A, <span class="type">float</span> p, <span class="type">float</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">abs</span>(p*p-A) &gt;= e) &#123;</span><br><span class="line">        p = (p+A/p)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE20"><a href="#DC05PE20" class="headerlink" title="DC05PE20"></a>DC05PE20</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ChangeColor</span><span class="params">(GTYPE g, <span class="type">int</span> m, <span class="type">int</span> n, <span class="type">char</span> c, <span class="type">int</span> i0, <span class="type">int</span> j0)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="comment">// static char k;   ???  why Not ???</span></span><br><span class="line">    <span class="comment">// if(i0 &lt;= 0 || j0 &lt;= 0 || i0 &gt;= m+1 || j0 &gt;= n+1 || g[i0][j0] != k)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// else &#123;</span></span><br><span class="line">    <span class="comment">//     g[i0][j0] = c;</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0+1,j0);</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0-1,j0);</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0,j0+1);</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0,j0-1);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i0==<span class="number">0</span> || j0==<span class="number">0</span> || m&lt;<span class="number">1</span> || n&lt;<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span> k = g[i0][j0];</span><br><span class="line">    <span class="type">int</span> x[<span class="number">4</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> y[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(((i0+x[i] &gt; <span class="number">0</span> <span class="keyword">and</span> i0+x[i] &lt;= m) &amp;&amp; (j0+y[i] &gt; <span class="number">0</span> <span class="keyword">and</span> j0+y[i] &lt;= n)) &amp;&amp; g[i0+x[i]][j0+y[i]]==k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">ChangeColor</span>(g,m,n,c,i0+x[i],j0+y[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">             g[i0][j0]=c; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE26"><a href="#DC05PE26" class="headerlink" title="DC05PE26"></a>DC05PE26</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GListLength</span><span class="params">(GList L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> GListLength = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (L) &#123;</span><br><span class="line">    GListLength++;</span><br><span class="line">    GLNode* p = L-&gt;un.ptr.tp;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">      GListLength++;</span><br><span class="line">      p = p-&gt;un.ptr.tp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> GListLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE30"><a href="#DC05PE30" class="headerlink" title="DC05PE30"></a>DC05PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GListDepth</span><span class="params">(GList ls)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!ls) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ls-&gt;tag == ATOM) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> depth1,depth2;</span><br><span class="line">        depth1 = <span class="built_in">GListDepth</span>(ls-&gt;un.ptr.hp) + <span class="number">1</span>;</span><br><span class="line">        depth2 = <span class="built_in">GListDepth</span>(ls-&gt;un.ptr.tp);</span><br><span class="line">        <span class="keyword">return</span> depth1 &gt; depth2 ? depth1 : depth2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE32"><a href="#DC05PE32" class="headerlink" title="DC05PE32"></a>DC05PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Equal</span><span class="params">(GList A, GList B)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (A != <span class="literal">NULL</span> &amp;&amp; B != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (A-&gt;tag == LIST &amp;&amp; B-&gt;tag == ATOM || A-&gt;tag == ATOM &amp;&amp; B-&gt;tag == LIST) &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (A-&gt;tag == LIST &amp;&amp; B-&gt;tag == LIST) &#123;</span><br><span class="line">            <span class="built_in">return</span> (<span class="built_in">Equal</span>(A-&gt;un.ptr.hp,B-&gt;un.ptr.hp) &amp;&amp; <span class="built_in">Equal</span>(A-&gt;un.ptr.tp,B-&gt;un.ptr.tp));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (A-&gt;tag == ATOM &amp;&amp; B-&gt;tag == ATOM) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A-&gt;un.atom == B-&gt;un.atom) &#123;</span><br><span class="line">                <span class="keyword">return</span> TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (A == <span class="literal">NULL</span> &amp;&amp; B == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE33"><a href="#DC05PE33" class="headerlink" title="DC05PE33"></a>DC05PE33</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OutAtom</span><span class="params">(GList A, <span class="type">int</span> layer, <span class="type">void</span>(*Out2)(<span class="type">char</span>, <span class="type">int</span>))</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!A)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(A-&gt;tag == ATOM)    </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Out2</span>(A-&gt;un.atom, layer);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">OutAtom</span>(A-&gt;un.ptr.hp,layer<span class="number">+1</span>,Out2);</span><br><span class="line">            <span class="built_in">OutAtom</span>(A-&gt;un.ptr.tp,layer,Out2);  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第6章"><a href="#第6章" class="headerlink" title="第6章"></a>第6章</h2><h3 id="DC06PE01"><a href="#DC06PE01" class="headerlink" title="DC06PE01"></a>DC06PE01</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">commonAncestor</span><span class="params">(SqBiTree T, <span class="type">int</span> i, <span class="type">int</span> j)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="keyword">if</span> (i &lt; <span class="number">1</span> || j &lt; <span class="number">1</span> || i &gt; T.lastIndex || j &gt; T.lastIndex) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> tempParent_I = i/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span>(tempParent_I)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> tempJ = j;</span><br><span class="line">    <span class="keyword">while</span>(tempJ &gt; tempParent_I)</span><br><span class="line">    &#123;</span><br><span class="line">      tempJ /= <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span>(tempJ == tempParent_I)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> tempParent_I;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    tempParent_I /= <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE02"><a href="#DC06PE02" class="headerlink" title="DC06PE02"></a>DC06PE02</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">is_Desendant</span><span class="params">(SqBiTree T, <span class="type">int</span> u, <span class="type">int</span> v)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (u &lt; <span class="number">1</span> || v &lt; <span class="number">1</span> || u &gt; T.lastIndex || v &gt; T.lastIndex) &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(v &gt; u)</span><br><span class="line">    &#123;</span><br><span class="line">        v /= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (v == u) &#123;</span><br><span class="line">            <span class="keyword">return</span> TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE06"><a href="#DC06PE06" class="headerlink" title="DC06PE06"></a>DC06PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Similar</span><span class="params">(BiTree T1, BiTree T2)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T1 &amp;&amp; !T2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T1 || !T2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Similar</span>(T1-&gt;lchild,T2-&gt;lchild) &amp;&amp; <span class="built_in">Similar</span>(T1-&gt;rchild,T2-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE11"><a href="#DC06PE11" class="headerlink" title="DC06PE11"></a>DC06PE11</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getTreeNodeNum</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> T ? (<span class="number">1</span>+<span class="built_in">getTreeNodeNum</span>(T-&gt;lchild)+<span class="built_in">getTreeNodeNum</span>(T-&gt;rchild)):<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">TElemType <span class="title">PreOrderK</span><span class="params">(BiTree T, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T || k &lt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> count = <span class="built_in">getTreeNodeNum</span>(T-&gt;lchild);</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> T-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count &gt;= k<span class="number">-1</span> ? <span class="built_in">PreOrderK</span>(T-&gt;lchild,k<span class="number">-1</span>): <span class="built_in">PreOrderK</span>(T-&gt;rchild, k<span class="number">-1</span>-count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE12"><a href="#DC06PE12" class="headerlink" title="DC06PE12"></a>DC06PE12</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Leaves</span><span class="params">(BiTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; !T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Leaves</span>(T-&gt;lchild)+<span class="built_in">Leaves</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE21"><a href="#DC06PE21" class="headerlink" title="DC06PE21"></a>DC06PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrder</span><span class="params">(BiTree T, Status (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    Stack S;</span><br><span class="line">    <span class="built_in">InitStack</span>(S);</span><br><span class="line">    BiTree p;</span><br><span class="line">    <span class="built_in">Push</span>(S,T);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">StackEmpty</span>(S))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Pop</span>(S,p);</span><br><span class="line">        <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push</span>(S,p-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push</span>(S,p-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE23"><a href="#DC06PE23" class="headerlink" title="DC06PE23"></a>DC06PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printNoLessThanKey_InOrder</span><span class="params">(BiTree T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_InOrder</span>(T-&gt;lchild,k);</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;data &gt;= k) &#123;</span><br><span class="line">        <span class="built_in">printKey</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_InOrder</span>(T-&gt;rchild,k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE27"><a href="#DC06PE27" class="headerlink" title="DC06PE27"></a>DC06PE27</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printNoLessThanKey_PreOrder</span><span class="params">(BiTree T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;data &gt;= k) &#123;</span><br><span class="line">        <span class="built_in">printKey</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PreOrder</span>(T-&gt;lchild,k);</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PreOrder</span>(T-&gt;rchild,k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE29"><a href="#DC06PE29" class="headerlink" title="DC06PE29"></a>DC06PE29</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printNoLessThanKey_PostOrder</span><span class="params">(BiTree T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PostOrder</span>(T-&gt;lchild,k);</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PostOrder</span>(T-&gt;rchild,k);</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;data &gt;= k) &#123;</span><br><span class="line">        <span class="built_in">printKey</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE30"><a href="#DC06PE30" class="headerlink" title="DC06PE30"></a>DC06PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">isIsomorphic</span><span class="params">(BiTree T1, BiTree T2)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!T1 &amp;&amp; !T2) &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!(T1 || T2))&#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T1-&gt;data != T2-&gt;data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!T1-&gt;lchild &amp;&amp; !T2-&gt;lchild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;rchild,T2-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!T1-&gt;rchild &amp;&amp; !T2-&gt;rchild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;lchild,T2-&gt;lchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((T1-&gt;lchild &amp;&amp; T2-&gt;lchild) &amp;&amp; (T1-&gt;lchild-&gt;data == T2-&gt;lchild-&gt;data)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;lchild,T2-&gt;lchild) &amp;&amp; <span class="built_in">isIsomorphic</span>(T1-&gt;rchild, T2-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;lchild,T2-&gt;rchild) &amp;&amp; <span class="built_in">isIsomorphic</span>(T1-&gt;rchild, T2-&gt;lchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE31"><a href="#DC06PE31" class="headerlink" title="DC06PE31"></a>DC06PE31</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrder</span><span class="params">(BiTree bt, <span class="type">void</span> (*visit)(TElemType))</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    SqStack2 S;</span><br><span class="line">    <span class="built_in">InitStack_Sq2</span>(S);</span><br><span class="line">    BiTree p;</span><br><span class="line">    <span class="built_in">Push_Sq2</span>(S,bt);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">StackEmpty_Sq2</span>(S))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Pop_Sq2</span>(S,p);</span><br><span class="line">        <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push_Sq2</span>(S,p-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push_Sq2</span>(S,p-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE32"><a href="#DC06PE32" class="headerlink" title="DC06PE32"></a>DC06PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrder</span><span class="params">(BiTree bt, <span class="type">void</span> (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 使用栈，非递归后序遍历二叉树bt，    */</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 对每个结点的元素域data调用函数visit */</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SqStack2 S1;</span><br><span class="line">    <span class="built_in">InitStack_Sq2</span>(S1);</span><br><span class="line">    SElemType se;</span><br><span class="line">    se.tag = <span class="number">0</span>;</span><br><span class="line">    se.ptr = bt;</span><br><span class="line">    BiTree p = bt;</span><br><span class="line">    <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">StackEmpty_Sq2</span>(S1))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Pop_Sq2</span>(S1,se);</span><br><span class="line">        p = se.ptr;</span><br><span class="line">        <span class="keyword">if</span>(se.tag == <span class="number">1</span>)     <span class="comment">//若已经过了一次</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">visit</span>(se.ptr-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            se.tag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                se.ptr = p-&gt;rchild;</span><br><span class="line">                se.tag = <span class="number">0</span>; </span><br><span class="line">                <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                se.ptr = p-&gt;lchild;</span><br><span class="line">                se.tag = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE33"><a href="#DC06PE33" class="headerlink" title="DC06PE33"></a>DC06PE33</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ExchangeSubTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    BiTree temp = T-&gt;rchild;</span><br><span class="line">    T-&gt;rchild = T-&gt;lchild;</span><br><span class="line">    T-&gt;lchild = temp; </span><br><span class="line"></span><br><span class="line">    <span class="built_in">ExchangeSubTree</span>(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">ExchangeSubTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE34"><a href="#DC06PE34" class="headerlink" title="DC06PE34"></a>DC06PE34</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrder</span><span class="params">(TriTree bt, <span class="type">void</span> (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 不使用栈，非递归后序遍历二叉树bt，  */</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 对每个结点的元素域data调用函数visit */</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    TriTree p = bt;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;mark == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;lchild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">1</span>) &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;rchild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">            p = p-&gt;parent;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE35"><a href="#DC06PE35" class="headerlink" title="DC06PE35"></a>DC06PE35</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrder</span><span class="params">(TriTree PT, <span class="type">void</span> (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 不使用栈，非递归中序遍历二叉树bt，  */</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 对每个结点的元素域data调用函数visit */</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!PT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    TriTree p = PT;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;mark == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;lchild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">1</span>) &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">2</span>;</span><br><span class="line">            <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;rchild;</span><br><span class="line">            &#125;           </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">2</span>) &#123;</span><br><span class="line">            p = p-&gt;parent;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE36"><a href="#DC06PE36" class="headerlink" title="DC06PE36"></a>DC06PE36</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getTreeHeight</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> count=<span class="number">1</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(T-&gt;lchild!=<span class="literal">NULL</span>)  </span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">        T=T-&gt;lchild;</span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> count; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTNode* <span class="title">getLastNode</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 求完全二叉树的最后一层的最后一个结点 */</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;lchild == <span class="literal">NULL</span>)  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> T;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">getTreeHeight</span>(T-&gt;lchild) &gt; <span class="built_in">getTreeHeight</span>(T-&gt;rchild) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">getLastNode</span>(T-&gt;lchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">getLastNode</span>(T-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC06PE37"><a href="#DC06PE37" class="headerlink" title="DC06PE37"></a>DC06PE37</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">TElemType <span class="title">findParent</span><span class="params">(BiTree T, TElemType data, BiTNode* parent)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!T || T-&gt;data == data &amp;&amp; !parent) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;lchild &amp;&amp; T-&gt;lchild-&gt;data == data) &#123;</span><br><span class="line">        <span class="keyword">return</span> T-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;rchild &amp;&amp; T-&gt;rchild-&gt;data == data) &#123;</span><br><span class="line">        <span class="keyword">return</span> T-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">findParent</span>(T-&gt;lchild,data,T)?<span class="built_in">findParent</span>(T-&gt;lchild,data,T):<span class="built_in">findParent</span>(T-&gt;rchild,data,T);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE40"><a href="#DC06PE40" class="headerlink" title="DC06PE40"></a>DC06PE40</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">isBrother</span><span class="params">(BiTree T, TElemType dx, TElemType dy)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">     <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">          <span class="keyword">return</span> FALSE;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (T-&gt;lchild &amp;&amp; T-&gt;rchild) &#123;</span><br><span class="line">          <span class="keyword">if</span> (T-&gt;lchild-&gt;data == dx &amp;&amp; T-&gt;rchild-&gt;data == dy) &#123;</span><br><span class="line">               <span class="keyword">return</span> TRUE;</span><br><span class="line">          &#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (T-&gt;rchild-&gt;data == dx &amp;&amp; T-&gt;lchild-&gt;data == dy) &#123;</span><br><span class="line">               <span class="keyword">return</span> TRUE;</span><br><span class="line">          &#125;  </span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="built_in">isBrother</span>(T-&gt;lchild,dx,dy) || <span class="built_in">isBrother</span>(T-&gt;rchild,dx,dy);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE43"><a href="#DC06PE43" class="headerlink" title="DC06PE43"></a>DC06PE43</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CopyBiTree</span><span class="params">(BiTree T, BiTree &amp;TT)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    TT = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">    TT-&gt;data = T-&gt;data;</span><br><span class="line">    TT-&gt;lchild = T-&gt;lchild;</span><br><span class="line">    TT-&gt;rchild = T-&gt;rchild;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CopyBiTree</span>(T-&gt;lchild,TT-&gt;lchild);</span><br><span class="line">    <span class="built_in">CopyBiTree</span>(T-&gt;rchild,TT-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE44"><a href="#DC06PE44" class="headerlink" title="DC06PE44"></a>DC06PE44</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Depthx</span><span class="params">(BiTree T, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> deepth1,deepth2;  </span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data==x)  </span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;lchild==<span class="literal">NULL</span>)</span><br><span class="line">            deepth1=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;</span><br><span class="line">            deepth1 = <span class="built_in">Depthx</span>(T-&gt;lchild,T-&gt;lchild-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;rchild==<span class="literal">NULL</span>)</span><br><span class="line">            deepth2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            deepth2 = <span class="built_in">Depthx</span>(T-&gt;rchild,T-&gt;rchild-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + (deepth1&gt;deepth2?deepth1:deepth2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        deepth1=<span class="built_in">Depthx</span>(T-&gt;lchild,x);</span><br><span class="line">        deepth2=<span class="built_in">Depthx</span>(T-&gt;rchild,x);</span><br><span class="line">        <span class="keyword">return</span>  deepth1&gt;deepth2?deepth1:deepth2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE45"><a href="#DC06PE45" class="headerlink" title="DC06PE45"></a>DC06PE45</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReleaseX</span><span class="params">(BiTree &amp;bt, <span class="type">char</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(bt-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (bt-&gt;lchild) &#123;</span><br><span class="line">            <span class="built_in">ReleaseX</span>(bt-&gt;lchild,bt-&gt;lchild-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (bt-&gt;rchild) &#123;</span><br><span class="line">            <span class="built_in">ReleaseX</span>(bt-&gt;rchild,bt-&gt;rchild-&gt;data);     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if(!bt-&gt;lchild &amp;&amp; !bt-&gt;rchild)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="built_in">free</span>(bt);</span><br><span class="line">        bt = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">ReleaseX</span>(bt-&gt;lchild,x);</span><br><span class="line">        <span class="built_in">ReleaseX</span>(bt-&gt;rchild,x);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC06PE46"><a href="#DC06PE46" class="headerlink" title="DC06PE46"></a>DC06PE46</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CopyBiTree</span><span class="params">(BiTree T, BiTree &amp;TT)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    TT=(BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">    TT-&gt;data = T-&gt;data;</span><br><span class="line">    TT-&gt;lchild = TT-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">    LQueue Q_T,Q_TT;</span><br><span class="line">    BiTree temp=TT;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q_T);</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q_TT);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q_T,T);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q_TT,temp);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">QueueEmpty_LQ</span>(Q_T)!=TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">DeQueue_LQ</span>(Q_T,T);</span><br><span class="line">        <span class="built_in">DeQueue_LQ</span>(Q_TT,temp);  </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp-&gt;lchild = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">            temp-&gt;lchild-&gt;data = T-&gt;lchild-&gt;data;</span><br><span class="line">            temp-&gt;lchild-&gt;lchild = temp-&gt;lchild-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_T,T-&gt;lchild);</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_TT,temp-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp-&gt;rchild = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">            temp-&gt;rchild-&gt;data = T-&gt;rchild-&gt;data;</span><br><span class="line">            temp-&gt;rchild-&gt;lchild = temp-&gt;rchild-&gt;rchild = <span class="literal">NULL</span>; </span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_T,T-&gt;rchild);</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_TT,temp-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE47"><a href="#DC06PE47" class="headerlink" title="DC06PE47"></a>DC06PE47</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LevelOrder</span><span class="params">(BiTree bt, <span class="type">char</span> *ss)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span>* ss_temp = ss;</span><br><span class="line">    BiTree temp = <span class="literal">NULL</span>;</span><br><span class="line">    LQueue Q1;</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q1);</span><br><span class="line"></span><br><span class="line">    *ss_temp++ = bt-&gt;data;</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q1,bt);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">DeQueue_LQ</span>(Q1,temp)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(temp-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *ss_temp++ = temp-&gt;lchild-&gt;data;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q1,temp-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *ss_temp++ = temp-&gt;rchild-&gt;data;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q1,temp-&gt;rchild);            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *ss_temp = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE48"><a href="#DC06PE48" class="headerlink" title="DC06PE48"></a>DC06PE48</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree root, TElemType target, SqStack2&amp; path)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTree <span class="title">CommAncestor</span><span class="params">(BiTree root, TElemType c1, TElemType c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">if</span>(!root || root-&gt;data == c1 || root-&gt;data == c2)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   BiTree parent = <span class="literal">NULL</span>;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = <span class="literal">NULL</span>;</span><br><span class="line">   SqStack2 S1,S2,Sq,Sp;</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(S1);</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(S2);</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(Sq);</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(Sp);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(!<span class="built_in">findPath</span>(root,c1,Sp) || !<span class="built_in">findPath</span>(root,c2,Sq))</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> (!<span class="built_in">StackEmpty_Sq2</span>(Sp)) &#123;</span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(Sp,temp);</span><br><span class="line">      <span class="built_in">Push_Sq2</span>(S1,temp);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> (!<span class="built_in">StackEmpty_Sq2</span>(Sq)) &#123;</span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(Sq,temp);</span><br><span class="line">      <span class="built_in">Push_Sq2</span>(S2,temp);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   SElemType temp1,temp2;</span><br><span class="line">   temp<span class="number">1.</span>ptr = temp<span class="number">2.</span>ptr = <span class="literal">NULL</span>;</span><br><span class="line">   <span class="keyword">do</span>&#123;</span><br><span class="line">      parent = temp<span class="number">1.</span>ptr;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">GetTop_Sq2</span>(S1,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == c1) <span class="keyword">break</span>;</span><br><span class="line">      <span class="built_in">GetTop_Sq2</span>(S2,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == c2) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(S1,temp1);</span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(S2,temp2);</span><br><span class="line">   &#125;<span class="keyword">while</span>(temp<span class="number">1.</span>ptr == temp<span class="number">2.</span>ptr);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree root, TElemType target, SqStack2&amp; path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (!root) &#123;</span><br><span class="line">      <span class="keyword">return</span> FALSE;</span><br><span class="line">   &#125;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = root;</span><br><span class="line">   <span class="built_in">Push_Sq2</span>(path,temp);</span><br><span class="line">   <span class="keyword">if</span>(root-&gt;data == target)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> TRUE;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>((root-&gt;lchild &amp;&amp; <span class="built_in">findPath</span>(root-&gt;lchild,target,path)) || (root-&gt;rchild &amp;&amp; <span class="built_in">findPath</span>(root-&gt;rchild,target,path)))</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">Pop_Sq2</span>(path,temp);</span><br><span class="line">   <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE49"><a href="#DC06PE49" class="headerlink" title="DC06PE49"></a>DC06PE49</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">CompleteBiTree</span><span class="params">(BiTree bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> hasNullBefore = FALSE;</span><br><span class="line">    LQueue Q;</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q,bt);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">DeQueue_LQ</span>(Q,bt))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(bt-&gt;lchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!hasNullBefore)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">EnQueue_LQ</span>(Q,bt-&gt;lchild);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            hasNullBefore = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bt-&gt;rchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!hasNullBefore)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">EnQueue_LQ</span>(Q,bt-&gt;rchild);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            hasNullBefore = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE50"><a href="#DC06PE50" class="headerlink" title="DC06PE50"></a>DC06PE50</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status  <span class="title">BTEqual</span><span class="params">(BiTree T1, BiTree T2)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T1 &amp;&amp; !T2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T1 || !T2)&#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T1-&gt;data == T2-&gt;data &amp;&amp; <span class="built_in">BTEqual</span>(T1-&gt;lchild,T2-&gt;lchild) &amp;&amp; <span class="built_in">BTEqual</span>(T1-&gt;rchild,T2-&gt;rchild))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE51"><a href="#DC06PE51" class="headerlink" title="DC06PE51"></a>DC06PE51</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Degree1</span><span class="params">(BiTree T,<span class="type">int</span> &amp;count)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; !T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T-&gt;lchild || !T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Degree1</span>(T-&gt;lchild,count);</span><br><span class="line">    <span class="built_in">Degree1</span>(T-&gt;rchild,count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE52"><a href="#DC06PE52" class="headerlink" title="DC06PE52"></a>DC06PE52</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">BranchNodes</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; !T-&gt;rchild)    <span class="comment">//判断是否为叶子节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">BranchNodes</span>(T-&gt;lchild) + <span class="built_in">BranchNodes</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE53"><a href="#DC06PE53" class="headerlink" title="DC06PE53"></a>DC06PE53</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LevelSum</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    LQueue Q;</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q,T);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">DeQueue_LQ</span>(Q,T)) &#123;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;lchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q,T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;rchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q,T-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE54"><a href="#DC06PE54" class="headerlink" title="DC06PE54"></a>DC06PE54</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ChangeTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; T-&gt;rchild) <span class="comment">//如果T没有左孩子但有右孩子</span></span><br><span class="line">    &#123;</span><br><span class="line">        T-&gt;lchild = T-&gt;rchild;</span><br><span class="line">        T-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ChangeTree</span>(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">ChangeTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE55"><a href="#DC06PE55" class="headerlink" title="DC06PE55"></a>DC06PE55</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Width</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    queue&lt;BiTNode*&gt;q;</span><br><span class="line">    q.<span class="built_in">push</span>(T);</span><br><span class="line">    <span class="type">int</span> width = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        width = q.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(width &gt; res) res = width;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;width; i++)&#123;</span><br><span class="line">            BiTNode *node = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;lchild) q.<span class="built_in">push</span>(node-&gt;lchild);</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;rchild) q.<span class="built_in">push</span>(node-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE56"><a href="#DC06PE56" class="headerlink" title="DC06PE56"></a>DC06PE56</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">SearchX</span><span class="params">(BiTree T, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">SearchX</span>(T-&gt;lchild,x) || <span class="built_in">SearchX</span>(T-&gt;rchild,x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE57"><a href="#DC06PE57" class="headerlink" title="DC06PE57"></a>DC06PE57</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">NodeLevel</span><span class="params">(BiTree t, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(t-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> level1,level2;</span><br><span class="line">    level1=<span class="built_in">NodeLevel</span>(t-&gt;lchild,x);</span><br><span class="line">    level2=<span class="built_in">NodeLevel</span>(t-&gt;rchild,x);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(level1!=<span class="number">-1</span> )</span><br><span class="line">        <span class="keyword">return</span> (level1<span class="number">+1</span>);</span><br><span class="line">    <span class="keyword">if</span>(level2!=<span class="number">-1</span>)  </span><br><span class="line">        <span class="keyword">return</span> (level2<span class="number">+1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE58"><a href="#DC06PE58" class="headerlink" title="DC06PE58"></a>DC06PE58</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">countTree</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>+<span class="built_in">countTree</span>(T-&gt;lchild)+<span class="built_in">countTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">xSum</span><span class="params">(BiTree T, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">countTree</span>(T);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> count1,count2;</span><br><span class="line">    count1 = <span class="built_in">xSum</span>(T-&gt;lchild,x);</span><br><span class="line">    count2 = <span class="built_in">xSum</span>(T-&gt;rchild,x);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> count1&gt;count2?count1:count2; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE59"><a href="#DC06PE59" class="headerlink" title="DC06PE59"></a>DC06PE59</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">xLevel</span><span class="params">(BiTree T,TElemType x, <span class="type">bool</span> &amp;found, <span class="type">int</span> &amp;xlev)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        found = FALSE;</span><br><span class="line">        xlev = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        found = TRUE;</span><br><span class="line">        xlev++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        xlev++;</span><br><span class="line">        <span class="type">int</span> temp=xlev;                  <span class="comment">//记录当前层次，用于后面回溯</span></span><br><span class="line">        <span class="built_in">xLevel</span>(T-&gt;lchild,x,found,xlev);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span>(!found)</span><br><span class="line">        &#123; </span><br><span class="line">            xlev=temp;</span><br><span class="line">            <span class="built_in">xLevel</span>(T-&gt;rchild,x,found,xlev); </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE60"><a href="#DC06PE60" class="headerlink" title="DC06PE60"></a>DC06PE60</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">RegularBiTree</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)      <span class="comment">//空树</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(T-&gt;lchild &amp;&amp; T-&gt;rchild || !T-&gt;lchild &amp;&amp; !T-&gt;rchild))   <span class="comment">//若度为1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RegularBiTree</span>(T-&gt;lchild) &amp;&amp; <span class="built_in">RegularBiTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC06PE61"><a href="#DC06PE61" class="headerlink" title="DC06PE61"></a>DC06PE61</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">SmallBiTree</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> small1 = TRUE,small2 = TRUE;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;lchild) &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data &lt; T-&gt;lchild-&gt;data)</span><br><span class="line">        &#123;</span><br><span class="line">            small1 = <span class="built_in">SmallBiTree</span>(T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            small1 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;rchild) &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data &lt; T-&gt;rchild-&gt;data)</span><br><span class="line">        &#123;</span><br><span class="line">            small2 = <span class="built_in">SmallBiTree</span>(T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            small2 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> small1 &amp;&amp; small2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE62"><a href="#DC06PE62" class="headerlink" title="DC06PE62"></a>DC06PE62</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Width</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    queue&lt;BiTNode*&gt;q;</span><br><span class="line">    q.<span class="built_in">push</span>(T);</span><br><span class="line">    <span class="type">int</span> width = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        width = q.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(width &gt; res) res = width;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;width; i++)&#123;</span><br><span class="line">            BiTNode *node = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;lchild) q.<span class="built_in">push</span>(node-&gt;lchild);</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;rchild) q.<span class="built_in">push</span>(node-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE65"><a href="#DC06PE65" class="headerlink" title="DC06PE65"></a>DC06PE65</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    way1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Status IsBSTree(BSTree T) </span></span><br><span class="line"><span class="comment">// &#123;   // Add your code here</span></span><br><span class="line"><span class="comment">//     if(!T)</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         return TRUE;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     if(T-&gt;lchild)</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         if(T-&gt;data.key &lt; T-&gt;lchild-&gt;data.key)</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             return FALSE;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     if(T-&gt;rchild)</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         if(T-&gt;data.key &gt; T-&gt;rchild-&gt;data.key)</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             return FALSE;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     return IsBSTree(T-&gt;lchild) &amp;&amp; IsBSTree(T-&gt;rchild);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    way2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">IsBSTree</span><span class="params">(BSTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> flag1,flag2;</span><br><span class="line">    flag1 = flag2 = TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;lchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data.key &gt; T-&gt;lchild-&gt;data.key)</span><br><span class="line">        &#123;</span><br><span class="line">            flag1 = <span class="built_in">IsBSTree</span>(T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            flag1 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data.key &lt; T-&gt;rchild-&gt;data.key)</span><br><span class="line">        &#123;</span><br><span class="line">            flag2 = <span class="built_in">IsBSTree</span>(T-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            flag2 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flag1 &amp;&amp; flag2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE66"><a href="#DC06PE66" class="headerlink" title="DC06PE66"></a>DC06PE66</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OrderOut</span><span class="params">(BSTree T, KeyType k, <span class="type">void</span>(*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">OrderOut</span>(T-&gt;rchild,k,visit);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data.key &gt;= k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">visit</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">OrderOut</span>(T-&gt;lchild,k,visit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE67"><a href="#DC06PE67" class="headerlink" title="DC06PE67"></a>DC06PE67</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">InsertBST_I</span><span class="params">(BSTree &amp;T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        T = (BSTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">        T-&gt;lchild = T-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">        T-&gt;data = k;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BSTree temp = T;</span><br><span class="line">    <span class="keyword">while</span>(temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//二叉搜索树，遵循左小右大原则，左子树节点值比根节点值小，右子树节点值比根节点值大</span></span><br><span class="line">        <span class="keyword">if</span>(temp-&gt;data.key &lt; k.key)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = temp-&gt;rchild;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                temp-&gt;rchild = (BSTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">                temp-&gt;rchild-&gt;data = k;</span><br><span class="line">                temp-&gt;rchild-&gt;lchild = temp-&gt;rchild-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">                <span class="keyword">return</span> TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp-&gt;data.key &gt; k.key)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = temp-&gt;lchild;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                temp-&gt;lchild = (BSTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">                temp-&gt;lchild-&gt;data = k;</span><br><span class="line">                temp-&gt;lchild-&gt;lchild = temp-&gt;lchild-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">                <span class="keyword">return</span> TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;      <span class="comment">//已经有等于k的值，插入不进去</span></span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE68"><a href="#DC06PE68" class="headerlink" title="DC06PE68"></a>DC06PE68</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree T, TElemType target, Stack&amp; path)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTree <span class="title">CommAncestor</span><span class="params">(BiTree T, TElemType a, TElemType b)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">if</span>(!T || T-&gt;data == a || T-&gt;data == b)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   BiTree parent = <span class="literal">NULL</span>;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = <span class="literal">NULL</span>;</span><br><span class="line">   Stack S1,S2,Sq,Sp;</span><br><span class="line">   <span class="built_in">InitStack</span>(S1);</span><br><span class="line">   <span class="built_in">InitStack</span>(S2);</span><br><span class="line">   <span class="built_in">InitStack</span>(Sq);</span><br><span class="line">   <span class="built_in">InitStack</span>(Sp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">findPath</span>(T,a,Sp) || !<span class="built_in">findPath</span>(T,b,Sq))      <span class="comment">//若任意一个元素在树中不存在</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">StackEmpty</span>(Sp)) &#123;</span><br><span class="line">        <span class="built_in">Pop</span>(Sp,temp);</span><br><span class="line">        <span class="built_in">Push</span>(S1,temp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">StackEmpty</span>(Sq)) &#123;</span><br><span class="line">        <span class="built_in">Pop</span>(Sq,temp);</span><br><span class="line">        <span class="built_in">Push</span>(S2,temp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   SElemType temp1,temp2;</span><br><span class="line">   temp<span class="number">1.</span>ptr = temp<span class="number">2.</span>ptr = <span class="literal">NULL</span>;</span><br><span class="line">   <span class="keyword">do</span>&#123;</span><br><span class="line">      parent = temp<span class="number">1.</span>ptr;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">GetTop</span>(S1,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == a) <span class="keyword">break</span>;</span><br><span class="line">      <span class="built_in">GetTop</span>(S2,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == b) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">Pop</span>(S1,temp1);</span><br><span class="line">      <span class="built_in">Pop</span>(S2,temp2);</span><br><span class="line">   &#125;<span class="keyword">while</span>(temp<span class="number">1.</span>ptr == temp<span class="number">2.</span>ptr);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree T, TElemType target, Stack&amp; path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">      <span class="keyword">return</span> FALSE;</span><br><span class="line">   &#125;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = T;</span><br><span class="line">   <span class="built_in">Push</span>(path,temp);</span><br><span class="line">   <span class="keyword">if</span>(T-&gt;data == target)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> TRUE;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>((T-&gt;lchild &amp;&amp; <span class="built_in">findPath</span>(T-&gt;lchild,target,path)) || (T-&gt;rchild &amp;&amp; <span class="built_in">findPath</span>(T-&gt;rchild,target,path)))</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">Pop</span>(path,temp);</span><br><span class="line">   <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE69"><a href="#DC06PE69" class="headerlink" title="DC06PE69"></a>DC06PE69</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">treeToString</span><span class="params">(BiTree T, string &amp;str)</span></span>;</span><br><span class="line"><span class="function"><span class="type">char</span>* <span class="title">BiTree2String</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    string str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">treeToString</span>(T, str);</span><br><span class="line">    <span class="type">char</span> *res = <span class="keyword">new</span> <span class="type">char</span>[str.<span class="built_in">size</span>() + <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(res, str.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">treeToString</span><span class="params">(BiTree T, string &amp;str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">        str += <span class="string">&quot;#&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    str += T-&gt;data; </span><br><span class="line">    <span class="keyword">if</span> (T-&gt;lchild || T-&gt;rchild) &#123;</span><br><span class="line">        str += <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">        <span class="built_in">treeToString</span>(T-&gt;lchild, str);</span><br><span class="line">        str += <span class="string">&#x27;,&#x27;</span>;</span><br><span class="line">        <span class="built_in">treeToString</span>(T-&gt;rchild, str);</span><br><span class="line">        str += <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE75"><a href="#DC06PE75" class="headerlink" title="DC06PE75"></a>DC06PE75</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">BSTNode *<span class="title">Ranking</span><span class="params">(BSTree T, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)                  <span class="comment">//空树或者没找到</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;lsize == k)       <span class="comment">//找到了第k小结点</span></span><br><span class="line">        <span class="keyword">return</span> T;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (T-&gt;lsize &lt; k)  <span class="comment">//往右找</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Ranking</span>(T-&gt;rchild,k-(T-&gt;lsize));</span><br><span class="line">    <span class="keyword">else</span>                    <span class="comment">//往左找</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Ranking</span>(T-&gt;lchild,k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第7章"><a href="#第7章" class="headerlink" title="第7章"></a>第7章</h2><h3 id="DC07PE15"><a href="#DC07PE15" class="headerlink" title="DC07PE15"></a>DC07PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Leave</span><span class="params">(CSTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;firstChild)  <span class="comment">//该节点没有儿子,说明是叶子节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">Leave</span>(T-&gt;nextSibling);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Leave</span>(T-&gt;firstChild) + <span class="built_in">Leave</span>(T-&gt;nextSibling);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE17"><a href="#DC07PE17" class="headerlink" title="DC07PE17"></a>DC07PE17</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Degree</span><span class="params">(CSTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> currentDegree = <span class="number">0</span>,childMaxDegree = <span class="number">0</span>;</span><br><span class="line">    CSTree temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;firstChild)</span><br><span class="line">    &#123;</span><br><span class="line">        currentDegree++;</span><br><span class="line">        temp = T-&gt;firstChild-&gt;nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(temp)</span><br><span class="line">    &#123;</span><br><span class="line">        currentDegree++;</span><br><span class="line">        temp = temp-&gt;nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line">    childMaxDegree = <span class="built_in">Degree</span>(T-&gt;firstChild) &gt; <span class="built_in">Degree</span>(T-&gt;nextSibling) ? <span class="built_in">Degree</span>(T-&gt;firstChild):<span class="built_in">Degree</span>(T-&gt;nextSibling);</span><br><span class="line">    <span class="keyword">return</span> currentDegree &gt; childMaxDegree ?currentDegree:childMaxDegree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE22"><a href="#DC07PE22" class="headerlink" title="DC07PE22"></a>DC07PE22</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">PTreeDepth</span><span class="params">(PTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T.nodes)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> depth = <span class="number">1</span>;  <span class="comment">//若只有一个结点，则深度为1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = T.nodeNum<span class="number">-1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = i,tempDepth = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(t != T.r)</span><br><span class="line">        &#123;</span><br><span class="line">            tempDepth++;</span><br><span class="line">            t = T.nodes[t].parent;</span><br><span class="line">        &#125;</span><br><span class="line">        depth = depth &gt; tempDepth ? depth: tempDepth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> depth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE24"><a href="#DC07PE24" class="headerlink" title="DC07PE24"></a>DC07PE24</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">PCTreeDepth</span><span class="params">(PCTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(T.n == <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> depth = <span class="number">0</span>, n = T.n;</span><br><span class="line">    PCTreeNode node;</span><br><span class="line">    <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        node = T.nodes[--n];</span><br><span class="line">        <span class="keyword">while</span>(node.parent != <span class="number">-1</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            node = T.nodes[node.parent];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count &gt; depth) depth = count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> depth + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE26"><a href="#DC07PE26" class="headerlink" title="DC07PE26"></a>DC07PE26</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">TreeDepth</span><span class="params">(CSTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>+<span class="built_in">TreeDepth</span>(T-&gt;firstChild)&gt;<span class="built_in">TreeDepth</span>(T-&gt;nextSibling)?<span class="number">1</span>+<span class="built_in">TreeDepth</span>(T-&gt;firstChild):<span class="built_in">TreeDepth</span>(T-&gt;nextSibling);</span><br><span class="line">    <span class="comment">// 一种比较简洁的写法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE63"><a href="#DC07PE63" class="headerlink" title="DC07PE63"></a>DC07PE63</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(MFSet S, <span class="type">int</span> i)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= S.n)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="type">int</span> parent = i, temp = i;</span><br><span class="line">    <span class="keyword">while</span> (S.parent[parent] &gt;= <span class="number">0</span>)       <span class="comment">//若还没到根结点</span></span><br><span class="line">        parent = S.parent[parent];</span><br><span class="line">    <span class="keyword">while</span> (S.parent[i] &gt;= <span class="number">0</span> &amp;&amp; i &gt;= <span class="number">0</span>)  <span class="comment">//对路径上经过的结点进行路径压缩</span></span><br><span class="line">    &#123;</span><br><span class="line">        temp = S.parent[i];</span><br><span class="line">        S.parent[i] = parent;</span><br><span class="line">        i = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第8章"><a href="#第8章" class="headerlink" title="第8章"></a>第8章</h2><h3 id="DC08PE12"><a href="#DC08PE12" class="headerlink" title="DC08PE12"></a>DC08PE12</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateDG</span><span class="params">(MGraph &amp;G, VexType *vexs, <span class="type">int</span> n,</span></span></span><br><span class="line"><span class="params"><span class="function">                           ArcInfo *arcs, <span class="type">int</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">InitGraph</span>(G,DG,n))</span><br><span class="line">    &#123;</span><br><span class="line">        G.n = n;</span><br><span class="line">        G.e = e;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            G.vexs[i] = vexs[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; MAX_VEX_NUM; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; MAX_VEX_NUM; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                G.arcs[i][j].adj = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; e; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            G.arcs[<span class="built_in">LocateVex</span>(G,arcs[i].v)][<span class="built_in">LocateVex</span>(G,arcs[i].w)].adj = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE15"><a href="#DC08PE15" class="headerlink" title="DC08PE15"></a>DC08PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">NextAdjVex</span><span class="params">(MGraph G, <span class="type">int</span> k, <span class="type">int</span> m)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(G.n == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(k &lt; <span class="number">0</span> || k &gt; G.n || G.e &lt; <span class="number">2</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=m<span class="number">+1</span>; i&lt;G.n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(G.kind == UDG || G.kind == DG &amp;&amp; G.arcs[k][i].adj == <span class="number">1</span> &amp;&amp; i != k) </span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        <span class="comment">// if(G.arcs[k][i].adj != INFINITY &amp;&amp; i != k) </span></span><br><span class="line">        <span class="comment">//     return i;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE17"><a href="#DC08PE17" class="headerlink" title="DC08PE17"></a>DC08PE17</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">SetArc</span><span class="params">(MGraph &amp;G, VexType v, VexType w, ArcCell info)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> k = <span class="built_in">LocateVex</span>(G,v);</span><br><span class="line">    <span class="type">int</span> m = <span class="built_in">LocateVex</span>(G,w);</span><br><span class="line">    <span class="keyword">if</span> (k &lt; <span class="number">0</span> || k &gt;= G.n || m &lt; <span class="number">0</span> || m &gt;= G.n)</span><br><span class="line">        <span class="keyword">return</span> ERROR;   <span class="comment">// k顶点或m顶点不存在</span></span><br><span class="line">    <span class="keyword">if</span>(G.kind == UDG || G.kind == UDN)</span><br><span class="line">        G.arcs[k][m] = G.arcs[m][k] = info;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        G.arcs[k][m] = info;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE21"><a href="#DC08PE21" class="headerlink" title="DC08PE21"></a>DC08PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">outDegree</span><span class="params">(ALGraph G, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(k &lt; <span class="number">0</span> || k &gt;= G.n)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> out_degree = <span class="number">0</span>;</span><br><span class="line">    AdjVexNodeP p = G.vexs[k].firstArc;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        out_degree++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> out_degree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE32"><a href="#DC08PE32" class="headerlink" title="DC08PE32"></a>DC08PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateDG</span><span class="params">(ALGraph &amp;G, VexType *vexs, <span class="type">int</span> n,</span></span></span><br><span class="line"><span class="params"><span class="function">                            ArcInfo *arcs, <span class="type">int</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    VexType v, w;</span><br><span class="line">    AdjVexNodeP p;</span><br><span class="line">    G.n = n;</span><br><span class="line">    G.e = e;</span><br><span class="line">    G.tags = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        G.vexs[i].data = vexs[i];</span><br><span class="line">        G.vexs[i].firstArc = <span class="literal">NULL</span>;</span><br><span class="line">        G.tags[i] = UNVISITED;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; G.e; ++k)</span><br><span class="line">    &#123;</span><br><span class="line">        v = arcs[k].v;</span><br><span class="line">        w = arcs[k].w;</span><br><span class="line">        i = <span class="built_in">LocateVex</span>(G, v);</span><br><span class="line">        j = <span class="built_in">LocateVex</span>(G, w);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || j &lt; <span class="number">0</span>) <span class="comment">// v或w顶点不存在</span></span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        <span class="comment">// 有向边创建,只需要创建一条</span></span><br><span class="line">        p = (AdjVexNodeP)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(AdjVexNode));</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        p-&gt;info = <span class="number">1</span>;</span><br><span class="line">        p-&gt;adjvex = j;</span><br><span class="line">        p-&gt;next = G.vexs[i].firstArc;</span><br><span class="line">        G.vexs[i].firstArc = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE34"><a href="#DC08PE34" class="headerlink" title="DC08PE34"></a>DC08PE34</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateUDG</span><span class="params">(ALGraph &amp;G, VexType *vexs, <span class="type">int</span> n,</span></span></span><br><span class="line"><span class="params"><span class="function">                             ArcInfo *arcs, <span class="type">int</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    VexType v, w;</span><br><span class="line">    AdjVexNodeP p;</span><br><span class="line">    G.n = n;</span><br><span class="line">    G.e = e;</span><br><span class="line">    G.tags = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        G.vexs[i].data = vexs[i];</span><br><span class="line">        G.vexs[i].firstArc = <span class="literal">NULL</span>;</span><br><span class="line">        G.tags[i] = UNVISITED;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; G.e; ++k)</span><br><span class="line">    &#123;</span><br><span class="line">        v = arcs[k].v;</span><br><span class="line">        w = arcs[k].w;</span><br><span class="line">        <span class="keyword">if</span> (v == w) <span class="comment">// 无向图无自环</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        i = <span class="built_in">LocateVex</span>(G, v);</span><br><span class="line">        j = <span class="built_in">LocateVex</span>(G, w);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || j &lt; <span class="number">0</span>) <span class="comment">// v或w顶点不存在</span></span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        <span class="comment">// 无向边创建,需要创建两条</span></span><br><span class="line">        p = (AdjVexNodeP)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(AdjVexNode));</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        p-&gt;info = <span class="number">1</span>;</span><br><span class="line">        p-&gt;adjvex = j;</span><br><span class="line">        p-&gt;next = G.vexs[i].firstArc;</span><br><span class="line">        G.vexs[i].firstArc = p;</span><br><span class="line"></span><br><span class="line">        p = (AdjVexNodeP)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(AdjVexNode));</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        p-&gt;info = <span class="number">1</span>;</span><br><span class="line">        p-&gt;adjvex = i;</span><br><span class="line">        p-&gt;next = G.vexs[j].firstArc;</span><br><span class="line">        G.vexs[j].firstArc = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>代码基本都是我手敲的，若有纰漏，还请见谅。</p><p>也欢迎大家及时指正，更新题库。</p><p>原仓库地址<a href="https://github.com/WiseL00k/DS_Anyview">点我</a></p><p><a href="https://github.com/WiseL00k">By WiseL00k</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Anyview </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anyview程序设计参考代码</title>
      <link href="/posts/983e5740.html"/>
      <url>/posts/983e5740.html</url>
      
        <content type="html"><![CDATA[<h1 id="Anyview程序设计参考代码"><a href="#Anyview程序设计参考代码" class="headerlink" title="Anyview程序设计参考代码"></a>Anyview程序设计参考代码</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>可能会有些错误，仅供参考！！！</p><p><del>请不要做CV工程师</del>，系统有查重！</p><p>考虑到题库每年都可能更新，题目不一定完全一致。</p><p>也欢迎大家PR，纠正更新题库。</p><span id="more"></span><p><a href="https://github.com/WiseL00k/C_Anyview" class="github-corner" aria-label="View source on GitHub"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#64CEAA; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"/><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"/><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"/></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style></p><h2 id="第1章"><a href="#第1章" class="headerlink" title="第1章"></a>第1章</h2><h3 id="CP01EX025"><a href="#CP01EX025" class="headerlink" title="CP01EX025"></a>CP01EX025</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Guangdong University of Technology\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Guangzhou\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Jieyang\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP01EX055"><a href="#CP01EX055" class="headerlink" title="CP01EX055"></a>CP01EX055</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>  </span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> a,b,c,max;  </span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>,&amp;a,&amp;b,&amp;c); <span class="comment">/*请输入三个数*/</span> </span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   max = a;</span><br><span class="line">   <span class="keyword">if</span>(max &lt; b)</span><br><span class="line">   &#123;</span><br><span class="line">      max = b;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(max &lt; c) </span><br><span class="line">   &#123;</span><br><span class="line">      max = c;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;max(%d,%d,%d)=%d\n&quot;</span>,a,b,c,max);  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第3章"><a href="#第3章" class="headerlink" title="第3章"></a>第3章</h2><h3 id="CP03EX012"><a href="#CP03EX012" class="headerlink" title="CP03EX012"></a>CP03EX012</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I am a student.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX013"><a href="#CP03EX013" class="headerlink" title="CP03EX013"></a>CP03EX013</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;C Language Program\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX023"><a href="#CP03EX023" class="headerlink" title="CP03EX023"></a>CP03EX023</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;I &quot;</span>); <span class="comment">//第1个串，末尾加一个空格，但不换行</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;love &quot;</span>); <span class="comment">//第2个串，末尾加一个空格，但不换行</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;China\n&quot;</span>); <span class="comment">//第3个串显示后换行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX032"><a href="#CP03EX032" class="headerlink" title="CP03EX032"></a>CP03EX032</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Apple is red.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Banana is yellow.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX033"><a href="#CP03EX033" class="headerlink" title="CP03EX033"></a>CP03EX033</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;HUAWEI Mate60\nHUAWEI Mate60Pro\nHUAWEI Mate60Pro+\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX042"><a href="#CP03EX042" class="headerlink" title="CP03EX042"></a>CP03EX042</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Apple is red.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="comment">//只换行，实现“隔1行”</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Banana is yellow.\n&quot;</span>); <span class="comment">//最后一行显示后，通常也换行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX053"><a href="#CP03EX053" class="headerlink" title="CP03EX053"></a>CP03EX053</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="comment">//Printf Test</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;C Program\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX063"><a href="#CP03EX063" class="headerlink" title="CP03EX063"></a>CP03EX063</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">7</span>, b = <span class="number">5</span>;</span><br><span class="line">   <span class="type">int</span> c = a+b;</span><br><span class="line">   <span class="type">int</span> d = a-b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d\n&quot;</span>,a,b,c);  <span class="comment">/* 修改此语句，显示a+b的值 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d-%d=%d\n&quot;</span>,a,b,d);  <span class="comment">/* 修改此语句，显示a-b的值 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX073"><a href="#CP03EX073" class="headerlink" title="CP03EX073"></a>CP03EX073</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"> <span class="type">int</span> a = <span class="number">215</span>, b = <span class="number">19</span>, c = <span class="number">75</span>, d,e,f,g;</span><br><span class="line">   d = a/b;</span><br><span class="line">   e = a%b;</span><br><span class="line">   f = a/c;</span><br><span class="line">   g = a%c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d...%d\n&quot;</span>,a,b,d,e); </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d...%d\n&quot;</span>,a,c,f,g);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX076"><a href="#CP03EX076" class="headerlink" title="CP03EX076"></a>CP03EX076</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">17</span>, b = <span class="number">5</span>,c,d,e;</span><br><span class="line">   c = a * b;</span><br><span class="line">   d = a / b;</span><br><span class="line">   e = a % b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d\n&quot;</span>,a,b,c); <span class="comment">/* 修改此语句，显示a乘b的积c */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d\n&quot;</span>,a,b,d); <span class="comment">/* 修改此语句，显示a除以b的商d */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d\%%%d=%d\n&quot;</span>,a,b,e); <span class="comment">/* 修改此语句，显示a除以b的余数e */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX083"><a href="#CP03EX083" class="headerlink" title="CP03EX083"></a>CP03EX083</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d+%d*%d=%d\n&quot;</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">11</span>+<span class="number">2</span>*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX092"><a href="#CP03EX092" class="headerlink" title="CP03EX092"></a>CP03EX092</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">11</span>, b = <span class="number">2</span>, c;</span><br><span class="line">   c = a/b*(b-a%<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX093"><a href="#CP03EX093" class="headerlink" title="CP03EX093"></a>CP03EX093</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">511</span>, b = <span class="number">246</span>, c =<span class="number">257</span>, d = <span class="number">495</span>, e;</span><br><span class="line">e = (a+b)/((b-c)*(a-d));</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(%d+%d)/((%d-%d)*(%d-%d))=%d\n&quot;</span>,a,b,b,c,a,d,e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX103"><a href="#CP03EX103" class="headerlink" title="CP03EX103"></a>CP03EX103</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">27</span>, b = <span class="number">36</span>, c = <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> d = (a+b)/c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(%d+%d)/%d=%d\n&quot;</span>,a,b,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX106"><a href="#CP03EX106" class="headerlink" title="CP03EX106"></a>CP03EX106</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">-25</span>, b = <span class="number">5</span>;</span><br><span class="line">   <span class="type">int</span> c = a/b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX113"><a href="#CP03EX113" class="headerlink" title="CP03EX113"></a>CP03EX113</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a,b,c = <span class="number">58</span>;</span><br><span class="line">a = b = <span class="number">20</span>;</span><br><span class="line">   <span class="type">int</span> d = (c-a/<span class="number">5</span>)/(c<span class="number">-2</span>*b);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(%d-%d/5)/(%d-2*%d)=%d\n&quot;</span>, c, a, c, b, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX123"><a href="#CP03EX123" class="headerlink" title="CP03EX123"></a>CP03EX123</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">12</span>, b = <span class="number">34</span>, c = <span class="number">56</span>,d;</span><br><span class="line">d = a * b * c;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d*%d*%d=%d\n&quot;</span>,a,b,c,d);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX132"><a href="#CP03EX132" class="headerlink" title="CP03EX132"></a>CP03EX132</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">1.234</span>, b = <span class="number">23.456</span>,c,d; </span><br><span class="line">   c = a+b;</span><br><span class="line">   d = a-b;</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%f+%f=%f\n&quot;</span>, a, b, c);  <span class="comment">// 打印a+b值</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%f-%f=%f\n&quot;</span>, a, b, d);  <span class="comment">// 打印a-b值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX133"><a href="#CP03EX133" class="headerlink" title="CP03EX133"></a>CP03EX133</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> f = <span class="number">12.345</span>, g = <span class="number">67.89</span>, h;</span><br><span class="line">   h = f*g;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.3f*%.2f=%f\n&quot;</span>,f,g,h);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX135"><a href="#CP03EX135" class="headerlink" title="CP03EX135"></a>CP03EX135</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">111.234</span>, b = <span class="number">23.456</span>,c,d;</span><br><span class="line">   c = a*b;</span><br><span class="line">   d = a/b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.3f*%.3f=%f\n&quot;</span>,a,b,c);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.3f/%.3f=%f\n&quot;</span>,a,b,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX142"><a href="#CP03EX142" class="headerlink" title="CP03EX142"></a>CP03EX142</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">3.45</span>, b = <span class="number">4.56</span>, c = <span class="number">5.67</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.2f+%.2f+%.2f=%.2f\n&quot;</span>,a,b,c,a+b+c);  <span class="comment">/*修改此语句，显示a+b+c的值*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX143"><a href="#CP03EX143" class="headerlink" title="CP03EX143"></a>CP03EX143</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">float</span> f = <span class="number">2.345</span>,g = <span class="number">6.789</span>,h;</span><br><span class="line">h = f*f+g*g;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>,h);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX145"><a href="#CP03EX145" class="headerlink" title="CP03EX145"></a>CP03EX145</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    <span class="comment">//Add your code here</span></span><br><span class="line">    <span class="type">float</span> f = <span class="number">-2.345</span>, g = <span class="number">6.789</span>;</span><br><span class="line">    <span class="type">float</span> h = f*f*f + g*g*g;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,h);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX153"><a href="#CP03EX153" class="headerlink" title="CP03EX153"></a>CP03EX153</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line">   <span class="type">int</span> a;</span><br><span class="line">   <span class="type">float</span> b,c;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   a = <span class="number">12</span>;</span><br><span class="line">   b = <span class="number">345.678</span>;</span><br><span class="line">   c = (<span class="type">float</span>)a*b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%f\n&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX162"><a href="#CP03EX162" class="headerlink" title="CP03EX162"></a>CP03EX162</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">1.63</span>, b = <span class="number">4.46</span>;</span><br><span class="line">   <span class="type">int</span> c = a + b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX163"><a href="#CP03EX163" class="headerlink" title="CP03EX163"></a>CP03EX163</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line">   <span class="type">int</span> a1,a2;</span><br><span class="line">   <span class="type">float</span> b,c;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   b = <span class="number">34.567</span>,c = <span class="number">56.789</span>;</span><br><span class="line">   a1 = b*c;</span><br><span class="line">   a2 = (<span class="type">int</span>)b*(<span class="type">int</span>)c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a1=%d\n&quot;</span>,a1);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a2=%d\n&quot;</span>,a2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX166"><a href="#CP03EX166" class="headerlink" title="CP03EX166"></a>CP03EX166</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line">   <span class="type">int</span> a;</span><br><span class="line">   <span class="type">float</span> b,c;</span><br><span class="line">   <span class="comment">// Add your code here </span></span><br><span class="line">   b = <span class="number">2.34567</span>, c = <span class="number">56.789</span>;</span><br><span class="line">   a = (<span class="type">int</span>)b+(<span class="type">int</span>)c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX168"><a href="#CP03EX168" class="headerlink" title="CP03EX168"></a>CP03EX168</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span>  y;</span><br><span class="line">   y = <span class="number">1</span>/<span class="number">3</span>;   <span class="comment">/*修改此语句，变量y保存表达式1/3的值*/</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;y=%f\n&quot;</span>, y); <span class="comment">/*修改此语句，输出y*/</span></span><br><span class="line">   y = <span class="number">1.0</span>/<span class="number">3.0</span>;   <span class="comment">/*修改此语句，变量y保存表达式1.0/3.0的值*/</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;y=%f\n&quot;</span>, y); <span class="comment">/*修改此语句，输出y*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX173"><a href="#CP03EX173" class="headerlink" title="CP03EX173"></a>CP03EX173</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> a,b;</span><br><span class="line">    a = <span class="number">34</span>, b = <span class="number">56</span>;</span><br><span class="line">    a += b;</span><br><span class="line">    b *= a;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;a=%d b=%d\n&quot;</span>,a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX175"><a href="#CP03EX175" class="headerlink" title="CP03EX175"></a>CP03EX175</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> a = <span class="number">567</span>, b = <span class="number">18</span>, c = <span class="number">5</span>;</span><br><span class="line">     a /= b;</span><br><span class="line">     b %= c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d b=%d c=%d\n&quot;</span>,a,b,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX183"><a href="#CP03EX183" class="headerlink" title="CP03EX183"></a>CP03EX183</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">600</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,++a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX184"><a href="#CP03EX184" class="headerlink" title="CP03EX184"></a>CP03EX184</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,++a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX185"><a href="#CP03EX185" class="headerlink" title="CP03EX185"></a>CP03EX185</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>, b = ++a+<span class="number">10</span>,c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line">    c = <span class="number">10</span>-a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX186"><a href="#CP03EX186" class="headerlink" title="CP03EX186"></a>CP03EX186</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">10</span>,b = <span class="number">0</span>,c = <span class="number">0</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d &quot;</span>,a);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   b = ++a+<span class="number">5</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   c = <span class="number">7</span>+a++;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX193"><a href="#CP03EX193" class="headerlink" title="CP03EX193"></a>CP03EX193</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">600</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a--);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,--a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX194"><a href="#CP03EX194" class="headerlink" title="CP03EX194"></a>CP03EX194</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a--);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,--a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX196"><a href="#CP03EX196" class="headerlink" title="CP03EX196"></a>CP03EX196</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>, b, c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d &quot;</span>,a);</span><br><span class="line">    b = --a+<span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line">    c = <span class="number">7</span>+a--;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX197"><a href="#CP03EX197" class="headerlink" title="CP03EX197"></a>CP03EX197</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a,b,c;</span><br><span class="line">   a = <span class="number">100</span>;</span><br><span class="line">   b = --a<span class="number">-10</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   c = <span class="number">10</span>+a--;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX203"><a href="#CP03EX203" class="headerlink" title="CP03EX203"></a>CP03EX203</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">-20</span>,c;</span><br><span class="line">   c = a&gt;b?b*b:<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX213"><a href="#CP03EX213" class="headerlink" title="CP03EX213"></a>CP03EX213</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> a = <span class="number">9</span>, b = <span class="number">11</span>,c,d;</span><br><span class="line">     c = a &gt;&gt; <span class="number">2</span>;</span><br><span class="line">     d = b &lt;&lt; <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d d=%d\n&quot;</span>,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX223"><a href="#CP03EX223" class="headerlink" title="CP03EX223"></a>CP03EX223</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">0x123a</span>, b = <span class="number">0x1100</span>, c;</span><br><span class="line">   c = a&amp;b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%x &amp; %x = %x\n&quot;</span>,a,b,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX243"><a href="#CP03EX243" class="headerlink" title="CP03EX243"></a>CP03EX243</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">0x12ac</span>,b;</span><br><span class="line">   b = ~a;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%x\n&quot;</span>,a);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;b=%x\n&quot;</span>,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX253"><a href="#CP03EX253" class="headerlink" title="CP03EX253"></a>CP03EX253</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    <span class="type">int</span> d, e, f;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    d = a&amp;&amp; b;</span><br><span class="line">    e = a || c;</span><br><span class="line">    f = a &amp;&amp; c;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;\n你的结果：\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &amp;&amp; %d = %d\n&quot;</span>, a, b, d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d || %d = %d\n&quot;</span>, a, c, e);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &amp;&amp; %d = %d\n&quot;</span>, a, c, f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX263"><a href="#CP03EX263" class="headerlink" title="CP03EX263"></a>CP03EX263</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="type">int</span> c, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    c = !a;</span><br><span class="line">    d = !b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;\n你的结果：\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;!%d=%d\n&quot;</span>, a, c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;!%d=%d\n&quot;</span>, b, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX293"><a href="#CP03EX293" class="headerlink" title="CP03EX293"></a>CP03EX293</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="type">char</span> a, b, c;</span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    a = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    b = <span class="string">&#x27;K&#x27;</span>;</span><br><span class="line">    c = <span class="string">&#x27;!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c:%d %c:%d %c:%d\n&quot;</span>,a,a,b,b,c,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX303"><a href="#CP03EX303" class="headerlink" title="CP03EX303"></a>CP03EX303</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//add your code here</span></span><br><span class="line">   <span class="type">int</span> a, b, c;</span><br><span class="line">   a = <span class="number">79</span>, b = <span class="number">75</span>, c = <span class="number">33</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d:%c %d:%c %d:%c\n&quot;</span>, a, a, b, b, c, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX305"><a href="#CP03EX305" class="headerlink" title="CP03EX305"></a>CP03EX305</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//add your code here </span></span><br><span class="line">   <span class="type">int</span> a, b, c, d, e;</span><br><span class="line">   a = <span class="number">83</span>, b = <span class="number">116</span>, c = <span class="number">117</span>, d = <span class="number">100</span>, e = <span class="number">121</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c%c\n&quot;</span>,a,b,c,d,e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX542"><a href="#CP03EX542" class="headerlink" title="CP03EX542"></a>CP03EX542</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123; <span class="comment">//add your code here</span></span><br><span class="line">  b = a-a%<span class="number">10</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;b=%d,a=%d\n&quot;</span>, b, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX546"><a href="#CP03EX546" class="headerlink" title="CP03EX546"></a>CP03EX546</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123;   <span class="comment">//add your code here</span></span><br><span class="line">   b = a - a%<span class="number">100</span> + a%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX554"><a href="#CP03EX554" class="headerlink" title="CP03EX554"></a>CP03EX554</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123; <span class="comment">//add your code here</span></span><br><span class="line">   b = a%<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX556"><a href="#CP03EX556" class="headerlink" title="CP03EX556"></a>CP03EX556</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;  <span class="comment">//add your code here</span></span><br><span class="line">    b = (a/<span class="number">100</span>)*<span class="number">100</span> + <span class="number">10</span>*(a%<span class="number">10</span>)+(a/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX557"><a href="#CP03EX557" class="headerlink" title="CP03EX557"></a>CP03EX557</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;  <span class="comment">// add your code here</span></span><br><span class="line">   <span class="type">int</span> digt_1,digt_2,digt_3;</span><br><span class="line">   digt_1 = a/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">   digt_2 = a/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">   digt_3 = a%<span class="number">10</span>;</span><br><span class="line">   b = digt_2+digt_1*<span class="number">10</span>+digt_3*<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX558"><a href="#CP03EX558" class="headerlink" title="CP03EX558"></a>CP03EX558</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;   <span class="comment">//add your code here</span></span><br><span class="line">   <span class="type">int</span> digt_1,digt_2,digt_3;</span><br><span class="line">   digt_1 = a/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">   digt_2 = a/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">   digt_3 = a%<span class="number">10</span>;</span><br><span class="line">   a = digt_2*<span class="number">100</span>+digt_3*<span class="number">10</span>+digt_1;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;移位后：a = %d\n&quot;</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX560"><a href="#CP03EX560" class="headerlink" title="CP03EX560"></a>CP03EX560</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;  <span class="comment">//add your code here</span></span><br><span class="line">   <span class="type">int</span> digt_a1,digt_b1;</span><br><span class="line">   digt_a1 = a%<span class="number">10</span>;</span><br><span class="line">   digt_b1 = b%<span class="number">10</span>;</span><br><span class="line">   c = digt_a1*<span class="number">10</span>+digt_b1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX561"><a href="#CP03EX561" class="headerlink" title="CP03EX561"></a>CP03EX561</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;   <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a1,digt_b1;</span><br><span class="line">   digt_a1 = a%<span class="number">10</span>;</span><br><span class="line">   digt_b1 = b%<span class="number">10</span>;</span><br><span class="line">   c = digt_b1*<span class="number">10</span>+digt_a1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX562"><a href="#CP03EX562" class="headerlink" title="CP03EX562"></a>CP03EX562</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;   <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">100</span>;</span><br><span class="line">    digt_b = b%<span class="number">100</span>;</span><br><span class="line">    c = digt_a*<span class="number">100</span>+digt_b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX563"><a href="#CP03EX563" class="headerlink" title="CP03EX563"></a>CP03EX563</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;   <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">10</span>*<span class="number">10</span>+a/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">    digt_b = b%<span class="number">10</span>*<span class="number">10</span>+b/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">    c = digt_a*<span class="number">100</span>+digt_b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX566"><a href="#CP03EX566" class="headerlink" title="CP03EX566"></a>CP03EX566</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;  <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">1000</span>;</span><br><span class="line">    digt_b = b%<span class="number">1000</span>;</span><br><span class="line">    c = digt_a*<span class="number">1000</span>+digt_b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX567"><a href="#CP03EX567" class="headerlink" title="CP03EX567"></a>CP03EX567</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">long</span> <span class="type">int</span> c)</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">10</span>*<span class="number">100</span>+a/<span class="number">10</span>%<span class="number">10</span>*<span class="number">10</span>+a/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">    digt_b = b%<span class="number">10</span>*<span class="number">100</span>+b/<span class="number">10</span>%<span class="number">10</span>*<span class="number">10</span>+b/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">    c = digt_a*<span class="number">1000</span>+digt_b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第8章"><a href="#第8章" class="headerlink" title="第8章"></a>第8章</h2><h3 id="CP08EX011"><a href="#CP08EX011" class="headerlink" title="CP08EX011"></a>CP08EX011</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> t[], <span class="type">int</span> n)</span> </span><br><span class="line"><span class="comment">/* 数组s的前n个元素存放给定的字符序列，</span></span><br><span class="line"><span class="comment">   数组t的前n个元素存放s的逆序列。</span></span><br><span class="line"><span class="comment">   注意：数组的下标从0开始。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      t[i] = s[n-i<span class="number">-1</span>];</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX012"><a href="#CP08EX012" class="headerlink" title="CP08EX012"></a>CP08EX012</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> *t)</span> </span><br><span class="line"><span class="comment">/* s是给定字符串的起始地址，</span></span><br><span class="line"><span class="comment">   t是求得s的逆串的起始地址</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> length = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(length = <span class="number">0</span>; s[length] != <span class="string">&#x27;\0&#x27;</span>; length++);</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      t[length<span class="number">-1</span>-i] = s[i];</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX015"><a href="#CP08EX015" class="headerlink" title="CP08EX015"></a>CP08EX015</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s1, <span class="type">char</span> *s2, <span class="type">int</span> n)</span></span><br><span class="line"><span class="comment">/* s1为字符串的起始地址，s2为新字符串的起始地址，n为字符串的长度。</span></span><br><span class="line"><span class="comment">   要求：s1串不能发生改变；请用s2串存放新的字符串。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      s2[i] = s1[i];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(n &gt; <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      sort(s2+<span class="number">1</span>,s2+n<span class="number">-1</span>,greater&lt;<span class="type">char</span>&gt;());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX016"><a href="#CP08EX016" class="headerlink" title="CP08EX016"></a>CP08EX016</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s1, <span class="type">char</span> *s2)</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; s1[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s2[i] = s1[i];</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sort(s2+<span class="number">1</span>,s2+n<span class="number">-1</span>,greater&lt;<span class="type">char</span>&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX018"><a href="#CP08EX018" class="headerlink" title="CP08EX018"></a>CP08EX018</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sub_str</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> m, <span class="type">char</span> *t)</span></span><br><span class="line">&#123;  </span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    *t = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">        n++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = m,j = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++,j++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j] = s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(m &lt; n)</span><br><span class="line">        sort(t,t+j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX020"><a href="#CP08EX020" class="headerlink" title="CP08EX020"></a>CP08EX020</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">match</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> c)</span> <span class="comment">// 返回字符c在串s中首次出现的位置指针</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">while</span>(*s != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">if</span>(*s == c)</span><br><span class="line">         <span class="keyword">return</span> s;</span><br><span class="line">      s++;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX033"><a href="#CP08EX033" class="headerlink" title="CP08EX033"></a>CP08EX033</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">month_day</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> yearday, <span class="type">int</span> *pmonth, <span class="type">int</span> *pday)</span> </span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(year &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    *pmonth = <span class="number">1</span>;</span><br><span class="line">    *pday = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> monthDays[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>((year % <span class="number">4</span> == <span class="number">0</span> and year % <span class="number">100</span> != <span class="number">0</span>) or (year % <span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yearday &lt;= <span class="number">0</span> || yearday &gt; <span class="number">366</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        monthDays[<span class="number">2</span>] = <span class="number">29</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(yearday &lt;= <span class="number">0</span> || yearday &gt; <span class="number">365</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yearday &lt;= monthDays[i])</span><br><span class="line">        &#123;</span><br><span class="line">            *pday = yearday;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        yearday -= monthDays[i];</span><br><span class="line">        (*pmonth)++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX044"><a href="#CP08EX044" class="headerlink" title="CP08EX044"></a>CP08EX044</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">long</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s)</span> </span><br><span class="line">&#123; <span class="comment">// s是一个数字字符串；函数返回值为由s含有的数字字符转换得到的数</span></span><br><span class="line">  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">long</span> num = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> firstFlag = <span class="literal">false</span>, firstNumFlag = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(s[i] == <span class="string">&#x27;-&#x27;</span> &amp;&amp; !firstNumFlag)</span><br><span class="line">      firstFlag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      firstNumFlag = <span class="literal">true</span>;</span><br><span class="line">      num *= <span class="number">10</span>;</span><br><span class="line">      num += s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(firstFlag)</span><br><span class="line">    num *= <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX105"><a href="#CP08EX105" class="headerlink" title="CP08EX105"></a>CP08EX105</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">findmax</span><span class="params">(<span class="type">int</span> s[], <span class="type">int</span> n)</span> </span><br><span class="line"><span class="comment">/* 返回s中的n个整数的最大值。注意：要求在函数中采用指针（而不是下标）来处理数组元素。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max &lt; *(s+i))</span><br><span class="line">            max = *(s+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX124"><a href="#CP08EX124" class="headerlink" title="CP08EX124"></a>CP08EX124</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">min3adj</span><span class="params">(<span class="type">int</span> s[], <span class="type">int</span> n)</span> <span class="comment">// 返回数组s中相邻三个数的和中的最小值。</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> sum = s[<span class="number">0</span>]+s[<span class="number">1</span>]+s[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum &gt; s[i<span class="number">-1</span>] + s[i] + s[i+<span class="number">1</span>])</span><br><span class="line">            sum = s[i<span class="number">-1</span>] + s[i] + s[i+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h2><p><a href="https://github.com/WiseL00k">By WiseL00k</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Anyview </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终端乱码问题解决</title>
      <link href="/posts/cb803778.html"/>
      <url>/posts/cb803778.html</url>
      
        <content type="html"><![CDATA[<h1 id="终端乱码问题解决"><a href="#终端乱码问题解决" class="headerlink" title="终端乱码问题解决"></a>终端乱码问题解决</h1><p>最近发现有时候在windows终端 <del>(就是那个黑框框)</del> 运行自己写的C\C++程序时，有时候显示的中文是乱码</p><span id="more"></span><p>后面发现如果我将源文件编码改为GBK，再编译后，运行便不会出现乱码。查阅资料后，知道了一条命令可以查看当前终端使用的编码格式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp</span><br></pre></td></tr></table></figure><p>可以看到当前编码为936，对应的编码格式为GBK</p><p><img src="https://pic.imgdb.cn/item/674fef5cd0e0a243d4dd0de4.png"></p><p>因此，使用GBK编码的文件，编译后的程序在终端运行自然不会出现乱码问题，但是如果是使用UTF-8的，就会乱码了。</p><p>我通过查找资料后，发现解决这个问题的方法有很多</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="临时解决"><a href="#临时解决" class="headerlink" title="临时解决"></a>临时解决</h3><p>直接每次在运行程序前，在终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure><p>将编码改为UTF-8便不会出错了</p><p><img src="https://pic.imgdb.cn/item/674feef1d0e0a243d4dd0dcd.png"></p><p>可以看到当前编码为65001，对应的编码格式为UTF-8</p><p>或者，可以使用GBK编码源文件，<del>但是都2024年了，还没人用统一码(UTF-8)吗？</del></p><h3 id="永久解决"><a href="#永久解决" class="headerlink" title="永久解决"></a>永久解决</h3><p>对于我这种有强迫症的人来说，一下用这个编码，一下用那个编码，实在太难接受了。必须想办法统一，因此还是有可以永久解决的办法的。</p><p>首先右键单击桌面右下角，打开调整日期和时间</p><p><img src="https://pic.imgdb.cn/item/674fed96d0e0a243d4dd0d66.png"></p><p>然后依次点击</p><p><img src="https://pic.imgdb.cn/item/674ff0f4d0e0a243d4dd0e70.png"></p><hr><p><img src="https://pic.imgdb.cn/item/674ff115d0e0a243d4dd0e84.png"></p><hr><p><img src="https://pic.imgdb.cn/item/674ff14bd0e0a243d4dd0ea6.png"></p><hr><p><img src="https://pic.imgdb.cn/item/674ff165d0e0a243d4dd0eb1.png"></p><p>打上勾后，重启，之后终端的默认编码格式就都变成UTF-8了。</p><p><em>PS:不过之后打开一些比较老的软件，可能会出现乱码问题。</em></p><p><em>我猜想是因为这些老的软件采用的是GBK编码，所以同样是出现了编码不兼容的问题。</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hi-there-👋"><a href="#Hi-there-👋" class="headerlink" title="Hi there 👋"></a>Hi there 👋</h2><p><img src="https://pic.imgdb.cn/item/67530816d0e0a243d4deff0f.png" alt="JinxAndAiko"></p><p>欢迎来到我的个人博客!</p><p>You are my <img src="https://profile-counter.glitch.me/WiseL00k/count.svg" alt="Visitor Count"> visitor,thanks!</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.min.css"/>
      <url>/css/runtime.min.css</url>
      
        <content type="html"><![CDATA[div#runtime{width:180px;margin:auto;color:#fff;padding-inline:5px;border-radius:10px;background-color:rgba(0,0,0,.7)}#workboard{font-size:12px}[data-theme=dark] div#runtime{color:#28b4c8;box-shadow:0 0 5px rgba(28,69,218,.71);animation:flashlight 1s linear infinite alternate}#ghbdages .github-badge img{height:20px}@-moz-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-webkit-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-o-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var grt = new Date("12/01/2024 00:00:00");  now.setTime(now.getTime() + 250);  var days = (now - grt) / 1e3 / 60 / 60 / 24,    dnum = Math.floor(days),    hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum,    hnum = Math.floor(hours);  1 == String(hnum).length && (hnum = "0" + hnum);  var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum,    mnum = Math.floor(minutes);  1 == String(mnum).length && (mnum = "0" + mnum);  var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum,    snum = Math.round(seconds);  1 == String(snum).length && (snum = "0" + snum);  let currentTimeHtml = "";  (currentTimeHtml =    hnum < 18 && hnum >= 9    //   ? `<img class='boardsign' src='/img/badge/IconParkOutlineWorkbench.svg' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`    //   : `<img class='boardsign' src='/img/badge/MaterialSymbolsSleep.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    ? `<span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`      : `<span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = currentTimeHtml);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.min.js"/>
      <url>/js/runtime/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){var grt=new Date("12/01/2024 00:00:00");now.setTime(now.getTime()+250);var days=(now-grt)/1e3/60/60/24,dnum=Math.floor(days),hours=(now-grt)/1e3/60/60-24*dnum,hnum=Math.floor(hours);1==String(hnum).length&&(hnum="0"+hnum);var minutes=(now-grt)/1e3/60-1440*dnum-60*hnum,mnum=Math.floor(minutes);1==String(mnum).length&&(mnum="0"+mnum);var seconds=(now-grt)/1e3-86400*dnum-3600*hnum-60*mnum,snum=Math.round(seconds);1==String(snum).length&&(snum="0"+snum);let currentTimeHtml="";currentTimeHtml=`<span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=currentTimeHtml)}setInterval(()=>{createtime()},250);]]></content>
      
    </entry>
    
    
  
</search>
