<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>myOS</title>
      <link href="/posts/36abf099.html"/>
      <url>/posts/36abf099.html</url>
      
        <content type="html"><![CDATA[<h1 id="自制操作系统"><a href="#自制操作系统" class="headerlink" title="自制操作系统"></a>自制操作系统</h1><h2 id="学习过程"><a href="#学习过程" class="headerlink" title="学习过程"></a>学习过程</h2><h4 id="关于一个程序的组成"><a href="#关于一个程序的组成" class="headerlink" title="关于一个程序的组成"></a>关于一个程序的组成</h4><p><img src="https://i-blog.csdnimg.cn/blog_migrate/73a96d54c02c919cf7d4823a152356c2.png" alt=""></p><p>这张图片形象展示了一个程序是如何在代码中分布的</p><h4 id="1-栈区"><a href="#1-栈区" class="headerlink" title="1.栈区"></a><strong>1.栈区</strong></h4><ul><li>栈区由编译器自动分配释放，由操作系统自动管理，无须手动管理。</li><li>栈区上的内容只在函数范围内存在，当函数运行结束，这些内容也会自动被销毁。</li><li>栈区按内存地址由高到低方向生长，其最大大小由编译时确定，速度快，但自由性差，最大空间不大。</li><li>栈区是先进后出原则，即先进去的被堵在屋里的最里面，后进去的在门口，释放的时候门口的先出去。</li></ul><p><strong>存放内容：</strong>临时创建的局部变量和const定义的局部变量存放在栈区。<br>函数调用和返回时，其入口参数和返回值存放在栈区。</p><h4 id="2-堆区"><a href="#2-堆区" class="headerlink" title="2.堆区"></a>2.堆区</h4><p>堆区由程序员分配内存和释放。<br>堆区按内存地址由低到高方向生长，其大小由系统内存/虚拟内存上限决定，速度较慢，但自由性大，可用空间大。</p><p><strong>这里可能还会有内存映射段，用于动态链接库/文件映射</strong></p><h4 id="3-全局-静态-区"><a href="#3-全局-静态-区" class="headerlink" title="3.全局(静态)区"></a>3.全局(静态)区</h4><h5 id="全局-静态-区介绍"><a href="#全局-静态-区介绍" class="headerlink" title="全局(静态)区介绍"></a>全局(静态)区介绍</h5><p>通常是用于那些在编译期间就能确定存储大小的变量的存储区，但它用于的是在整个程序运行期间都可见的全局变量和静态变量。<br>全局区有 .bss段 和 .data段组成，可读可写。</p><h5 id="BSS段"><a href="#BSS段" class="headerlink" title="BSS段"></a>BSS段</h5><p>BSS段（Block Started by Symbol segment）是计算机程序内存布局中的一个重要组成部分，主要用于存储程序中未初始化的全局变量和静态变量。它位于数据段（.data段）之后，堆（heap）段之前</p><p>未初始化的全局变量和未初始化的静态变量存放在.bss段。<br>初始化为0的全局变量和初始化为0的静态变量存放在.bss段。<br>.bss段不占用可执行文件空间，其内容由操作系统初始化。</p><p>BSS段的主要特点是：</p><ol><li><strong>存储内容：</strong>专门用于存放程序中未初始化的全局变量和静态变量</li><li><strong>初始化特性：</strong>在程序加载到内存时会被系统自动清零（初始化为0或空指针）</li><li><strong>空间效率</strong>：在可执行文件中不占用实际存储空间，只记录所需空间大小</li></ol><p>BSS段在计算机系统中发挥着重要作用，具有多项优势：</p><ol><li><strong>内存效率</strong>：通过只记录未初始化变量所需空间大小而不实际存储零值，显著减小可执行文件体积 <ul><li>例如：一个包含<code>int ar[30000];</code>的程序，编译后文件比初始化版本<code>int ar[300000] = &#123;1, 2, 3...&#125;</code></li></ul></li><li><strong>运行效率</strong>：操作系统可批量清零BSS段，比单独初始化每个变量更高效 </li><li><strong>编程便利</strong>：程序员无需显式初始化全局/静态变量为零，简化代码编写 </li><li><strong>嵌入式系统优势</strong>：在资源受限的嵌入式环境中，BSS段能有效节省宝贵的内存空间</li></ol><h5 id="data段"><a href="#data段" class="headerlink" title=".data段"></a>.data段</h5><p>已初始化的全局变量存放在.data段。<br>已初始化的静态变量存放在.data段。<br>.data段占用可执行文件空间，其内容有程序初始化。</p><h4 id="4-常量区"><a href="#4-常量区" class="headerlink" title="4. 常量区"></a>4. 常量区</h4><ul><li><strong>字符串</strong>、<strong>数字</strong>等常量存放在常量区。</li><li><strong>const修饰的全局变量</strong>存放在常量区。</li><li>程序运行期间，<strong>常量</strong>区的内容不可以被修改。</li></ul><h4 id="5-代码区"><a href="#5-代码区" class="headerlink" title="5.代码区"></a>5.代码区</h4><ul><li>程序执行代码存放在代码区，其值不能修改（若修改则会出现错误）。</li><li>字符串常量和define定义的常量也有可能存放在代码区。</li></ul><h4 id="操作系统的启动流程"><a href="#操作系统的启动流程" class="headerlink" title="操作系统的启动流程"></a>操作系统的启动流程</h4><p><img src="https://ask.qcloudimg.com/http-save/yehe-1668979/pzv80fmxgr.jpeg" alt=""></p><ul><li>BIOS(Basic Input/Output System)，基本输入输出系统，该系统存储于主板的ROM芯片上，计算机在开机时，会最先读取该系统，然后会有一个加电自检过程，这个过程其实就是检查CPU和内存，计算机最基本的组成单元(控制器、运算器和存储器)，还会检查其他硬件，若没有异常就开始加载BIOS程序到内存当中。详细的BIOS功能，这边就不说了，BIOS主要的一个功能就是存储了磁盘的启动顺序，BIOS会按照启动顺序去查找第一个磁盘头的MBR信息，并加载和执行MBR中的Bootloader程序，若第一个磁盘不存在MBR，则会继续查找第二个磁盘(PS：启动顺序可以在BIOS的界面中进行设置)，一旦BootLoader程序被检测并加载内存中，BIOS就将控制权交接给了BootLoader程序。 </li><li>MBR(Master Boot Record)，主引导记录，MBR存储于磁盘的头部，大小为512bytes，其中，446bytes用于存储BootLoader程序，64bytes用于存储分区表信息，最后2bytes用于MBR的有效性检查。 </li><li>GRUB(Grand Unified Bootloader)，多系统启动程序，其执行过程可分为三个步骤： <ul><li>Stage1：这个其实就是MBR，它的主要工作就是查找并加载第二段Bootloader程序(stage2)，但系统在没启动时，MBR根本找不到文件系统，也就找不到stage2所存放的位置，因此，就有了stage1_5</li><li>Stage1_5：该步骤就是为了识别文件系统</li><li>Stage2：GRUB程序会根据/boot/grub/grub.conf文件查找Kernel的信息，然后开始加载Kernel程序，当Kernel程序被检测并在加载到内存中，GRUB就将控制权交接给了Kernel程序。</li></ul></li></ul><p><strong>注意！现代操作系统使用了UEFI启动，但是我们现在不说UEFI，请自行忽略</strong></p><p>但是这样也需要我们的Boot程序按照<a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FMulti-booting&amp;objectId=1414532&amp;objectType=1&amp;isNewArticle=undefined">Mutileboot</a> 规范来编译内核，才可以被GRUB引导。 按照Mutileboot规范，内核必须在起始的8KB中的(512字节)包含这一个多引导项头（Multiboot header)。 <strong>而且，这个多引导项头里面必须有3个4字节对齐的块。</strong></p><h4 id="一些指令"><a href="#一些指令" class="headerlink" title="一些指令"></a>一些指令</h4><p><code>clt</code>，表示clear interrupt，关闭所有硬件中断</p><p><code>hlt</code> ，表示停止CPU运行，即HALT</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/MQ0522/article/details/114823770">C语言：内存分配—-栈区、堆区、全局区、常量区和代码区_c 内存布局-CSDN博客</a></p><p><a href="https://cloud.tencent.com/developer/article/1414532">VV的操作系统笔记（一）操作系统I SeeYou!!!! -腾讯云开发者社区-腾讯云</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软路由教程</title>
      <link href="/posts/5971328.html"/>
      <url>/posts/5971328.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>广工计组实验</title>
      <link href="/posts/b7a55cc3.html"/>
      <url>/posts/b7a55cc3.html</url>
      
        <content type="html"><![CDATA[<h1 id="计算机组成原理实验"><a href="#计算机组成原理实验" class="headerlink" title="计算机组成原理实验"></a>计算机组成原理实验</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 计算计组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/posts/e255a10a.html"/>
      <url>/posts/e255a10a.html</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="套接字"><a href="#套接字" class="headerlink" title="套接字"></a>套接字</h2><p>套接字（Socket）是计算机网络中用于 <strong>实现设备间通信的编程接口</strong>，可以理解为网络数据传输的“端点”。它是操作系统提供的底层工具，允许不同设备（或同一设备上的不同程序）通过 <strong>IP地址 + 端口号</strong> 的组合进行数据交换。</p><h4 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a><strong>核心概念</strong></h4><ol><li><strong>通信端点</strong><ul><li>每个套接字对应一个唯一的网络地址（IP + 端口），例如： <code>192.168.1.100:8080</code>（本机IP + Web服务端口） <code>104.18.21.34:443</code>（远程服务器IP + HTTPS端口）</li></ul></li><li><strong>协议支持</strong><ul><li>支持多种网络协议：<ul><li><strong>TCP（传输控制协议）</strong>：面向连接，数据可靠传输（如网页浏览）。</li><li><strong>UDP（用户数据报协议）</strong>：无连接，速度快但不可靠（如视频直播）。</li><li><strong>原始套接字（Raw Socket）</strong>：直接处理底层协议（如ICMP、自定义协议）。</li></ul></li></ul></li><li><strong>跨平台性</strong><ul><li>不同操作系统实现类似接口（如Windows的Winsock、Linux的BSD Socket）。</li></ul></li></ol><h4 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a><strong>核心功能</strong></h4><ol><li><strong>建立连接</strong><ul><li><strong>TCP</strong>：通过三次握手建立连接（客户端-服务器模型）。</li><li><strong>UDP</strong>：无需预先连接，直接发送数据。</li></ul></li><li><strong>数据传输</strong><ul><li>发送数据：<code>send()</code>（TCP）或 <code>sendto()</code>（UDP）。</li><li>接收数据：<code>recv()</code>（TCP）或 <code>recvfrom()</code>（UDP）。</li></ul></li><li><strong>地址绑定</strong><ul><li>服务器通过 <code>bind()</code> 绑定IP和端口，监听客户端请求（如Web服务器监听80端口）。</li></ul></li></ol><h3 id="原始套接字"><a href="#原始套接字" class="headerlink" title="原始套接字"></a>原始套接字</h3><h3 id="标准套接字"><a href="#标准套接字" class="headerlink" title="标准套接字"></a>标准套接字</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMake</title>
      <link href="/posts/42cbd3c8.html"/>
      <url>/posts/42cbd3c8.html</url>
      
        <content type="html"><![CDATA[<h1 id="CMake"><a href="#CMake" class="headerlink" title="CMake"></a>CMake</h1><p><a href="https://blog.csdn.net/weixin_43717839/article/details/128032486?ops_request_misc=%7B%22request%5Fid%22%3A%22666f2945f36a2ff87ed6fabad6ee5ea0%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=666f2945f36a2ff87ed6fabad6ee5ea0&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-128032486-null-null.142^v102^control&amp;utm_term=cmake&amp;spm=1018.2226.3001.4187">【C++】Cmake使用教程（看这一篇就够了）-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MCP &amp;&amp; Cline</title>
      <link href="/posts/da8d2046.html"/>
      <url>/posts/da8d2046.html</url>
      
        <content type="html"><![CDATA[<h1 id="MCP-amp-amp-Cline"><a href="#MCP-amp-amp-Cline" class="headerlink" title="MCP &amp;&amp; Cline"></a>MCP &amp;&amp; Cline</h1><h2 id="MCP"><a href="#MCP" class="headerlink" title="MCP"></a>MCP</h2><p>MCP全名（Model Context Protocol，模型上下文协议），其定义了应用程序和 AI 模型之间交换上下文信息的方式。这使得开发者能够<strong>以一致的方式将各种数据源、工具和功能连接到 AI 模型</strong>（一个中间协议层），就像 USB-C 让不同设备能够通过相同的接口连接一样。MCP 的目标是创建一个通用标准，使 AI 应用程序的开发和集成变得更加简单和统一。</p><p>以往使用LLM大模型，都是用户输入文本，模型输出文本。得到的结果都是文本内容，用户需要自行理解后再对软件进行操作进而得到想到的结果。讲大白话就是：<strong>让AI不再只输出干巴巴的文本内容，而是直接通过输出的文本内容自动操作你的软件，得到你想要的结果。</strong></p><p><img src="https://pic4.zhimg.com/v2-3a242914e1f4958e631dd158e043b7c3_r.jpg" alt=""></p><p><img src="https://picx.zhimg.com/v2-9fe7fb51f264338a079a444eefa041b1_1440w.jpg" alt=""></p><p><a href="https://zhuanlan.zhihu.com/p/29001189476">MCP (Model Context Protocol)，一篇就够了。 - 知乎</a></p><h2 id="Cline"><a href="#Cline" class="headerlink" title="Cline"></a>Cline</h2><p>Cline官网 <a href="https://cline.bot/">Cline - AI Autonomous Coding Agent for VS Code</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><h4 id="一些集成指南"><a href="#一些集成指南" class="headerlink" title="一些集成指南"></a>一些集成指南</h4><p><a href="https://blog.csdn.net/weixin_46074689/article/details/144619607">MCP技术与Cline集成指南：打造智能AI助手的数据连接解决方案_vscode mcp-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu20.04及ROS开发相关配置</title>
      <link href="/posts/86654e9a.html"/>
      <url>/posts/86654e9a.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu20-04及ROS开发相关配置"><a href="#Ubuntu20-04及ROS开发相关配置" class="headerlink" title="Ubuntu20.04及ROS开发相关配置"></a>Ubuntu20.04及ROS开发相关配置</h1><h2 id="Ubuntu20-04安装"><a href="#Ubuntu20-04安装" class="headerlink" title="Ubuntu20.04安装"></a>Ubuntu20.04安装</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>下文的安装方式，都是针对UEFI的，如果是传统的Legacy，需要另找教程</p><p>查看BIOS启动模式，在Windows11下，可以先通过 <code>win</code>  + <code>r</code>，然后输入 命令 <code>msinfo32</code>，之后在弹出的面板中找到BIOS模式，若为UEFI，则可使用下文中的方法。</p><h3 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h3><p>下载Ubuntu20.04.06的安装镜像，下面给出几个网站，以供下载</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/20.04.6/">Index of /ubuntu-releases/20.04.6/ | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><p><a href="https://mirror.sjtu.edu.cn/ubuntu-releases/20.04.6/">上海交通大学镜像 20.04.6</a></p><p><a href="https://repo.huaweicloud.com/ubuntu-releases/20.04.6/">华为云镜像</a></p><p>点击 <code>ubuntu-20.04.6-desktop-amd64.iso</code>开始下载。</p><h3 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h3><p>制作启动盘，首先需要准备一个U盘，移动硬盘也可以。U盘推荐是支持USB3.0的，这样安装的时候速度快一些。当然USB2.0也可以。</p><p>我这里使用的启动盘制作工具是ventoy</p><p><a href="https://www.ventoy.net/cn/download.html">Download . Ventoy</a></p><p>注意，制作启动盘会格式化掉U盘的所有数据，请<strong>提前做好数据备份工作</strong>。</p><p><img src="https://pic1.imgdb.cn/item/67927187d0e0a243d4f74192.png" alt=""></p><p>制作好后，你的U盘名称应该会被修改为带 <code>Ventoy</code>字样的名字。</p><p>制作好启动盘后，将下载好的镜像，直接拖入到制作好的启动盘中。</p><p>之后将BIOS启动项，改为U盘优先。</p><p>重启后，按照个人需求进行分区安装，即可</p><h3 id="安装显卡驱动-可选"><a href="#安装显卡驱动-可选" class="headerlink" title="安装显卡驱动(可选)"></a>安装显卡驱动(可选)</h3><p><a href="https://blog.csdn.net/weixin_46584887/article/details/122726265">Ubuntu下apt工具包安装NVIDIA driver_apt nvidia驱动-CSDN博客</a></p><h2 id="安装好后一些可选的配置"><a href="#安装好后一些可选的配置" class="headerlink" title="安装好后一些可选的配置"></a>安装好后一些可选的配置</h2><h3 id="镜像源配置"><a href="#镜像源配置" class="headerlink" title="镜像源配置"></a>镜像源配置</h3><p>如果apt下载软件的时候，网络不流畅，可尝试更换国内镜像源</p><p><a href="https://blog.csdn.net/MacWx/article/details/137689898">ubuntu 20.04 设置国内镜像源（阿里源、清华源）_ubuntu 20.04 镜像源-CSDN博客</a></p><p>截止2025-1-20号，在我实际安装好系统后，似乎已经帮你提前更换好镜像源了。镜像源为清华镜像源</p><h2 id="ROS安装"><a href="#ROS安装" class="headerlink" title="ROS安装"></a>ROS安装</h2><p>参考B站该视频</p><p><a href="https://www.bilibili.com/video/BV1aP41137k9?spm_id_from=333.788.videopod.sections&amp;vd_source=55533c48a38dfb13cd7032c2b5bcd86c">机器人操作系统ROS的安装心得以及rosdep问题的处理_哔哩哔哩_bilibili</a></p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p><a href="https://blog.csdn.net/qq_37416258/article/details/118696718">ubuntu 20.04安装ROS noetic添加秘钥失败 gpg: no valid OpenPGP data found._ubuntu20.04安装ros 添加密钥不成功-CSDN博客</a></p><p>一般原因是因为网址是外网，网络不流畅所导致。有条件，使用科学上网手段也能解决。</p><h4 id="无法定位软件包"><a href="#无法定位软件包" class="headerlink" title="无法定位软件包"></a>无法定位软件包</h4><p>查看系统中的 软件和更新， 看看更新选项下的订阅，是否是订阅全部。</p><h3 id="其他ROS相关工具"><a href="#其他ROS相关工具" class="headerlink" title="其他ROS相关工具"></a>其他ROS相关工具</h3><h4 id="catkin-tools"><a href="#catkin-tools" class="headerlink" title="catkin tools"></a>catkin tools</h4><p>用于替代catkin_make的构建工具</p><p>执行下面命令，安装catkin tools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install python3-catkin-tools</span><br></pre></td></tr></table></figure><h4 id="rosmon"><a href="#rosmon" class="headerlink" title="rosmon"></a>rosmon</h4><p>用于替代roslaunch的工具，更加好用</p><p>执行下面命令，安装rosmon</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ros-noetic-rosmon</span><br></pre></td></tr></table></figure><h4 id="plotjuggler"><a href="#plotjuggler" class="headerlink" title="plotjuggler"></a>plotjuggler</h4><p>一款可视化图形调试工具</p><p>执行下面命令，安装plotjuggler</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ros-noetic-plotjuggler</span><br></pre></td></tr></table></figure><p>如果使用的时候，没有 <code>ROS Topic Listener</code></p><p>继续执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ros-noetic-plotjuggler-ros</span><br></pre></td></tr></table></figure><h4 id="controller-manager"><a href="#controller-manager" class="headerlink" title="controller-manager"></a>controller-manager</h4><p>用于可视化控制器的管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ros-noetic-rqt-controller-manager</span><br></pre></td></tr></table></figure><h2 id="相关软件安装"><a href="#相关软件安装" class="headerlink" title="相关软件安装"></a>相关软件安装</h2><h3 id="超级终端"><a href="#超级终端" class="headerlink" title="超级终端"></a>超级终端</h3><p>在终端下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install terminator</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wanttifa/article/details/127536695">安装terminator(ubuntu上超好用的终端)_terminator ubuntu-CSDN博客</a></p><p>打开终端，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ibus-setup</span><br></pre></td></tr></table></figure><p>将 表情符号快捷键取消即可。</p><p><a href="https://blog.csdn.net/czczczzczc/article/details/115595695">【ubuntu】20.04下 Ctrl+Shift+E 无法使用 terminator 分屏问题解决_control+shift+e被占用-CSDN博客</a></p><h3 id="CLion"><a href="#CLion" class="headerlink" title="CLion"></a>CLion</h3><p>官网下载tar.gz压缩包，解压到一个目录</p><p>之后使用 <code>bash</code> 运行 <code>bin</code> 目录下的 <code>clion.sh</code>，即可打开CLion。</p><h4 id="破解激活"><a href="#破解激活" class="headerlink" title="破解激活"></a>破解激活</h4><p>激活码文件夹放到 <code>bin</code> 目录下 。 ./install.sh 之后 ，用激活文件 vmoptions 里面的几个文件替换掉 clion/bin 里面的 clion64.vmoptions jetbrains_client64.vmoptions</p><p>还有 plugins/gateway-plugin/resources 里面的 gateway.vmoptions </p><p>激活码文件要一直放在～，充当 javaagent</p><p>之后，打开Activation_Code文件夹下的CLion.txt，将其中的文本全选，这段文本就是CLion的激活码，直接打开CLion后，选择使用激活码激活，即可破解</p><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><p><a href="https://blog.csdn.net/m0_46477492/article/details/122827564">Ubuntu 20.04中安装CLion并创建桌面快捷方式_ubuntu clion 2021.1.2 eval reset-CSDN博客</a></p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><h3 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h3><p><a href="https://zh.snipaste.com/download.html">Snipaste 下载</a></p><p>下载AppImage</p><h4 id="额外配置-可选"><a href="#额外配置-可选" class="headerlink" title="额外配置(可选)"></a>额外配置(可选)</h4><p><a href="https://blog.csdn.net/weixin_42171132/article/details/112618136">添加icon_Ubuntu下为AppImage应用添加图标并添加到应用-CSDN博客</a></p><h2 id="队内环境配置"><a href="#队内环境配置" class="headerlink" title="队内环境配置"></a>队内环境配置</h2><h3 id="bashrc"><a href="#bashrc" class="headerlink" title="bashrc"></a>bashrc</h3><p>保证基本的ROS的环境变量已经导入</p><p>给home目录下的bashrc文件<strong>追加</strong>以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> wired=<span class="string">&#x27;ssh -o StrictHostKeyChecking=no -l &quot;dynamicx&quot; &quot;192.168.100.2&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> HAS_SWITCH=has</span><br><span class="line"><span class="built_in">export</span> camera_type=hk_camera</span><br><span class="line"><span class="built_in">export</span> ROBOT_TYPE=hero</span><br><span class="line"><span class="built_in">export</span> ROS_IP=`ifconfig | grep -Eo <span class="string">&#x27;inet (addr:)?([0-9]*\.)&#123;3&#125;[0-9]*&#x27;</span> | grep -Eo <span class="string">&#x27;([0-9]*\.)&#123;3&#125;[0-9]*&#x27;</span> | grep -v <span class="string">&#x27;127.0.0.1&#x27;</span> | grep -v <span class="string">&#x27;172.17.0.1&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -z <span class="string">&quot;<span class="variable">$&#123;ROS_IP&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">export</span> ROS_IP=`dig +short localhost`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#export ROS_IP=&#x27;192.168.100.1&#x27;</span></span><br><span class="line"><span class="built_in">export</span> HW_NAME=rm_can_hw</span><br><span class="line"><span class="comment">#export ROS_MASTER_URI=http://192.168.100.2:11311</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ROS IP: <span class="variable">$&#123;ROS_IP&#125;</span>&quot;</span> | lolcat</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ROS Master URI: <span class="variable">$&#123;ROS_MASTER_URI&#125;</span>&quot;</span> | lolcat</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;coding前记得先查看是否同步远程上游仓库</span></span><br><span class="line"><span class="string">git pull upstream&quot;</span> | lolcat</span><br></pre></td></tr></table></figure><h3 id="创建工作空间"><a href="#创建工作空间" class="headerlink" title="创建工作空间"></a>创建工作空间</h3><p>创建一个目录 ,我这里叫<code>~/RM/rm_ws</code></p><p>在 <code>rm_ws</code>下创建 <code>src</code>目录，进入到 <code>src</code>目录</p><p>依次执行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">catkin_init_workspace</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">catkin init</span><br><span class="line">catkin build</span><br></pre></td></tr></table></figure><h3 id="队内代码"><a href="#队内代码" class="headerlink" title="队内代码"></a>队内代码</h3><p>将下列几个包，都克隆到 <code>src</code>目录下</p><p><code>rm_control</code></p><p><code>rm_controllers</code></p><p><code>rm_config</code></p><p><code>rm_manual</code></p><p><code>rm_bringup</code></p><p><code>rm_description</code></p><p>克隆好后，执行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">rosdep install --from-paths . --ignore-src</span><br><span class="line">catkin build</span><br></pre></td></tr></table></figure><p>请确保已经安装好catkin tools</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>可以跟着这个教程，看看能不能把机器人驱动起来。</p><p><a href="https://rm-control-docs.netlify.app/quick_start/gazebo_chassis">Gazebo 底盘 | rm-controls documentation</a></p><p>不一定完全一致，有些地方可能会有出入</p><h2 id="一些可能出现的问题"><a href="#一些可能出现的问题" class="headerlink" title="一些可能出现的问题"></a>一些可能出现的问题</h2><h3 id="解决在ubuntu的firefox浏览器下不能看b站视频的问题"><a href="#解决在ubuntu的firefox浏览器下不能看b站视频的问题" class="headerlink" title="解决在ubuntu的firefox浏览器下不能看b站视频的问题"></a>解决在ubuntu的firefox浏览器下不能看b站视频的问题</h3><p>在终端执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ubuntu-restricted-extras</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/m0_56514535/article/details/140820330">ubuntu20.04自带的火狐浏览器无法播放B站等其他视频怎么办_ubuntu20.04 b站看不了视频-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> RM </tag>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCL2自定义皮肤教程</title>
      <link href="/posts/6a165316.html"/>
      <url>/posts/6a165316.html</url>
      
        <content type="html"><![CDATA[<h1 id="PCL2自定义皮肤教程"><a href="#PCL2自定义皮肤教程" class="headerlink" title="PCL2自定义皮肤教程"></a>PCL2自定义皮肤教程</h1><span id="more"></span><p>首先前往<a href="https://littleskin.cn/?lang=zh_CN">LittleSkin - 快速、可靠的 Minecraft 皮肤站</a></p><p>注册好账号</p><p>之后在用户中心，按如下操作</p><p><img src="https://pic1.imgdb.cn/item/6791d88bd0e0a243d4f70ada.png" alt=""></p><p>添加好新角色后，在我的衣柜，给角色添加皮肤材质。</p><p>之后在仪表盘处，将按钮拖到PCL2启动器处，<strong>真的就是拖过去</strong></p><p><img src="https://pic1.imgdb.cn/item/6791d920d0e0a243d4f70b09.png" alt=""></p><p>之后你的PCL2启动器，会变成这样</p><p><img src="https://pic1.imgdb.cn/item/6791d980d0e0a243d4f70b2b.png" alt=""></p><p>如果打开游戏后，在游戏内还是没能看到你设置的自定义皮肤。</p><p>可以在加一个Mod，在Mod下载处搜索<strong>万用皮肤补丁</strong>，根据你对应的游戏版本进行下载即可。</p><p><img src="https://pic1.imgdb.cn/item/6791da1bd0e0a243d4f70b5b.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> MC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遇到过的问题及解决方法</title>
      <link href="/posts/2b45e8ee.html"/>
      <url>/posts/2b45e8ee.html</url>
      
        <content type="html"><![CDATA[<h1 id="遇到过的问题及解决方法"><a href="#遇到过的问题及解决方法" class="headerlink" title="遇到过的问题及解决方法"></a>遇到过的问题及解决方法</h1><span id="more"></span><p>问题：使用命令行pip安装python包的时候，会一直出现黄色Warning警告，关闭代理，解决。但是之后需要使用又要重新打开，比较麻烦。因此找到个不用关闭代理的方法。</p><p>解决方法：<a href="https://blog.csdn.net/qq_40483419/article/details/144216858?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-144216858-blog-122165774.235^v43^control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-144216858-blog-122165774.235^v43^control&amp;utm_relevant_index=5">pip无法安装包，提示WARNING: Retrying…after connection broken by ‘ProxyError(‘Cannot connect to proxy.‘…_pip安装没反应-CSDN博客</a></p><p><img src="https://pic1.imgdb.cn/item/678cfa27d0e0a243d4f5ad92.png" alt=""></p><p>原因：clash无法正确识别pip的http流量，导致流量没走代理。开启这个clash中自带的Specify Protocol工具，或者直接关闭代理都可以解决。</p><p>但是总是关闭代理又打开比较麻烦，比较推荐这个工具。</p><p><a href="https://www.bilibili.com/opus/785934476587827267">Windows仍在设置此设备的类配置(代码：56)（即网卡无法使用）的详细解决方法 - 哔哩哔哩</a></p><p>经过这个问题，发现注册表要经常及时清理，可以解决许多奇怪的问题。清理注册表时最好使用专门的工具。</p><p>这里我推荐一款不错的清理工具<a href="https://www.ccleaner.com/zh-cn">CCleaner 让您的计算机更快速、更安全 | 官方网站</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 问题 </tag>
            
            <tag> 解决方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win11常用快捷键</title>
      <link href="/posts/16598fab.html"/>
      <url>/posts/16598fab.html</url>
      
        <content type="html"><![CDATA[<h1 id="Win11常用快捷键"><a href="#Win11常用快捷键" class="headerlink" title="Win11常用快捷键"></a>Win11常用快捷键</h1><p><code>win+alt+b</code>开关HDR</p><p><code>win+p</code>投影设置</p><p><code>win+d</code>回到桌面</p>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MC乌托邦3.0整合包安装教程</title>
      <link href="/posts/51ab9a47.html"/>
      <url>/posts/51ab9a47.html</url>
      
        <content type="html"><![CDATA[<h1 id="MC乌托邦3-0整合包安装教程"><a href="#MC乌托邦3-0整合包安装教程" class="headerlink" title="MC乌托邦3.0整合包安装教程"></a>MC乌托邦3.0整合包安装教程</h1><span id="more"></span><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="下载PCL启动器"><a href="#下载PCL启动器" class="headerlink" title="下载PCL启动器"></a>下载PCL启动器</h3><p>到作者官网(<a href="https://afdian.com/p/0164034c016c11ebafcb52540025c377">PCL 最新正式版永久下载丨龙腾猫跃丨爱发电</a>)，下载PCL启动器</p><h3 id="下载整合包"><a href="#下载整合包" class="headerlink" title="下载整合包"></a>下载整合包</h3><p>到<a href="https://note.youdao.com/s/7BOzSgLt">作者官网</a>，下载好乌托邦3.0整合包</p><h3 id="留档"><a href="#留档" class="headerlink" title="留档"></a>留档</h3><p>如果找不到的话，我也打包好了需要的文件，通过这两条链接来下载</p><p><a href="https://pan.quark.cn/s/dc394ab2d68f">PCL下载</a></p><p><a href="https://pan.quark.cn/s/7cc1c908ddeb">乌托邦3.0整合包</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="https://pic1.imgdb.cn/item/677c095bd0e0a243d4f0385b.png" alt=""></p><p>创建一个新的文件夹，我这里叫PCL，将下载的这俩个文件拖到新的PCL文件夹里。</p><p>只解压带PCL字样的压缩包，之后打开解压后的程序，可以看到文件夹多出了几个文件夹，就是上图中最上面的两个文件夹，说明PCL启动器安装好了。</p><p>之后打开PCL启动器，同样是原来那个exe程序。打开后，按如下操作</p><p><img src="https://pic1.imgdb.cn/item/677c0a27d0e0a243d4f03a39.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/677c0a80d0e0a243d4f03ac3.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/677c0adbd0e0a243d4f03b67.png" alt=""></p><p><img src="https://pic1.imgdb.cn/item/677c0afed0e0a243d4f03bb4.png" alt=""></p><p>等待下载完成即可</p><p><img src="https://pic1.imgdb.cn/item/677c0c30d0e0a243d4f03e38.png" alt=""></p><p>如果你的电脑还没配置过java环境的话，点击启动游戏后，应该会提示你下载java环境。</p><p>一般选自动配置即可。</p><p>之后启动游戏，便可以开启你的乌托邦之旅!</p>]]></content>
      
      
      
        <tags>
            
            <tag> MC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VsCode常用快捷键</title>
      <link href="/posts/53b37f43.html"/>
      <url>/posts/53b37f43.html</url>
      
        <content type="html"><![CDATA[<h1 id="VsCode常用快捷键"><a href="#VsCode常用快捷键" class="headerlink" title="VsCode常用快捷键"></a>VsCode常用快捷键</h1><span id="more"></span><div class="tip fa-atom"><p><code>shitf+alt+方向键</code> 复制当前行向方向键方向</p></div>]]></content>
      
      
      
        <tags>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简单的C语言菜单框架</title>
      <link href="/posts/de47911f.html"/>
      <url>/posts/de47911f.html</url>
      
        <content type="html"><![CDATA[<h1 id="一个简单的C语言菜单框架"><a href="#一个简单的C语言菜单框架" class="headerlink" title="一个简单的C语言菜单框架"></a>一个简单的C语言菜单框架</h1><span id="more"></span><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>做C语言课设总是用到菜单，发现菜单的使用频率特别高。想试着结合面向对象的思想尝试着写一个简单的C语言菜单框架。</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>一个菜单内的内容通常由多个菜单项和一些其他信息组成。而一个菜单项内又由菜单项的内容和选择后执行的回调函数组成。而菜单项执行的回调函数通常分为两种：一种是进入下一级菜单、另一种是执行对应功能函数。</p><p>因此做如下定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 菜单</span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125; Menu;</span><br><span class="line"></span><br><span class="line">// 菜单项</span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125; MenuItem;</span><br><span class="line"></span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125; MenuItemList;</span><br></pre></td></tr></table></figure><p>可提供的接口如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void registerMenu();</span><br><span class="line">void registerMenuItem();</span><br></pre></td></tr></table></figure><p>待完工…</p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统配置</title>
      <link href="/posts/a03ae733.html"/>
      <url>/posts/a03ae733.html</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>一些常用的工具配置，工具安装文档</p><p>方便新环境迅速安装配置。</p><span id="more"></span><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="Vim安装"><a href="#Vim安装" class="headerlink" title="Vim安装"></a>Vim安装</h3><p>推荐<a href="https://github.com/WiseL00k/vimplus">vimplus</a>，可以帮我们一键自动安装常用的vim插件。</p><p><img src="https://raw.githubusercontent.com/chxuan/vimplus/master/screenshots/vimplus-logo.png" alt="vimplus"></p><h4 id="An-automatic-configuration-program-for-vim"><a href="#An-automatic-configuration-program-for-vim" class="headerlink" title="An automatic configuration program for vim"></a>An automatic configuration program for vim</h4><h4 id="安装vimplus"><a href="#安装vimplus" class="headerlink" title="安装vimplus"></a>安装vimplus</h4><pre><code>git clone https://github.com/chxuan/vimplus.git ~/.vimpluscd ~/.vimplus./install.sh //不加sudo</code></pre><h4 id="设置Nerd-Font"><a href="#设置Nerd-Font" class="headerlink" title="设置Nerd Font"></a>设置Nerd Font</h4><p>为防止vimplus显示乱码，需设置linux终端字体为 <code>Droid Sans Mono Nerd Font</code>。</p><h4 id="多用户支持"><a href="#多用户支持" class="headerlink" title="多用户支持"></a>多用户支持</h4><p>将vimplus在某个用户下安装好后，若需要在其他用户也能够使用vimplus，则执行</p><pre><code>sudo ./install_to_user.sh username1 username2 //替换为真实用户名</code></pre><h4 id="更新vimplus"><a href="#更新vimplus" class="headerlink" title="更新vimplus"></a>更新vimplus</h4><p>紧跟vimplus的步伐，尝鲜新特性</p><pre><code>./update.sh</code></pre><h4 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h4><blockquote><ul><li>[~/.vimrc][82]为vimplus的默认配置，一般不做修改</li><li>[~/.vimrc.custom.plugins][83]为用户自定义插件列表，用户增加、卸载插件请修改该文件</li><li>[~/.vimrc.custom.config][84]为用户自定义配置文件，一般性配置请放入该文件，可覆盖[~/.vimrc][82]里的配置</li></ul></blockquote><h3 id="ZSH安装"><a href="#ZSH安装" class="headerlink" title="ZSH安装"></a>ZSH安装</h3><h3 id="Thefuck"><a href="#Thefuck" class="headerlink" title="Thefuck"></a>Thefuck</h3><p>一款自动纠错终端工具</p><p><a href="https://github.com/nvbn/thefuck">nvbn/thefuck: Magnificent app which corrects your previous console command.</a></p><h3 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h3><p>方便快捷查询命令常用用法</p><p><a href="https://github.com/tldr-pages/tldr">tldr-pages/tldr: 📚 Collaborative cheatsheets for console commands</a></p><h3 id="fd"><a href="#fd" class="headerlink" title="fd"></a>fd</h3><p>一款替代find命令的工具</p><p><a href="https://github.com/sharkdp/fd">sharkdp/fd: A simple, fast and user-friendly alternative to &#39;find&#39;</a></p><h3 id="lazyvim"><a href="#lazyvim" class="headerlink" title="lazyvim"></a>lazyvim</h3><p><a href="https://blog.csdn.net/m0_60670525/article/details/136329707">如何在Ubuntu上安装最新版本的Neovim并快速配置_ubuntu安装neovim-CSDN博客</a></p><p><a href="https://www.lazyvim.org/">🚀 Getting Started | LazyVim</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 系统配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小工具</title>
      <link href="/posts/1c0373de.html"/>
      <url>/posts/1c0373de.html</url>
      
        <content type="html"><![CDATA[<h1 id="小工具分享"><a href="#小工具分享" class="headerlink" title="小工具分享"></a>小工具分享</h1><p>这里分享一些我觉得很好用的小工具，大部分都是开源的软件。</p><span id="more"></span><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="uTools"><a href="#uTools" class="headerlink" title="uTools"></a>uTools</h3><p><img src="https://res.u-tools.cn/website5/static/assets/logo.png" alt=""></p><p>uTools真的是非常好用的集成工具，非常能够提升自己的办公效率，这款软件里面集成了许多常用小工具集合。</p><p>比如搜索神器：<code>Everything</code>，同时，它还支持OCR，翻译，批量文件重命名等常用功能。</p><p>官网下载链接:<a href="https://u.tools/">uTools官网 - 新一代效率工具平台</a></p><h3 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h3><p><img src="https://www.voidtools.com//zh-cn/support/everything/Everything.Search.Window.png" alt=""></p><p>作为一款轻量化开源的文件检索软件，搜索速度拉爆Windows自带的检索文件功能。还支持自定义检索文件类型，用过都说好。</p><p>官网下载链接：<a href="https://www.voidtools.com/zh-cn/">Everything</a></p><h3 id="八爪鱼"><a href="#八爪鱼" class="headerlink" title="八爪鱼"></a>八爪鱼</h3><ul><li><strong>特点</strong>：桌面端工具，支持拖拽式操作和复杂规则配置，可抓取文本、图片、表格等数据，支持动态页面和反爬处理38。</li><li><strong>优势</strong>：提供云采集和本地采集模式，数据可导出为Excel、CSV、JSON等格式，适合电商数据抓取和价格监控。</li><li><strong>适用场景</strong>：需处理大规模数据或动态加载页面的用户。</li></ul><p><img src="https://www.bazhuayu.com/static/logo.png" alt=""></p><p><a href="https://www.bazhuayu.com/">八爪鱼采集器 - 免费网络爬虫软件_网页大数据抓取工具</a></p><h3 id="影刀"><a href="#影刀" class="headerlink" title="影刀"></a>影刀</h3><p>影刀是一款功能强大的RPA（机器人流程自动化）工具，旨在通过自动化操作提升工作效率，减少重复性劳动。</p><p><img src="https://winrobot-pub-a-oss.yingdao.com/static/xybot-front-homepage-v3/online/162/static/header_logo.f662cb5b.svg" alt=""></p><p><a href="https://www.yingdao.com/">影刀RPA - 影刀官网</a></p><p>未完待续…</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git commit信息规范</title>
      <link href="/posts/afba152f.html"/>
      <url>/posts/afba152f.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git-commit信息规范"><a href="#Git-commit信息规范" class="headerlink" title="Git commit信息规范"></a>Git commit信息规范</h1><p>在个人开发中，对于commit message(提交信息)，个人开发者往往比较随意，只要写的自己能看懂就行。但是养成良好的commit规范，也能够或多或少地提升自己的个人开发效率。也便于在出现bug时，方便回溯排查。</p><span id="more"></span><p>但是在团队开发中，Commit message(提交信息)就显得尤为重要，一个好的commit message总是能够提升团队开发效率的。因此这里介绍一种常用的commit message规范—<a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit?tab=t.0#heading=h.greljkmo14y0">Angular规范</a>。如下图：</p><p><img src="https://pic.imgdb.cn/item/67569ffad0e0a243d4e043ea.png" alt=""></p><h2 id="Angular规范"><a href="#Angular规范" class="headerlink" title="Angular规范"></a>Angular规范</h2><h3 id="Commit-message-的格式"><a href="#Commit-message-的格式" class="headerlink" title="Commit message 的格式"></a>Commit message 的格式</h3><p>每次提交，Commit message 都包括三个部分：header，body 和 footer。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;footer&gt;</span><br></pre></td></tr></table></figure><p>其中，header 是必需的，body 和 footer 可以省略。<br>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</p><h3 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h3><p>Header部分只有一行，包括三个字段：<code>type</code>（必需）、<code>scope</code>（可选）和 <code>subject</code>（必需）。</p><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p>用于说明 commit 的类别，只允许使用下面7个标识。</p><ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul><p>如果type为 <code>feat</code>和 <code>fix</code>，则该 commit 将肯定出现在 Change log 之中。其他情况（<code>docs</code>、<code>chore</code>、<code>style</code>、<code>refactor</code>、<code>test</code>）由你决定，要不要放入 Change log，建议是不要。</p><h4 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h4><p>scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p><p>例如在 <code>Angular</code>，可以是 <code>$location</code>, <code>$browser</code>, <code>$compile</code>, <code>$rootScope</code>, <code>ngHref</code>, <code>ngClick</code>, <code>ngView</code>等。</p><p>如果你的修改影响了不止一个 <code>scope</code>，你可以使用 <code>*</code>代替。</p><h4 id="subject"><a href="#subject" class="headerlink" title="subject"></a>subject</h4><p><code>subject</code>是 commit 目的的简短描述，不超过50个字符。</p><p>其他注意事项：</p><ul><li>以动词开头，使用第一人称现在时，比如change，而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号（.）</li></ul><h3 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h3><p>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">More <span class="keyword">detailed</span> explanatory <span class="keyword">text</span>, <span class="keyword">if</span> necessary.  Wrap <span class="keyword">it</span> <span class="built_in">to</span> </span><br><span class="line">about <span class="number">72</span> <span class="keyword">characters</span> <span class="keyword">or</span> so. </span><br><span class="line"></span><br><span class="line">Further paragraphs come <span class="keyword">after</span> blank <span class="keyword">lines</span>.</span><br><span class="line"></span><br><span class="line">- Bullet points are okay, too</span><br><span class="line">- Use <span class="keyword">a</span> hanging indent</span><br></pre></td></tr></table></figure><p>有两个注意点:</p><ul><li>使用第一人称现在时，比如使用change而不是changed或changes。</li><li>永远别忘了第2行是空行</li><li>应该说明代码变动的动机，以及与以前行为的对比。</li></ul><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>Footer 部分只用于以下两种情况：</p><h4 id="不兼容变动"><a href="#不兼容变动" class="headerlink" title="不兼容变动"></a>不兼容变动</h4><p>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">BREAKING CHANGE:</span> <span class="string">isolate</span> <span class="string">scope</span> <span class="string">bindings</span> <span class="string">definition</span> <span class="string">has</span> <span class="string">changed.</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">To migrate the code follow the example below:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">Before:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">scope:</span> &#123;</span><br><span class="line">      <span class="attr">myAttr:</span> <span class="string">&#x27;attribute&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attr">After:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">scope:</span> &#123;</span><br><span class="line">      <span class="attr">myAttr:</span> <span class="string">&#x27;@&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">The</span> <span class="string">removed</span> <span class="string">`inject`</span> <span class="string">wasn&#x27;t</span> <span class="string">generaly</span> <span class="string">useful</span> <span class="string">for</span> <span class="string">directives</span> <span class="string">so</span> <span class="string">there</span> <span class="string">should</span> <span class="string">be</span> <span class="literal">no</span> <span class="string">code</span> <span class="string">using</span> <span class="string">it.</span></span><br></pre></td></tr></table></figure><h4 id="关闭-Issue"><a href="#关闭-Issue" class="headerlink" title="关闭 Issue"></a>关闭 Issue</h4><p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Closes </span><span class="comment">#234</span></span><br></pre></td></tr></table></figure><h3 id="Revert"><a href="#Revert" class="headerlink" title="Revert"></a>Revert</h3><p>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">revert: feat(pencil): <span class="keyword">add</span> <span class="string">&#x27;graphiteWidth&#x27;</span> <span class="keyword">option</span></span><br><span class="line"></span><br><span class="line">This reverts <span class="keyword">commit</span> <span class="number">667</span>ecc1654a317a13331b17617d973392f415f02.</span><br></pre></td></tr></table></figure><p>Body部分的格式是固定的，必须写成 <code>This reverts commit &lt;hash&gt;</code>.，其中的hash是被撤销 commit 的 SHA 标识符。</p><p>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://segmentfault.com/a/1190000009048911">git commit 规范指南 - 不挑食的程序员 - SegmentFault 思否</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anyview数据结构参考代码</title>
      <link href="/posts/524e8698.html"/>
      <url>/posts/524e8698.html</url>
      
        <content type="html"><![CDATA[<h1 id="Anyview数据结构参考代码"><a href="#Anyview数据结构参考代码" class="headerlink" title="Anyview数据结构参考代码"></a>Anyview数据结构参考代码</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><img src="https://pic.imgdb.cn/item/67552805d0e0a243d4dfde21.png" alt=""></p><p>可能会有些错误，仅供参考！！！</p><p><del>请不要做CV工程师</del>，系统有查重！</p><p>考虑到题库每年都可能更新，题目不一定完全一致。</p><p>也欢迎大家PR，纠正更新题库。</p><span id="more"></span><p><a href="https://github.com/WiseL00k/DS_Anyview" class="github-corner" aria-label="View source on GitHub"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#64CEAA; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"/><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"/><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"/></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style></p><h2 id="第1章"><a href="#第1章" class="headerlink" title="第1章"></a>第1章</h2><h3 id="DC01PE06"><a href="#DC01PE06" class="headerlink" title="DC01PE06"></a>DC01PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Descend</span><span class="params">(<span class="type">int</span> &amp;a, <span class="type">int</span> &amp;b, <span class="type">int</span> &amp;c)</span>  <span class="comment">// 通过交换，令 a &gt;= b &gt;= c</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = b;</span><br><span class="line">        b = a;</span><br><span class="line">        a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(b &lt; c)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = c;</span><br><span class="line">        c = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = b;</span><br><span class="line">        b = a;</span><br><span class="line">        a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE08"><a href="#DC01PE08" class="headerlink" title="DC01PE08"></a>DC01PE08</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Polynomial</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> a[], <span class="type">float</span> x0)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> rlt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        rlt += a[i]*<span class="built_in">pow</span>(x0,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rlt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE11"><a href="#DC01PE11" class="headerlink" title="DC01PE11"></a>DC01PE11</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Fibonacci</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> m, <span class="type">int</span> &amp;f)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (k &lt; <span class="number">2</span> || m &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m &lt; k<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f += <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m == k<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        f += <span class="number">1</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = m<span class="number">-1</span>; i &gt;= m-k; --i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Fibonacci</span>(k,i,f);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE18"><a href="#DC01PE18" class="headerlink" title="DC01PE18"></a>DC01PE18</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fac</span><span class="params">(<span class="type">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num == <span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num * <span class="built_in">fac</span>(num<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">Series</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    Status flag = OK;</span><br><span class="line">    <span class="keyword">if</span>(n &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> temp = <span class="built_in">fac</span>(i) * <span class="built_in">pow</span>(<span class="number">2</span>,i);</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; MAXINT) </span><br><span class="line">        &#123;</span><br><span class="line">            flag = EOVERFLOW;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i<span class="number">-1</span>] = <span class="built_in">fac</span>(i) * <span class="built_in">pow</span>(<span class="number">2</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE20"><a href="#DC01PE20" class="headerlink" title="DC01PE20"></a>DC01PE20</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printName</span><span class="params">(stuType student[], <span class="type">int</span> index[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,student[index[i]].name[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE21"><a href="#DC01PE21" class="headerlink" title="DC01PE21"></a>DC01PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">highestScore</span><span class="params">(stuType *student[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 返回最高成绩  */</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> maxScore = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(student[i]-&gt;score &gt; maxScore)</span><br><span class="line">        &#123;</span><br><span class="line">            maxScore = student[i]-&gt;score;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxScore;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE22"><a href="#DC01PE22" class="headerlink" title="DC01PE22"></a>DC01PE22</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printFirstName_HighestScore</span><span class="params">(stuType *student[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> maxScore = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> maxScoreIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(student[i]-&gt;score &gt; maxScore)</span><br><span class="line">        &#123;</span><br><span class="line">            maxScore = student[i]-&gt;score;</span><br><span class="line">            maxScoreIndex = i;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,student[maxScoreIndex]-&gt;name[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%.2f\n&quot;</span>,maxScore);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE23"><a href="#DC01PE23" class="headerlink" title="DC01PE23"></a>DC01PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printLastName_HighestScore</span><span class="params">(stuType *student[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">float</span> maxScore = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> maxScoreIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(student[i]-&gt;score &gt;= maxScore)</span><br><span class="line">        &#123;</span><br><span class="line">            maxScore = student[i]-&gt;score;</span><br><span class="line">            maxScoreIndex = i;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,student[maxScoreIndex]-&gt;name[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%.2f\n&quot;</span>,maxScore);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE30"><a href="#DC01PE30" class="headerlink" title="DC01PE30"></a>DC01PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">StrSequence* <span class="title">reverseStr</span><span class="params">(StrSequence* strSeq)</span></span></span><br><span class="line"><span class="function"><span class="comment">/*返回一个结构体，该结构体将strSeq中的字符串逆序存放*/</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    ElemType* reverseStr = (ElemType*)<span class="built_in">malloc</span>(strSeq-&gt;length*<span class="built_in">sizeof</span>(<span class="type">char</span>));      <span class="comment">//中间缓冲区</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, j = strSeq-&gt;length<span class="number">-1</span>; i &lt; strSeq-&gt;length; ++i,--j)</span><br><span class="line">    &#123;</span><br><span class="line">        reverseStr[i] = strSeq-&gt;elem[j];</span><br><span class="line">    &#125;</span><br><span class="line">    strSeq-&gt;elem = reverseStr;</span><br><span class="line">    <span class="keyword">return</span> strSeq;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE49"><a href="#DC01PE49" class="headerlink" title="DC01PE49"></a>DC01PE49</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateSequence</span><span class="params">(Sequence &amp;S, <span class="type">int</span> n, ElemType *a)</span> </span>&#123; </span><br><span class="line">   <span class="keyword">if</span>(n &lt;= <span class="number">0</span> || a == <span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> ERROR;</span><br><span class="line">   &#125;</span><br><span class="line">   S.elem = (ElemType*)<span class="built_in">malloc</span>(n*<span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">   &#123;</span><br><span class="line">      S.elem[i] = a[i];</span><br><span class="line">   &#125;</span><br><span class="line">   S.length = n;</span><br><span class="line">   <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE61"><a href="#DC01PE61" class="headerlink" title="DC01PE61"></a>DC01PE61</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">LinkList <span class="title">MakeNode</span><span class="params">(ElemType x)</span> </span>&#123; </span><br><span class="line">    LinkList pNode = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    <span class="keyword">if</span> (pNode) </span><br><span class="line">    &#123;</span><br><span class="line">        pNode-&gt;data = x;</span><br><span class="line">        pNode-&gt;next = <span class="literal">NULL</span>;     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pNode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE63"><a href="#DC01PE63" class="headerlink" title="DC01PE63"></a>DC01PE63</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">LinkList <span class="title">CreateLinkList</span><span class="params">(ElemType x, ElemType y)</span> </span>&#123; </span><br><span class="line">    LinkList pHead = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    <span class="keyword">if</span>(pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        pHead-&gt;data = x;</span><br><span class="line">        pHead-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">        <span class="keyword">if</span>(pHead-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            pHead-&gt;next-&gt;data = y;</span><br><span class="line">            pHead-&gt;next-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC01PE65"><a href="#DC01PE65" class="headerlink" title="DC01PE65"></a>DC01PE65</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">LinkList <span class="title">CreateOrdLList</span><span class="params">(ElemType x, ElemType y)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    LinkList pHead = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    <span class="keyword">if</span>(pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        pHead-&gt;data = x&lt;y?x:y;</span><br><span class="line">        pHead-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">        <span class="keyword">if</span>(pHead-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            pHead-&gt;next-&gt;data = x&gt;y?x:y;;</span><br><span class="line">            pHead-&gt;next-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第2章"><a href="#第2章" class="headerlink" title="第2章"></a>第2章</h2><h3 id="DC02PE03"><a href="#DC02PE03" class="headerlink" title="DC02PE03"></a>DC02PE03</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty_Sq</span><span class="params">(SqStack S)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE05"><a href="#DC02PE05" class="headerlink" title="DC02PE05"></a>DC02PE05</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">GetTop_Sq</span><span class="params">(SqStack S, ElemType &amp;e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(S.top == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    e = S.elem[--S.top];</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE07"><a href="#DC02PE07" class="headerlink" title="DC02PE07"></a>DC02PE07</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Pop_Sq</span><span class="params">(SqStack &amp;S, ElemType &amp;e)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    e = S.elem[--S.top];</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE11"><a href="#DC02PE11" class="headerlink" title="DC02PE11"></a>DC02PE11</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">InitStack_Sq2</span><span class="params">(SqStack2 &amp;S, <span class="type">int</span> size, <span class="type">int</span> inc)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(size &lt;= <span class="number">0</span> || inc &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    S.elem = (ElemType*)<span class="built_in">malloc</span>(size*<span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">    S.top = S.elem;</span><br><span class="line">    S.size = size;</span><br><span class="line">    S.increment = inc;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE13"><a href="#DC02PE13" class="headerlink" title="DC02PE13"></a>DC02PE13</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty_Sq2</span><span class="params">(SqStack2 S)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == S.elem)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE15"><a href="#DC02PE15" class="headerlink" title="DC02PE15"></a>DC02PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Push_Sq2</span><span class="params">(SqStack2 &amp;S, ElemType e)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == S.elem+S.size)</span><br><span class="line">    &#123;</span><br><span class="line">        S.elem = (ElemType*)<span class="built_in">realloc</span>(S.elem,S.size+S.increment);</span><br><span class="line">        <span class="keyword">if</span>(!S.elem)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">        S.top = S.elem+S.size;</span><br><span class="line">    &#125;</span><br><span class="line">    *S.top = e;</span><br><span class="line">    S.top++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE17"><a href="#DC02PE17" class="headerlink" title="DC02PE17"></a>DC02PE17</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Pop_Sq2</span><span class="params">(SqStack2 &amp;S, ElemType &amp;e)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(S.top == S.elem)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    e = *(--S.top);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE19"><a href="#DC02PE19" class="headerlink" title="DC02PE19"></a>DC02PE19</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CopyStack_Sq</span><span class="params">(SqStack S1, SqStack &amp;S2)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">StackEmpty_Sq</span>(S1))</span><br><span class="line">    &#123;</span><br><span class="line">        S2 = S1;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SqStack tempSq;</span><br><span class="line">    Status flag1,flag2;</span><br><span class="line">    flag1 = <span class="built_in">InitStack_Sq</span>(tempSq, S<span class="number">1.</span>size, S<span class="number">1.</span>increment);</span><br><span class="line">    flag2 = <span class="built_in">InitStack_Sq</span>(S2, S<span class="number">1.</span>size, S<span class="number">1.</span>increment);</span><br><span class="line">    <span class="keyword">if</span>(!(flag1 &amp;&amp; flag2))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(S<span class="number">1.</span>top != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tempSq.elem[tempSq.top++] = S<span class="number">1.</span>elem[--S<span class="number">1.</span>top]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(tempSq.top != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        S<span class="number">2.</span>elem[S<span class="number">2.</span>top++] = tempSq.elem[--tempSq.top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE20"><a href="#DC02PE20" class="headerlink" title="DC02PE20"></a>DC02PE20</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Conversion</span><span class="params">(<span class="type">int</span> N, <span class="type">int</span> rd)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    SqStack tempStack;</span><br><span class="line">    ElemType temp;</span><br><span class="line">    <span class="built_in">InitStack_Sq</span>(tempStack, MAXSIZE, INCREMENT);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(N &gt;= rd)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = N % rd;</span><br><span class="line">        N /= rd;</span><br><span class="line">        <span class="built_in">Push_Sq</span>(tempStack, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Push_Sq</span>(tempStack,N);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">Pop_Sq</span>(tempStack, temp))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">DestroyStack_Sq</span>(tempStack);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE21"><a href="#DC02PE21" class="headerlink" title="DC02PE21"></a>DC02PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">matchBracketSequence</span><span class="params">(<span class="type">char</span>* exp, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(n &amp; <span class="number">1</span> == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    Status flag = TRUE;</span><br><span class="line">    SqStack bufStack;</span><br><span class="line">    ElemType temp;</span><br><span class="line">    <span class="built_in">InitStack_Sq</span>(bufStack, MAXSIZE, INCREMENT);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(exp[i] == <span class="string">&#x27;&#123;&#x27;</span> || exp[i] == <span class="string">&#x27;[&#x27;</span> || exp[i] == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push_Sq</span>(bufStack, exp[i]);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">Pop_Sq</span>(bufStack, temp))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((temp == <span class="string">&#x27;&#123;&#x27;</span> &amp;&amp; exp[i] != <span class="string">&#x27;&#125;&#x27;</span>) || (temp == <span class="string">&#x27;[&#x27;</span> &amp;&amp; exp[i] != <span class="string">&#x27;]&#x27;</span>) || (temp == <span class="string">&#x27;(&#x27;</span> &amp;&amp; exp[i] != <span class="string">&#x27;)&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">StackEmpty_Sq</span>(bufStack))</span><br><span class="line">    &#123;</span><br><span class="line">        flag = FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">DestroyStack_Sq</span>(bufStack);</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE23"><a href="#DC02PE23" class="headerlink" title="DC02PE23"></a>DC02PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">QueueLength_Sq</span><span class="params">(SqQueue Q)</span> </span>&#123; </span><br><span class="line">    <span class="type">int</span> queueLength = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (Q.front != Q.rear) &#123;</span><br><span class="line">        Q.front = (Q.front<span class="number">+1</span>)%Q.maxSize;</span><br><span class="line">        ++queueLength;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> queueLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE25"><a href="#DC02PE25" class="headerlink" title="DC02PE25"></a>DC02PE25</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">EnCQueue</span><span class="params">(CTagQueue &amp;Q, ElemType x)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(Q.rear == Q.front &amp;&amp; Q.tag == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;  </span><br><span class="line">    &#125;</span><br><span class="line">    Q.elem[Q.rear] = x;</span><br><span class="line">    Q.rear = (++Q.rear)%MAXQSIZE;</span><br><span class="line">    <span class="keyword">if</span>(Q.rear == Q.front)</span><br><span class="line">    &#123;</span><br><span class="line">        Q.tag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">DeCQueue</span><span class="params">(CTagQueue &amp;Q, ElemType &amp;x)</span></span>&#123;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(Q.rear == Q.front &amp;&amp; Q.tag == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;  </span><br><span class="line">    &#125;</span><br><span class="line">    x = Q.elem[Q.front];</span><br><span class="line">    Q.front = (++Q.front)%MAXQSIZE;</span><br><span class="line">    <span class="keyword">if</span>(Q.front == Q.rear)</span><br><span class="line">    &#123;</span><br><span class="line">        Q.tag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE27"><a href="#DC02PE27" class="headerlink" title="DC02PE27"></a>DC02PE27</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">EnCQueue</span><span class="params">(CLenQueue &amp;Q, ElemType x)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (Q.length == MAXQSIZE) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;  </span><br><span class="line">    &#125;</span><br><span class="line">    Q.elem[(++Q.rear) % MAXQSIZE] = x;</span><br><span class="line">    Q.length++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">DeCQueue</span><span class="params">(CLenQueue &amp;Q, ElemType &amp;x)</span></span>&#123;</span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(Q.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (Q.rear &gt;= Q.length) &#123;</span><br><span class="line">        x = Q.elem[Q.rear - Q.length + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        x = Q.elem[(Q.rear + (MAXQSIZE-Q.length)<span class="number">+1</span>) % MAXQSIZE];</span><br><span class="line">    &#125;</span><br><span class="line">    Q.length--;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE32"><a href="#DC02PE32" class="headerlink" title="DC02PE32"></a>DC02PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitSqQueue</span><span class="params">(SqQueue* queue, <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (queue) </span><br><span class="line">    &#123;</span><br><span class="line">        queue-&gt;maxSize = size;</span><br><span class="line">        queue-&gt;base = (ElemType*)<span class="built_in">malloc</span>(size*<span class="built_in">sizeof</span>(ElemType));</span><br><span class="line">        queue-&gt;front = <span class="number">0</span>;</span><br><span class="line">        queue-&gt;rear = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="title">Fib</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> n)</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">long</span> rlt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    SqQueue fibQueue;</span><br><span class="line">    <span class="built_in">InitSqQueue</span>(&amp;fibQueue, n<span class="number">+1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">+1</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; k<span class="number">-1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            fibQueue.base[fibQueue.rear++] = <span class="number">0</span>; </span><br><span class="line">            fibQueue.rear %= fibQueue.maxSize;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i == k<span class="number">-1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            fibQueue.base[fibQueue.rear++] = <span class="number">1</span>; </span><br><span class="line">            fibQueue.rear %= fibQueue.maxSize;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            temp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i-k; j &lt; i; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                temp += fibQueue.base[j]; </span><br><span class="line">            &#125;  </span><br><span class="line">            fibQueue.base[fibQueue.rear++] = temp;</span><br><span class="line">            fibQueue.rear %= fibQueue.maxSize;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rlt = fibQueue.base[n];</span><br><span class="line">    <span class="keyword">return</span> rlt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE33"><a href="#DC02PE33" class="headerlink" title="DC02PE33"></a>DC02PE33</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">Compare</span><span class="params">(SqList A, SqList B)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (A.length == <span class="number">0</span> &amp;&amp; B.length != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (B.length == <span class="number">0</span> &amp;&amp; A.length != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (A.length == <span class="number">0</span> &amp;&amp; B.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; A.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == B.length) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(A.elem[i] == B.elem[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (A.elem[i] &gt; B.elem[i]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.length) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE35"><a href="#DC02PE35" class="headerlink" title="DC02PE35"></a>DC02PE35</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Inverse</span><span class="params">(SqList &amp;L)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    ElemType temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length/<span class="number">2</span>; ++i) &#123;</span><br><span class="line">        temp = L.elem[i];</span><br><span class="line">        L.elem[i] = L.elem[L.length<span class="number">-1</span>-i];</span><br><span class="line">        L.elem[L.length<span class="number">-1</span>-i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE45"><a href="#DC02PE45" class="headerlink" title="DC02PE45"></a>DC02PE45</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Union</span><span class="params">(SqList &amp;La, List Lb)</span></span></span><br><span class="line"><span class="function"></span>&#123;     <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Lb.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Search_Sq</span>(La,Lb.elem[i]) == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Append_Sq</span>(La, Lb.elem[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE53"><a href="#DC02PE53" class="headerlink" title="DC02PE53"></a>DC02PE53</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty_L</span><span class="params">(LStack S)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (S) &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE55"><a href="#DC02PE55" class="headerlink" title="DC02PE55"></a>DC02PE55</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">GetTop_L</span><span class="params">(LStack S, ElemType &amp;e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (S) &#123;</span><br><span class="line">        e = S-&gt;data;</span><br><span class="line">        S = S-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE61"><a href="#DC02PE61" class="headerlink" title="DC02PE61"></a>DC02PE61</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">QueueEmpty_LQ</span><span class="params">(LQueue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (Q.front) &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE63"><a href="#DC02PE63" class="headerlink" title="DC02PE63"></a>DC02PE63</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">QueueLength_LQ</span><span class="params">(LQueue Q)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> queueLength = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!Q.front) &#123;</span><br><span class="line">        <span class="keyword">return</span> queueLength;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(Q.front != Q.rear)</span><br><span class="line">    &#123;</span><br><span class="line">        queueLength++;</span><br><span class="line">        Q.front = Q.front-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ++queueLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE68"><a href="#DC02PE68" class="headerlink" title="DC02PE68"></a>DC02PE68</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">InitCLQueue</span><span class="params">(CLQueue &amp;rear)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    rear = (CLQueue)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(CLQNode));</span><br><span class="line">    <span class="keyword">if</span>(!rear)</span><br><span class="line">        <span class="keyword">return</span> EOVERFLOW;</span><br><span class="line">    rear-&gt;data = <span class="number">0</span>;</span><br><span class="line">    rear-&gt;next = rear;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">EnCLQueue</span><span class="params">(CLQueue &amp;rear, ElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(rear)</span><br><span class="line">    &#123;     </span><br><span class="line">        CLQueue tempCLQueue;</span><br><span class="line">        tempCLQueue = (CLQueue)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(CLQNode));</span><br><span class="line">        <span class="keyword">if</span>(!tempCLQueue)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> EOVERFLOW;</span><br><span class="line">        &#125;</span><br><span class="line">        tempCLQueue-&gt;next = rear-&gt;next;</span><br><span class="line">        tempCLQueue-&gt;data = x;</span><br><span class="line">        rear-&gt;next = tempCLQueue;</span><br><span class="line">        rear = rear-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">DeCLQueue</span><span class="params">(CLQueue &amp;rear, ElemType &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (rear == rear-&gt;next) &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(rear)</span><br><span class="line">    &#123;</span><br><span class="line">        CLQueue frontCLQueue = rear-&gt;next-&gt;next;</span><br><span class="line">        x = frontCLQueue-&gt;data;</span><br><span class="line">        rear-&gt;next-&gt;next = frontCLQueue-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(frontCLQueue);</span><br><span class="line">        frontCLQueue = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE71"><a href="#DC02PE71" class="headerlink" title="DC02PE71"></a>DC02PE71</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">ListEmpty_L</span><span class="params">(LinkList L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE73"><a href="#DC02PE73" class="headerlink" title="DC02PE73"></a>DC02PE73</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">DestroyList_L</span><span class="params">(LinkList &amp;L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    LinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(L)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = L;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE75"><a href="#DC02PE75" class="headerlink" title="DC02PE75"></a>DC02PE75</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">ClearList_L</span><span class="params">(LinkList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data = <span class="literal">NULL</span>;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE77"><a href="#DC02PE77" class="headerlink" title="DC02PE77"></a>DC02PE77</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ListLength_L</span><span class="params">(LinkList L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(L)</span><br><span class="line">    &#123;</span><br><span class="line">        ++length;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> length<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE82"><a href="#DC02PE82" class="headerlink" title="DC02PE82"></a>DC02PE82</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Insert_L</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!L || i &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (i-- != <span class="number">1</span>) &#123;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(q)</span><br><span class="line">        &#123;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!L)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;data = e;</span><br><span class="line">    <span class="keyword">if</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        p-&gt;next = q;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE84"><a href="#DC02PE84" class="headerlink" title="DC02PE84"></a>DC02PE84</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Delete_L</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType &amp;e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || !L) &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">for</span>(; i-- != <span class="number">1</span>; p = q, q = q-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!q)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    e = q-&gt;data;</span><br><span class="line">    p-&gt;next = q-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(q);</span><br><span class="line">    q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE86"><a href="#DC02PE86" class="headerlink" title="DC02PE86"></a>DC02PE86</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Split_L</span><span class="params">(LinkList L, LinkList &amp;Li, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    Li = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || !L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">for</span>(;i-- != <span class="number">1</span>; p = q, q = q-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    Li = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    Li-&gt;next = q;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE88"><a href="#DC02PE88" class="headerlink" title="DC02PE88"></a>DC02PE88</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Cut_L</span><span class="params">(LinkList L, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || !L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    <span class="keyword">for</span>(;i-- != <span class="number">1</span>; p = q, q = q-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        p = q;</span><br><span class="line">        q = q-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">    p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE90"><a href="#DC02PE90" class="headerlink" title="DC02PE90"></a>DC02PE90</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">DeleteX_L</span><span class="params">(LinkList L, ElemType x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> deleteCount = <span class="number">0</span>;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    LinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(q-&gt;data == x)</span><br><span class="line">        &#123;</span><br><span class="line">            ++deleteCount;</span><br><span class="line">            p-&gt;next = q-&gt;next;</span><br><span class="line">            temp = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(temp);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            p = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> deleteCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE91"><a href="#DC02PE91" class="headerlink" title="DC02PE91"></a>DC02PE91</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">DeleteSome_L</span><span class="params">(LinkList L, ElemType x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> deleteCount = <span class="number">0</span>;</span><br><span class="line">    LinkList p = L;</span><br><span class="line">    LinkList q = L-&gt;next;</span><br><span class="line">    LinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(q-&gt;data &lt; x)</span><br><span class="line">        &#123;</span><br><span class="line">            ++deleteCount;</span><br><span class="line">            p-&gt;next = q-&gt;next;</span><br><span class="line">            temp = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(temp);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            p = q;</span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> deleteCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE93"><a href="#DC02PE93" class="headerlink" title="DC02PE93"></a>DC02PE93</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">DuLinkList <span class="title">delDuplicateDuLNodes</span><span class="params">(DuLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> L;</span><br><span class="line">    &#125;</span><br><span class="line">    DuLinkList p = L-&gt;next;</span><br><span class="line">    DuLinkList q = <span class="literal">NULL</span>;</span><br><span class="line">    DuLinkList temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (q-&gt;data == p-&gt;data) &#123;</span><br><span class="line">                temp = q;</span><br><span class="line">                <span class="keyword">if</span>(q-&gt;next)</span><br><span class="line">                &#123;</span><br><span class="line">                    q-&gt;prior-&gt;next = q-&gt;next;</span><br><span class="line">                    q-&gt;next-&gt;prior = q-&gt;prior;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    q-&gt;prior-&gt;next = <span class="literal">NULL</span>;  </span><br><span class="line">                &#125;</span><br><span class="line">                q = q-&gt;next;</span><br><span class="line">                <span class="built_in">free</span>(temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                q = q-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE94"><a href="#DC02PE94" class="headerlink" title="DC02PE94"></a>DC02PE94</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverseDuLinkList</span><span class="params">(DuLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L || !L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DuLinkList p = L-&gt;next, q = <span class="literal">NULL</span>;</span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//q为下一个要插入到L节点后的节点</span></span><br><span class="line">        q = p-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将p节点插入到L节点直接后继</span></span><br><span class="line">        p-&gt;prior = L;</span><br><span class="line">        p-&gt;next = L-&gt;next; </span><br><span class="line">        <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;next-&gt;prior = p;</span><br><span class="line">        &#125;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line"></span><br><span class="line">        p = q;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE95"><a href="#DC02PE95" class="headerlink" title="DC02PE95"></a>DC02PE95</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverseDuCirLinkList</span><span class="params">(DuCirLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!L || !L-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//暂时保存头节点和首末节点的循环关系</span></span><br><span class="line">    DuLinkList p = L-&gt;next, q = <span class="literal">NULL</span>, lastFrontP = L-&gt;next;</span><br><span class="line">    <span class="comment">//将头节点与所以数据节点暂时切断链接</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    L-&gt;prior-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//q为下一个要插入到L节点后的节点</span></span><br><span class="line">        q = p-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将p节点插入到L节点直接后继</span></span><br><span class="line">        p-&gt;prior = L;</span><br><span class="line">        p-&gt;next = L-&gt;next; </span><br><span class="line">        <span class="keyword">if</span>(L-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;next-&gt;prior = p;</span><br><span class="line">        &#125;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line"></span><br><span class="line">        p = q;</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;prior = lastFrontP;</span><br><span class="line">    lastFrontP-&gt;next = L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE97"><a href="#DC02PE97" class="headerlink" title="DC02PE97"></a>DC02PE97</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InterleavedTravelDuCirLinkList</span><span class="params">(DuCirLinkList L, DuLNode* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    DuCirLinkList f = p-&gt;next, r = p-&gt;prior;</span><br><span class="line">    <span class="keyword">if</span> (f == p) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (f == r) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p != L)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,p-&gt;data); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,f-&gt;data); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(f == r)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(f == L || f == p)        <span class="comment">//对遍历时出现的特殊情况处理</span></span><br><span class="line">                f = f-&gt;next; </span><br><span class="line">                <span class="keyword">if</span>(f == r)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,f-&gt;data);   </span><br><span class="line">            f = f-&gt;next; </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(r == f)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(r == L || r == p)</span><br><span class="line">                r = r-&gt;prior; </span><br><span class="line">                <span class="keyword">if</span>(f == r)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,r-&gt;data);   </span><br><span class="line">            r = r-&gt;prior;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(r != L)                      <span class="comment">//如果重合遍历位置不是头结点，则输出</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,r-&gt;data);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p != L)                      <span class="comment">//如果起始位置不是头结点，则输出</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,p-&gt;data); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC02PE98"><a href="#DC02PE98" class="headerlink" title="DC02PE98"></a>DC02PE98</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">isLeagalDuCirLinkList</span><span class="params">(DuCirLinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="comment">//思路：根据双向循环链表定义，出现空节点一定是不合法，所以主要是做判空操作，还有前驱和后继节点判断</span></span><br><span class="line">    <span class="keyword">if</span> (!L) &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE; </span><br><span class="line">    &#125;</span><br><span class="line">    DuCirLinkList p = L-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(!p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p == L-&gt;prior)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p != L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;next) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;next-&gt;prior) &#123;</span><br><span class="line">                <span class="keyword">if</span>(p-&gt;next-&gt;prior == p)</span><br><span class="line">                &#123;</span><br><span class="line">                    p = p-&gt;next;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> FALSE;</span><br><span class="line">                &#125;     </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> FALSE;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第3章"><a href="#第3章" class="headerlink" title="第3章"></a>第3章</h2><h3 id="DC03PE01"><a href="#DC03PE01" class="headerlink" title="DC03PE01"></a>DC03PE01</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">conflictsOfInsertSort</span><span class="params">(RcdSqList* L)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; L-&gt;length; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (L-&gt;rcd[i + <span class="number">1</span>].key &lt; L-&gt;rcd[i].key)</span><br><span class="line">        &#123; </span><br><span class="line">            L-&gt;rcd[<span class="number">0</span>] = L-&gt;rcd[i + <span class="number">1</span>];</span><br><span class="line">            j = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                j--;</span><br><span class="line">                L-&gt;rcd[j + <span class="number">1</span>] = L-&gt;rcd[j];</span><br><span class="line">                ++result;</span><br><span class="line">            &#125; <span class="keyword">while</span> (L-&gt;rcd[<span class="number">0</span>].key &lt; L-&gt;rcd[j - <span class="number">1</span>].key); </span><br><span class="line">            L-&gt;rcd[j] = L-&gt;rcd[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC03PE03"><a href="#DC03PE03" class="headerlink" title="DC03PE03"></a>DC03PE03</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertSort</span><span class="params">(RcdSqList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; L.length; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.rcd[i<span class="number">+1</span>].key &lt; L.rcd[i].key) &#123;</span><br><span class="line">            L.rcd[L.length<span class="number">+1</span>].key = L.rcd[i<span class="number">+1</span>].key;</span><br><span class="line">            j = i<span class="number">+1</span>;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                j--;</span><br><span class="line">                L.rcd[j<span class="number">+1</span>].key = L.rcd[j].key;</span><br><span class="line">            &#125;<span class="keyword">while</span>(L.rcd[L.length<span class="number">+1</span>].key &lt; L.rcd[j<span class="number">-1</span>].key); </span><br><span class="line">            L.rcd[j].key = L.rcd[L.length<span class="number">+1</span>].key;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC03PE06"><a href="#DC03PE06" class="headerlink" title="DC03PE06"></a>DC03PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(RcdSqList2 &amp;L)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> change = L.length,temp_change = L.length;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; change; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">GT</span>(L.rcd[j],L.rcd[j<span class="number">+1</span>]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Swap</span>(L.rcd[j],L.rcd[j<span class="number">+1</span>]);</span><br><span class="line">                temp_change = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(change == temp_change)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        change = temp_change;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC03PE23"><a href="#DC03PE23" class="headerlink" title="DC03PE23"></a>DC03PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CountSort</span><span class="params">(RcdSqList2 &amp;L)</span>  </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> c[MAXSIZE<span class="number">+1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    KeyType a[MAXSIZE<span class="number">+1</span>] = &#123;<span class="number">0</span>&#125;;     <span class="comment">//保留初始序列，辅助后期对序列进行重新排列</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= L.length; ++i) &#123;</span><br><span class="line">        a[i] = L.rcd[i].key;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= L.length; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= L.length; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (L.rcd[j].key &lt; a[i]) &#123;</span><br><span class="line">                ++c[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= L.length; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (c[j] == i) &#123;</span><br><span class="line">                L.rcd[i<span class="number">+1</span>].key = a[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第4章"><a href="#第4章" class="headerlink" title="第4章"></a>第4章</h2><h3 id="DC04PE04"><a href="#DC04PE04" class="headerlink" title="DC04PE04"></a>DC04PE04</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintKeys</span><span class="params">(HashTable ht, <span class="type">void</span>(*print)(StrKeyType))</span></span>&#123;</span><br><span class="line"><span class="comment">/* 请调用形参中的print函数输出关键字 */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> letter = <span class="string">&#x27;A&#x27;</span>; letter &lt;= <span class="string">&#x27;Z&#x27;</span>; letter++) &#123;</span><br><span class="line">        <span class="type">int</span> i = (letter-<span class="string">&#x27;A&#x27;</span>)%ht.size;</span><br><span class="line">        <span class="keyword">while</span>(ht.rcd[i].tag != <span class="number">0</span>)       <span class="comment">//没到空，就线性往下搜索</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ht.rcd[i].tag == <span class="number">1</span> &amp;&amp; ht.rcd[i].key[<span class="number">0</span>] == letter) &#123; <span class="comment">//必须为有效位且第一位是该字母才输出</span></span><br><span class="line">                <span class="built_in">print</span>(ht.rcd[i].key);</span><br><span class="line">            &#125;</span><br><span class="line">            i = (i<span class="number">+1</span>)%ht.size;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC04PE15"><a href="#DC04PE15" class="headerlink" title="DC04PE15"></a>DC04PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">BuildHashTab</span><span class="params">(ChainHashTab &amp;H, <span class="type">int</span> n, HKeyType es[])</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    H.count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> isRepeat = FALSE;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        isRepeat = FALSE;</span><br><span class="line">        HLink q = H.rcd[<span class="built_in">Hash</span>(H,es[i])];</span><br><span class="line">        HLink p = (HLink)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> HNode));</span><br><span class="line">        p-&gt;data = es[i];</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (H.rcd[<span class="built_in">Hash</span>(H,es[i])]) &#123;</span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(q-&gt;data == es[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    isRepeat = TRUE;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">while</span> (<span class="built_in">Collision</span>(H,q));</span><br><span class="line">            <span class="keyword">if</span>(isRepeat)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">free</span>(p);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p-&gt;next = H.rcd[<span class="built_in">Hash</span>(H,es[i])];</span><br><span class="line">            H.rcd[<span class="built_in">Hash</span>(H,es[i])] = p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            H.rcd[<span class="built_in">Hash</span>(H,es[i])] = p;</span><br><span class="line">        &#125;</span><br><span class="line">        H.count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC04PE30"><a href="#DC04PE30" class="headerlink" title="DC04PE30"></a>DC04PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">countConflics</span><span class="params">(LHashTable H)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> confilcsTimes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; H.size; ++i)</span><br><span class="line">&#123;</span><br><span class="line">Node* p = H.rcd[i];</span><br><span class="line"><span class="keyword">if</span> (p) &#123;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line">++confilcsTimes;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">--confilcsTimes;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> confilcsTimes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC04PE35"><a href="#DC04PE35" class="headerlink" title="DC04PE35"></a>DC04PE35</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Node* <span class="title">searchLHash</span><span class="params">(LHashTable H, KeyType key, <span class="type">int</span> &amp;c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node* p = H.rcd[H.<span class="built_in">hash</span>(key,H.size)];</span><br><span class="line">c = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (p) &#123;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;r.key == key) &#123;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line">++c;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">--c;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第5章"><a href="#第5章" class="headerlink" title="第5章"></a>第5章</h2><h3 id="DC05PE04"><a href="#DC05PE04" class="headerlink" title="DC05PE04"></a>DC05PE04</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">G</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span> &amp;&amp; n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m &gt; <span class="number">0</span> &amp;&amp; n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">G</span>(m<span class="number">-1</span>,<span class="number">2</span>*n)+n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE05"><a href="#DC05PE05" class="headerlink" title="DC05PE05"></a>DC05PE05</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">F</span><span class="params">(<span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> n*<span class="built_in">F</span>(n/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE06"><a href="#DC05PE06" class="headerlink" title="DC05PE06"></a>DC05PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Sqrt</span><span class="params">(<span class="type">float</span> A, <span class="type">float</span> p, <span class="type">float</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(p*p-A) &lt; e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Sqrt</span>(A,(p+A/p)/<span class="number">2</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE07"><a href="#DC05PE07" class="headerlink" title="DC05PE07"></a>DC05PE07</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Akm</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">0</span> || n &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m != <span class="number">0</span> &amp;&amp; n == <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Akm</span>(m<span class="number">-1</span>,<span class="number">1</span>);      </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m != <span class="number">0</span> &amp;&amp; n != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Akm</span>(m<span class="number">-1</span>,<span class="built_in">Akm</span>(m,n<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> n<span class="number">+1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE15"><a href="#DC05PE15" class="headerlink" title="DC05PE15"></a>DC05PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">F</span><span class="params">(<span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> rlt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        rlt = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt; <span class="number">0</span>; i/=<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rlt *= i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rlt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE16"><a href="#DC05PE16" class="headerlink" title="DC05PE16"></a>DC05PE16</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Sqrt</span><span class="params">(<span class="type">float</span> A, <span class="type">float</span> p, <span class="type">float</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">abs</span>(p*p-A) &gt;= e) &#123;</span><br><span class="line">        p = (p+A/p)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE20"><a href="#DC05PE20" class="headerlink" title="DC05PE20"></a>DC05PE20</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ChangeColor</span><span class="params">(GTYPE g, <span class="type">int</span> m, <span class="type">int</span> n, <span class="type">char</span> c, <span class="type">int</span> i0, <span class="type">int</span> j0)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="comment">// static char k;   ???  why Not ???</span></span><br><span class="line">    <span class="comment">// if(i0 &lt;= 0 || j0 &lt;= 0 || i0 &gt;= m+1 || j0 &gt;= n+1 || g[i0][j0] != k)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// else &#123;</span></span><br><span class="line">    <span class="comment">//     g[i0][j0] = c;</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0+1,j0);</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0-1,j0);</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0,j0+1);</span></span><br><span class="line">    <span class="comment">//     ChangeColor(g,m,n,c,i0,j0-1);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(i0==<span class="number">0</span> || j0==<span class="number">0</span> || m&lt;<span class="number">1</span> || n&lt;<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span> k = g[i0][j0];</span><br><span class="line">    <span class="type">int</span> x[<span class="number">4</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> y[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(((i0+x[i] &gt; <span class="number">0</span> <span class="keyword">and</span> i0+x[i] &lt;= m) &amp;&amp; (j0+y[i] &gt; <span class="number">0</span> <span class="keyword">and</span> j0+y[i] &lt;= n)) &amp;&amp; g[i0+x[i]][j0+y[i]]==k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">ChangeColor</span>(g,m,n,c,i0+x[i],j0+y[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">             g[i0][j0]=c; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE26"><a href="#DC05PE26" class="headerlink" title="DC05PE26"></a>DC05PE26</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GListLength</span><span class="params">(GList L)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> GListLength = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (L) &#123;</span><br><span class="line">    GListLength++;</span><br><span class="line">    GLNode* p = L-&gt;un.ptr.tp;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">      GListLength++;</span><br><span class="line">      p = p-&gt;un.ptr.tp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> GListLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE30"><a href="#DC05PE30" class="headerlink" title="DC05PE30"></a>DC05PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GListDepth</span><span class="params">(GList ls)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!ls) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ls-&gt;tag == ATOM) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> depth1,depth2;</span><br><span class="line">        depth1 = <span class="built_in">GListDepth</span>(ls-&gt;un.ptr.hp) + <span class="number">1</span>;</span><br><span class="line">        depth2 = <span class="built_in">GListDepth</span>(ls-&gt;un.ptr.tp);</span><br><span class="line">        <span class="keyword">return</span> depth1 &gt; depth2 ? depth1 : depth2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE32"><a href="#DC05PE32" class="headerlink" title="DC05PE32"></a>DC05PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Equal</span><span class="params">(GList A, GList B)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (A != <span class="literal">NULL</span> &amp;&amp; B != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (A-&gt;tag == LIST &amp;&amp; B-&gt;tag == ATOM || A-&gt;tag == ATOM &amp;&amp; B-&gt;tag == LIST) &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (A-&gt;tag == LIST &amp;&amp; B-&gt;tag == LIST) &#123;</span><br><span class="line">            <span class="built_in">return</span> (<span class="built_in">Equal</span>(A-&gt;un.ptr.hp,B-&gt;un.ptr.hp) &amp;&amp; <span class="built_in">Equal</span>(A-&gt;un.ptr.tp,B-&gt;un.ptr.tp));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (A-&gt;tag == ATOM &amp;&amp; B-&gt;tag == ATOM) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A-&gt;un.atom == B-&gt;un.atom) &#123;</span><br><span class="line">                <span class="keyword">return</span> TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (A == <span class="literal">NULL</span> &amp;&amp; B == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC05PE33"><a href="#DC05PE33" class="headerlink" title="DC05PE33"></a>DC05PE33</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OutAtom</span><span class="params">(GList A, <span class="type">int</span> layer, <span class="type">void</span>(*Out2)(<span class="type">char</span>, <span class="type">int</span>))</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!A)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(A-&gt;tag == ATOM)  </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Out2</span>(A-&gt;un.atom, layer);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">OutAtom</span>(A-&gt;un.ptr.hp,layer<span class="number">+1</span>,Out2);</span><br><span class="line">            <span class="built_in">OutAtom</span>(A-&gt;un.ptr.tp,layer,Out2);  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第6章"><a href="#第6章" class="headerlink" title="第6章"></a>第6章</h2><h3 id="DC06PE01"><a href="#DC06PE01" class="headerlink" title="DC06PE01"></a>DC06PE01</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">commonAncestor</span><span class="params">(SqBiTree T, <span class="type">int</span> i, <span class="type">int</span> j)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="keyword">if</span> (i &lt; <span class="number">1</span> || j &lt; <span class="number">1</span> || i &gt; T.lastIndex || j &gt; T.lastIndex) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> tempParent_I = i/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span>(tempParent_I)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> tempJ = j;</span><br><span class="line">    <span class="keyword">while</span>(tempJ &gt; tempParent_I)</span><br><span class="line">    &#123;</span><br><span class="line">      tempJ /= <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span>(tempJ == tempParent_I)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> tempParent_I;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    tempParent_I /= <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE02"><a href="#DC06PE02" class="headerlink" title="DC06PE02"></a>DC06PE02</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">is_Desendant</span><span class="params">(SqBiTree T, <span class="type">int</span> u, <span class="type">int</span> v)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (u &lt; <span class="number">1</span> || v &lt; <span class="number">1</span> || u &gt; T.lastIndex || v &gt; T.lastIndex) &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(v &gt; u)</span><br><span class="line">    &#123;</span><br><span class="line">        v /= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (v == u) &#123;</span><br><span class="line">            <span class="keyword">return</span> TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE06"><a href="#DC06PE06" class="headerlink" title="DC06PE06"></a>DC06PE06</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">Similar</span><span class="params">(BiTree T1, BiTree T2)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T1 &amp;&amp; !T2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T1 || !T2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Similar</span>(T1-&gt;lchild,T2-&gt;lchild) &amp;&amp; <span class="built_in">Similar</span>(T1-&gt;rchild,T2-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE11"><a href="#DC06PE11" class="headerlink" title="DC06PE11"></a>DC06PE11</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getTreeNodeNum</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> T ? (<span class="number">1</span>+<span class="built_in">getTreeNodeNum</span>(T-&gt;lchild)+<span class="built_in">getTreeNodeNum</span>(T-&gt;rchild)):<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">TElemType <span class="title">PreOrderK</span><span class="params">(BiTree T, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T || k &lt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> count = <span class="built_in">getTreeNodeNum</span>(T-&gt;lchild);</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> T-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count &gt;= k<span class="number">-1</span> ? <span class="built_in">PreOrderK</span>(T-&gt;lchild,k<span class="number">-1</span>): <span class="built_in">PreOrderK</span>(T-&gt;rchild, k<span class="number">-1</span>-count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE12"><a href="#DC06PE12" class="headerlink" title="DC06PE12"></a>DC06PE12</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Leaves</span><span class="params">(BiTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; !T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Leaves</span>(T-&gt;lchild)+<span class="built_in">Leaves</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE21"><a href="#DC06PE21" class="headerlink" title="DC06PE21"></a>DC06PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrder</span><span class="params">(BiTree T, Status (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    Stack S;</span><br><span class="line">    <span class="built_in">InitStack</span>(S);</span><br><span class="line">    BiTree p;</span><br><span class="line">    <span class="built_in">Push</span>(S,T);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">StackEmpty</span>(S))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Pop</span>(S,p);</span><br><span class="line">        <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push</span>(S,p-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push</span>(S,p-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE23"><a href="#DC06PE23" class="headerlink" title="DC06PE23"></a>DC06PE23</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printNoLessThanKey_InOrder</span><span class="params">(BiTree T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_InOrder</span>(T-&gt;lchild,k);</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;data &gt;= k) &#123;</span><br><span class="line">        <span class="built_in">printKey</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_InOrder</span>(T-&gt;rchild,k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE27"><a href="#DC06PE27" class="headerlink" title="DC06PE27"></a>DC06PE27</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printNoLessThanKey_PreOrder</span><span class="params">(BiTree T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;data &gt;= k) &#123;</span><br><span class="line">        <span class="built_in">printKey</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PreOrder</span>(T-&gt;lchild,k);</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PreOrder</span>(T-&gt;rchild,k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE29"><a href="#DC06PE29" class="headerlink" title="DC06PE29"></a>DC06PE29</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printNoLessThanKey_PostOrder</span><span class="params">(BiTree T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PostOrder</span>(T-&gt;lchild,k);</span><br><span class="line">    <span class="built_in">printNoLessThanKey_PostOrder</span>(T-&gt;rchild,k);</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;data &gt;= k) &#123;</span><br><span class="line">        <span class="built_in">printKey</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE30"><a href="#DC06PE30" class="headerlink" title="DC06PE30"></a>DC06PE30</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">isIsomorphic</span><span class="params">(BiTree T1, BiTree T2)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!T1 &amp;&amp; !T2) &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!(T1 || T2))&#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T1-&gt;data != T2-&gt;data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!T1-&gt;lchild &amp;&amp; !T2-&gt;lchild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;rchild,T2-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!T1-&gt;rchild &amp;&amp; !T2-&gt;rchild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;lchild,T2-&gt;lchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((T1-&gt;lchild &amp;&amp; T2-&gt;lchild) &amp;&amp; (T1-&gt;lchild-&gt;data == T2-&gt;lchild-&gt;data)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;lchild,T2-&gt;lchild) &amp;&amp; <span class="built_in">isIsomorphic</span>(T1-&gt;rchild, T2-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isIsomorphic</span>(T1-&gt;lchild,T2-&gt;rchild) &amp;&amp; <span class="built_in">isIsomorphic</span>(T1-&gt;rchild, T2-&gt;lchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE31"><a href="#DC06PE31" class="headerlink" title="DC06PE31"></a>DC06PE31</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrder</span><span class="params">(BiTree bt, <span class="type">void</span> (*visit)(TElemType))</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    SqStack2 S;</span><br><span class="line">    <span class="built_in">InitStack_Sq2</span>(S);</span><br><span class="line">    BiTree p;</span><br><span class="line">    <span class="built_in">Push_Sq2</span>(S,bt);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">StackEmpty_Sq2</span>(S))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Pop_Sq2</span>(S,p);</span><br><span class="line">        <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push_Sq2</span>(S,p-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Push_Sq2</span>(S,p-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE32"><a href="#DC06PE32" class="headerlink" title="DC06PE32"></a>DC06PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrder</span><span class="params">(BiTree bt, <span class="type">void</span> (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 使用栈，非递归后序遍历二叉树bt，    */</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 对每个结点的元素域data调用函数visit */</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SqStack2 S1;</span><br><span class="line">    <span class="built_in">InitStack_Sq2</span>(S1);</span><br><span class="line">    SElemType se;</span><br><span class="line">    se.tag = <span class="number">0</span>;</span><br><span class="line">    se.ptr = bt;</span><br><span class="line">    BiTree p = bt;</span><br><span class="line">    <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">StackEmpty_Sq2</span>(S1))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Pop_Sq2</span>(S1,se);</span><br><span class="line">        p = se.ptr;</span><br><span class="line">        <span class="keyword">if</span>(se.tag == <span class="number">1</span>)     <span class="comment">//若已经过了一次</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">visit</span>(se.ptr-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            se.tag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                se.ptr = p-&gt;rchild;</span><br><span class="line">                se.tag = <span class="number">0</span>; </span><br><span class="line">                <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                se.ptr = p-&gt;lchild;</span><br><span class="line">                se.tag = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">Push_Sq2</span>(S1,se);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE33"><a href="#DC06PE33" class="headerlink" title="DC06PE33"></a>DC06PE33</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ExchangeSubTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    BiTree temp = T-&gt;rchild;</span><br><span class="line">    T-&gt;rchild = T-&gt;lchild;</span><br><span class="line">    T-&gt;lchild = temp; </span><br><span class="line"></span><br><span class="line">    <span class="built_in">ExchangeSubTree</span>(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">ExchangeSubTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE34"><a href="#DC06PE34" class="headerlink" title="DC06PE34"></a>DC06PE34</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrder</span><span class="params">(TriTree bt, <span class="type">void</span> (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 不使用栈，非递归后序遍历二叉树bt，  */</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 对每个结点的元素域data调用函数visit */</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    TriTree p = bt;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;mark == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;lchild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">1</span>) &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;rchild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">            p = p-&gt;parent;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE35"><a href="#DC06PE35" class="headerlink" title="DC06PE35"></a>DC06PE35</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrder</span><span class="params">(TriTree PT, <span class="type">void</span> (*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 不使用栈，非递归中序遍历二叉树bt，  */</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 对每个结点的元素域data调用函数visit */</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!PT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    TriTree p = PT;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;mark == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;lchild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">1</span>) &#123;</span><br><span class="line">            p-&gt;mark = <span class="number">2</span>;</span><br><span class="line">            <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                p = p-&gt;rchild;</span><br><span class="line">            &#125;         </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;mark == <span class="number">2</span>) &#123;</span><br><span class="line">            p = p-&gt;parent;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE36"><a href="#DC06PE36" class="headerlink" title="DC06PE36"></a>DC06PE36</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getTreeHeight</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="type">int</span> count=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span>(T-&gt;lchild!=<span class="literal">NULL</span>)  </span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">        T=T-&gt;lchild;</span><br><span class="line">    &#125; </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> count; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTNode* <span class="title">getLastNode</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"><span class="comment">/* 求完全二叉树的最后一层的最后一个结点 */</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;lchild == <span class="literal">NULL</span>)  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> T;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">getTreeHeight</span>(T-&gt;lchild) &gt; <span class="built_in">getTreeHeight</span>(T-&gt;rchild) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">getLastNode</span>(T-&gt;lchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">getLastNode</span>(T-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC06PE37"><a href="#DC06PE37" class="headerlink" title="DC06PE37"></a>DC06PE37</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">TElemType <span class="title">findParent</span><span class="params">(BiTree T, TElemType data, BiTNode* parent)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (!T || T-&gt;data == data &amp;&amp; !parent) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;lchild &amp;&amp; T-&gt;lchild-&gt;data == data) &#123;</span><br><span class="line">        <span class="keyword">return</span> T-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;rchild &amp;&amp; T-&gt;rchild-&gt;data == data) &#123;</span><br><span class="line">        <span class="keyword">return</span> T-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">findParent</span>(T-&gt;lchild,data,T)?<span class="built_in">findParent</span>(T-&gt;lchild,data,T):<span class="built_in">findParent</span>(T-&gt;rchild,data,T);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE40"><a href="#DC06PE40" class="headerlink" title="DC06PE40"></a>DC06PE40</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">isBrother</span><span class="params">(BiTree T, TElemType dx, TElemType dy)</span></span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">     <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">          <span class="keyword">return</span> FALSE;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (T-&gt;lchild &amp;&amp; T-&gt;rchild) &#123;</span><br><span class="line">          <span class="keyword">if</span> (T-&gt;lchild-&gt;data == dx &amp;&amp; T-&gt;rchild-&gt;data == dy) &#123;</span><br><span class="line">               <span class="keyword">return</span> TRUE;</span><br><span class="line">          &#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (T-&gt;rchild-&gt;data == dx &amp;&amp; T-&gt;lchild-&gt;data == dy) &#123;</span><br><span class="line">               <span class="keyword">return</span> TRUE;</span><br><span class="line">          &#125;  </span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="built_in">isBrother</span>(T-&gt;lchild,dx,dy) || <span class="built_in">isBrother</span>(T-&gt;rchild,dx,dy);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE43"><a href="#DC06PE43" class="headerlink" title="DC06PE43"></a>DC06PE43</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CopyBiTree</span><span class="params">(BiTree T, BiTree &amp;TT)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    TT = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">    TT-&gt;data = T-&gt;data;</span><br><span class="line">    TT-&gt;lchild = T-&gt;lchild;</span><br><span class="line">    TT-&gt;rchild = T-&gt;rchild;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CopyBiTree</span>(T-&gt;lchild,TT-&gt;lchild);</span><br><span class="line">    <span class="built_in">CopyBiTree</span>(T-&gt;rchild,TT-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE44"><a href="#DC06PE44" class="headerlink" title="DC06PE44"></a>DC06PE44</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Depthx</span><span class="params">(BiTree T, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> deepth1,deepth2;  </span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data==x)  </span><br><span class="line">    &#123;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;lchild==<span class="literal">NULL</span>)</span><br><span class="line">            deepth1=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;</span><br><span class="line">            deepth1 = <span class="built_in">Depthx</span>(T-&gt;lchild,T-&gt;lchild-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;rchild==<span class="literal">NULL</span>)</span><br><span class="line">            deepth2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            deepth2 = <span class="built_in">Depthx</span>(T-&gt;rchild,T-&gt;rchild-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + (deepth1&gt;deepth2?deepth1:deepth2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        deepth1=<span class="built_in">Depthx</span>(T-&gt;lchild,x);</span><br><span class="line">        deepth2=<span class="built_in">Depthx</span>(T-&gt;rchild,x);</span><br><span class="line">        <span class="keyword">return</span>  deepth1&gt;deepth2?deepth1:deepth2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE45"><a href="#DC06PE45" class="headerlink" title="DC06PE45"></a>DC06PE45</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReleaseX</span><span class="params">(BiTree &amp;bt, <span class="type">char</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(bt-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (bt-&gt;lchild) &#123;</span><br><span class="line">            <span class="built_in">ReleaseX</span>(bt-&gt;lchild,bt-&gt;lchild-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (bt-&gt;rchild) &#123;</span><br><span class="line">            <span class="built_in">ReleaseX</span>(bt-&gt;rchild,bt-&gt;rchild-&gt;data);   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if(!bt-&gt;lchild &amp;&amp; !bt-&gt;rchild)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="built_in">free</span>(bt);</span><br><span class="line">        bt = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">ReleaseX</span>(bt-&gt;lchild,x);</span><br><span class="line">        <span class="built_in">ReleaseX</span>(bt-&gt;rchild,x);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC06PE46"><a href="#DC06PE46" class="headerlink" title="DC06PE46"></a>DC06PE46</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CopyBiTree</span><span class="params">(BiTree T, BiTree &amp;TT)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    TT=(BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">    TT-&gt;data = T-&gt;data;</span><br><span class="line">    TT-&gt;lchild = TT-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">    LQueue Q_T,Q_TT;</span><br><span class="line">    BiTree temp=TT;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q_T);</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q_TT);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q_T,T);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q_TT,temp);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">QueueEmpty_LQ</span>(Q_T)!=TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">DeQueue_LQ</span>(Q_T,T);</span><br><span class="line">        <span class="built_in">DeQueue_LQ</span>(Q_TT,temp);  </span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp-&gt;lchild = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">            temp-&gt;lchild-&gt;data = T-&gt;lchild-&gt;data;</span><br><span class="line">            temp-&gt;lchild-&gt;lchild = temp-&gt;lchild-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_T,T-&gt;lchild);</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_TT,temp-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp-&gt;rchild = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode));</span><br><span class="line">            temp-&gt;rchild-&gt;data = T-&gt;rchild-&gt;data;</span><br><span class="line">            temp-&gt;rchild-&gt;lchild = temp-&gt;rchild-&gt;rchild = <span class="literal">NULL</span>; </span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_T,T-&gt;rchild);</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q_TT,temp-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE47"><a href="#DC06PE47" class="headerlink" title="DC06PE47"></a>DC06PE47</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LevelOrder</span><span class="params">(BiTree bt, <span class="type">char</span> *ss)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span>* ss_temp = ss;</span><br><span class="line">    BiTree temp = <span class="literal">NULL</span>;</span><br><span class="line">    LQueue Q1;</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q1);</span><br><span class="line"></span><br><span class="line">    *ss_temp++ = bt-&gt;data;</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q1,bt);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">DeQueue_LQ</span>(Q1,temp)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(temp-&gt;lchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *ss_temp++ = temp-&gt;lchild-&gt;data;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q1,temp-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp-&gt;rchild != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *ss_temp++ = temp-&gt;rchild-&gt;data;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q1,temp-&gt;rchild);          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *ss_temp = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE48"><a href="#DC06PE48" class="headerlink" title="DC06PE48"></a>DC06PE48</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree root, TElemType target, SqStack2&amp; path)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTree <span class="title">CommAncestor</span><span class="params">(BiTree root, TElemType c1, TElemType c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">if</span>(!root || root-&gt;data == c1 || root-&gt;data == c2)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   BiTree parent = <span class="literal">NULL</span>;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = <span class="literal">NULL</span>;</span><br><span class="line">   SqStack2 S1,S2,Sq,Sp;</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(S1);</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(S2);</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(Sq);</span><br><span class="line">   <span class="built_in">InitStack_Sq2</span>(Sp);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(!<span class="built_in">findPath</span>(root,c1,Sp) || !<span class="built_in">findPath</span>(root,c2,Sq))</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> (!<span class="built_in">StackEmpty_Sq2</span>(Sp)) &#123;</span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(Sp,temp);</span><br><span class="line">      <span class="built_in">Push_Sq2</span>(S1,temp);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> (!<span class="built_in">StackEmpty_Sq2</span>(Sq)) &#123;</span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(Sq,temp);</span><br><span class="line">      <span class="built_in">Push_Sq2</span>(S2,temp);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   SElemType temp1,temp2;</span><br><span class="line">   temp<span class="number">1.</span>ptr = temp<span class="number">2.</span>ptr = <span class="literal">NULL</span>;</span><br><span class="line">   <span class="keyword">do</span>&#123;</span><br><span class="line">      parent = temp<span class="number">1.</span>ptr;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">GetTop_Sq2</span>(S1,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == c1) <span class="keyword">break</span>;</span><br><span class="line">      <span class="built_in">GetTop_Sq2</span>(S2,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == c2) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(S1,temp1);</span><br><span class="line">      <span class="built_in">Pop_Sq2</span>(S2,temp2);</span><br><span class="line">   &#125;<span class="keyword">while</span>(temp<span class="number">1.</span>ptr == temp<span class="number">2.</span>ptr);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree root, TElemType target, SqStack2&amp; path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (!root) &#123;</span><br><span class="line">      <span class="keyword">return</span> FALSE;</span><br><span class="line">   &#125;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = root;</span><br><span class="line">   <span class="built_in">Push_Sq2</span>(path,temp);</span><br><span class="line">   <span class="keyword">if</span>(root-&gt;data == target)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> TRUE;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>((root-&gt;lchild &amp;&amp; <span class="built_in">findPath</span>(root-&gt;lchild,target,path)) || (root-&gt;rchild &amp;&amp; <span class="built_in">findPath</span>(root-&gt;rchild,target,path)))</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">Pop_Sq2</span>(path,temp);</span><br><span class="line">   <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE49"><a href="#DC06PE49" class="headerlink" title="DC06PE49"></a>DC06PE49</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">CompleteBiTree</span><span class="params">(BiTree bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!bt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> hasNullBefore = FALSE;</span><br><span class="line">    LQueue Q;</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q,bt);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">DeQueue_LQ</span>(Q,bt))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(bt-&gt;lchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!hasNullBefore)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">EnQueue_LQ</span>(Q,bt-&gt;lchild);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            hasNullBefore = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bt-&gt;rchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!hasNullBefore)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">EnQueue_LQ</span>(Q,bt-&gt;rchild);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            hasNullBefore = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE50"><a href="#DC06PE50" class="headerlink" title="DC06PE50"></a>DC06PE50</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status  <span class="title">BTEqual</span><span class="params">(BiTree T1, BiTree T2)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T1 &amp;&amp; !T2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T1 || !T2)&#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T1-&gt;data == T2-&gt;data &amp;&amp; <span class="built_in">BTEqual</span>(T1-&gt;lchild,T2-&gt;lchild) &amp;&amp; <span class="built_in">BTEqual</span>(T1-&gt;rchild,T2-&gt;rchild))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE51"><a href="#DC06PE51" class="headerlink" title="DC06PE51"></a>DC06PE51</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Degree1</span><span class="params">(BiTree T,<span class="type">int</span> &amp;count)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; !T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!T-&gt;lchild || !T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Degree1</span>(T-&gt;lchild,count);</span><br><span class="line">    <span class="built_in">Degree1</span>(T-&gt;rchild,count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE52"><a href="#DC06PE52" class="headerlink" title="DC06PE52"></a>DC06PE52</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">BranchNodes</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; !T-&gt;rchild)    <span class="comment">//判断是否为叶子节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">BranchNodes</span>(T-&gt;lchild) + <span class="built_in">BranchNodes</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE53"><a href="#DC06PE53" class="headerlink" title="DC06PE53"></a>DC06PE53</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LevelSum</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    LQueue Q;</span><br><span class="line">    <span class="built_in">InitQueue_LQ</span>(Q);</span><br><span class="line">    <span class="built_in">EnQueue_LQ</span>(Q,T);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">DeQueue_LQ</span>(Q,T)) &#123;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;lchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q,T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;rchild)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">EnQueue_LQ</span>(Q,T-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE54"><a href="#DC06PE54" class="headerlink" title="DC06PE54"></a>DC06PE54</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ChangeTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;lchild &amp;&amp; T-&gt;rchild) <span class="comment">//如果T没有左孩子但有右孩子</span></span><br><span class="line">    &#123;</span><br><span class="line">        T-&gt;lchild = T-&gt;rchild;</span><br><span class="line">        T-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ChangeTree</span>(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">ChangeTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE55"><a href="#DC06PE55" class="headerlink" title="DC06PE55"></a>DC06PE55</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Width</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    queue&lt;BiTNode*&gt;q;</span><br><span class="line">    q.<span class="built_in">push</span>(T);</span><br><span class="line">    <span class="type">int</span> width = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        width = q.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(width &gt; res) res = width;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;width; i++)&#123;</span><br><span class="line">            BiTNode *node = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;lchild) q.<span class="built_in">push</span>(node-&gt;lchild);</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;rchild) q.<span class="built_in">push</span>(node-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE56"><a href="#DC06PE56" class="headerlink" title="DC06PE56"></a>DC06PE56</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">SearchX</span><span class="params">(BiTree T, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">SearchX</span>(T-&gt;lchild,x) || <span class="built_in">SearchX</span>(T-&gt;rchild,x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE57"><a href="#DC06PE57" class="headerlink" title="DC06PE57"></a>DC06PE57</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">NodeLevel</span><span class="params">(BiTree t, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(t-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> level1,level2;</span><br><span class="line">    level1=<span class="built_in">NodeLevel</span>(t-&gt;lchild,x);</span><br><span class="line">    level2=<span class="built_in">NodeLevel</span>(t-&gt;rchild,x);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(level1!=<span class="number">-1</span> )</span><br><span class="line">        <span class="keyword">return</span> (level1<span class="number">+1</span>);</span><br><span class="line">    <span class="keyword">if</span>(level2!=<span class="number">-1</span>)  </span><br><span class="line">        <span class="keyword">return</span> (level2<span class="number">+1</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE58"><a href="#DC06PE58" class="headerlink" title="DC06PE58"></a>DC06PE58</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">countTree</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>+<span class="built_in">countTree</span>(T-&gt;lchild)+<span class="built_in">countTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">xSum</span><span class="params">(BiTree T, TElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">countTree</span>(T);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="type">int</span> count1,count2;</span><br><span class="line">    count1 = <span class="built_in">xSum</span>(T-&gt;lchild,x);</span><br><span class="line">    count2 = <span class="built_in">xSum</span>(T-&gt;rchild,x);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> count1&gt;count2?count1:count2; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE59"><a href="#DC06PE59" class="headerlink" title="DC06PE59"></a>DC06PE59</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">xLevel</span><span class="params">(BiTree T,TElemType x, <span class="type">bool</span> &amp;found, <span class="type">int</span> &amp;xlev)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        found = FALSE;</span><br><span class="line">        xlev = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data == x)</span><br><span class="line">    &#123;</span><br><span class="line">        found = TRUE;</span><br><span class="line">        xlev++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        xlev++;</span><br><span class="line">        <span class="type">int</span> temp=xlev;                  <span class="comment">//记录当前层次，用于后面回溯</span></span><br><span class="line">        <span class="built_in">xLevel</span>(T-&gt;lchild,x,found,xlev);</span><br><span class="line">  </span><br><span class="line">        <span class="keyword">if</span>(!found)</span><br><span class="line">        &#123; </span><br><span class="line">            xlev=temp;</span><br><span class="line">            <span class="built_in">xLevel</span>(T-&gt;rchild,x,found,xlev); </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE60"><a href="#DC06PE60" class="headerlink" title="DC06PE60"></a>DC06PE60</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">RegularBiTree</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)      <span class="comment">//空树</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(T-&gt;lchild &amp;&amp; T-&gt;rchild || !T-&gt;lchild &amp;&amp; !T-&gt;rchild))   <span class="comment">//若度为1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RegularBiTree</span>(T-&gt;lchild) &amp;&amp; <span class="built_in">RegularBiTree</span>(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DC06PE61"><a href="#DC06PE61" class="headerlink" title="DC06PE61"></a>DC06PE61</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="function">Status <span class="title">SmallBiTree</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> small1 = TRUE,small2 = TRUE;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;lchild) &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data &lt; T-&gt;lchild-&gt;data)</span><br><span class="line">        &#123;</span><br><span class="line">            small1 = <span class="built_in">SmallBiTree</span>(T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            small1 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (T-&gt;rchild) &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data &lt; T-&gt;rchild-&gt;data)</span><br><span class="line">        &#123;</span><br><span class="line">            small2 = <span class="built_in">SmallBiTree</span>(T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            small2 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> small1 &amp;&amp; small2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE62"><a href="#DC06PE62" class="headerlink" title="DC06PE62"></a>DC06PE62</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Width</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    queue&lt;BiTNode*&gt;q;</span><br><span class="line">    q.<span class="built_in">push</span>(T);</span><br><span class="line">    <span class="type">int</span> width = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        width = q.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(width &gt; res) res = width;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;width; i++)&#123;</span><br><span class="line">            BiTNode *node = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;lchild) q.<span class="built_in">push</span>(node-&gt;lchild);</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;rchild) q.<span class="built_in">push</span>(node-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE65"><a href="#DC06PE65" class="headerlink" title="DC06PE65"></a>DC06PE65</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    way1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Status IsBSTree(BSTree T) </span></span><br><span class="line"><span class="comment">// &#123;   // Add your code here</span></span><br><span class="line"><span class="comment">//     if(!T)</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         return TRUE;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     if(T-&gt;lchild)</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         if(T-&gt;data.key &lt; T-&gt;lchild-&gt;data.key)</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             return FALSE;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     if(T-&gt;rchild)</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         if(T-&gt;data.key &gt; T-&gt;rchild-&gt;data.key)</span></span><br><span class="line"><span class="comment">//         &#123;</span></span><br><span class="line"><span class="comment">//             return FALSE;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     return IsBSTree(T-&gt;lchild) &amp;&amp; IsBSTree(T-&gt;rchild);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    way2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">IsBSTree</span><span class="params">(BSTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> flag1,flag2;</span><br><span class="line">    flag1 = flag2 = TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;lchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data.key &gt; T-&gt;lchild-&gt;data.key)</span><br><span class="line">        &#123;</span><br><span class="line">            flag1 = <span class="built_in">IsBSTree</span>(T-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            flag1 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;rchild)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;data.key &lt; T-&gt;rchild-&gt;data.key)</span><br><span class="line">        &#123;</span><br><span class="line">            flag2 = <span class="built_in">IsBSTree</span>(T-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            flag2 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flag1 &amp;&amp; flag2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE66"><a href="#DC06PE66" class="headerlink" title="DC06PE66"></a>DC06PE66</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OrderOut</span><span class="params">(BSTree T, KeyType k, <span class="type">void</span>(*visit)(TElemType))</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">OrderOut</span>(T-&gt;rchild,k,visit);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(T-&gt;data.key &gt;= k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">visit</span>(T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">OrderOut</span>(T-&gt;lchild,k,visit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE67"><a href="#DC06PE67" class="headerlink" title="DC06PE67"></a>DC06PE67</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">InsertBST_I</span><span class="params">(BSTree &amp;T, TElemType k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        T = (BSTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">        T-&gt;lchild = T-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">        T-&gt;data = k;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BSTree temp = T;</span><br><span class="line">    <span class="keyword">while</span>(temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//二叉搜索树，遵循左小右大原则，左子树节点值比根节点值小，右子树节点值比根节点值大</span></span><br><span class="line">        <span class="keyword">if</span>(temp-&gt;data.key &lt; k.key)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp-&gt;rchild)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = temp-&gt;rchild;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                temp-&gt;rchild = (BSTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">                temp-&gt;rchild-&gt;data = k;</span><br><span class="line">                temp-&gt;rchild-&gt;lchild = temp-&gt;rchild-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">                <span class="keyword">return</span> TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp-&gt;data.key &gt; k.key)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp-&gt;lchild)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = temp-&gt;lchild;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                temp-&gt;lchild = (BSTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">                temp-&gt;lchild-&gt;data = k;</span><br><span class="line">                temp-&gt;lchild-&gt;lchild = temp-&gt;lchild-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">                <span class="keyword">return</span> TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;      <span class="comment">//已经有等于k的值，插入不进去</span></span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE68"><a href="#DC06PE68" class="headerlink" title="DC06PE68"></a>DC06PE68</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree T, TElemType target, Stack&amp; path)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTree <span class="title">CommAncestor</span><span class="params">(BiTree T, TElemType a, TElemType b)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">if</span>(!T || T-&gt;data == a || T-&gt;data == b)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   BiTree parent = <span class="literal">NULL</span>;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = <span class="literal">NULL</span>;</span><br><span class="line">   Stack S1,S2,Sq,Sp;</span><br><span class="line">   <span class="built_in">InitStack</span>(S1);</span><br><span class="line">   <span class="built_in">InitStack</span>(S2);</span><br><span class="line">   <span class="built_in">InitStack</span>(Sq);</span><br><span class="line">   <span class="built_in">InitStack</span>(Sp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">findPath</span>(T,a,Sp) || !<span class="built_in">findPath</span>(T,b,Sq))      <span class="comment">//若任意一个元素在树中不存在</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">StackEmpty</span>(Sp)) &#123;</span><br><span class="line">        <span class="built_in">Pop</span>(Sp,temp);</span><br><span class="line">        <span class="built_in">Push</span>(S1,temp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">StackEmpty</span>(Sq)) &#123;</span><br><span class="line">        <span class="built_in">Pop</span>(Sq,temp);</span><br><span class="line">        <span class="built_in">Push</span>(S2,temp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   SElemType temp1,temp2;</span><br><span class="line">   temp<span class="number">1.</span>ptr = temp<span class="number">2.</span>ptr = <span class="literal">NULL</span>;</span><br><span class="line">   <span class="keyword">do</span>&#123;</span><br><span class="line">      parent = temp<span class="number">1.</span>ptr;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">GetTop</span>(S1,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == a) <span class="keyword">break</span>;</span><br><span class="line">      <span class="built_in">GetTop</span>(S2,temp);</span><br><span class="line">      <span class="keyword">if</span>(temp.ptr-&gt;data == b) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">Pop</span>(S1,temp1);</span><br><span class="line">      <span class="built_in">Pop</span>(S2,temp2);</span><br><span class="line">   &#125;<span class="keyword">while</span>(temp<span class="number">1.</span>ptr == temp<span class="number">2.</span>ptr);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findPath</span><span class="params">(BiTree T, TElemType target, Stack&amp; path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">      <span class="keyword">return</span> FALSE;</span><br><span class="line">   &#125;</span><br><span class="line">   SElemType temp;</span><br><span class="line">   temp.ptr = T;</span><br><span class="line">   <span class="built_in">Push</span>(path,temp);</span><br><span class="line">   <span class="keyword">if</span>(T-&gt;data == target)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> TRUE;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>((T-&gt;lchild &amp;&amp; <span class="built_in">findPath</span>(T-&gt;lchild,target,path)) || (T-&gt;rchild &amp;&amp; <span class="built_in">findPath</span>(T-&gt;rchild,target,path)))</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">Pop</span>(path,temp);</span><br><span class="line">   <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE69"><a href="#DC06PE69" class="headerlink" title="DC06PE69"></a>DC06PE69</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">treeToString</span><span class="params">(BiTree T, string &amp;str)</span></span>;</span><br><span class="line"><span class="function"><span class="type">char</span>* <span class="title">BiTree2String</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    string str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">treeToString</span>(T, str);</span><br><span class="line">    <span class="type">char</span> *res = <span class="keyword">new</span> <span class="type">char</span>[str.<span class="built_in">size</span>() + <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(res, str.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">treeToString</span><span class="params">(BiTree T, string &amp;str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">        str += <span class="string">&quot;#&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    str += T-&gt;data; </span><br><span class="line">    <span class="keyword">if</span> (T-&gt;lchild || T-&gt;rchild) &#123;</span><br><span class="line">        str += <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">        <span class="built_in">treeToString</span>(T-&gt;lchild, str);</span><br><span class="line">        str += <span class="string">&#x27;,&#x27;</span>;</span><br><span class="line">        <span class="built_in">treeToString</span>(T-&gt;rchild, str);</span><br><span class="line">        str += <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC06PE75"><a href="#DC06PE75" class="headerlink" title="DC06PE75"></a>DC06PE75</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">BSTNode *<span class="title">Ranking</span><span class="params">(BSTree T, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)                  <span class="comment">//空树或者没找到</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;lsize == k)       <span class="comment">//找到了第k小结点</span></span><br><span class="line">        <span class="keyword">return</span> T;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (T-&gt;lsize &lt; k)  <span class="comment">//往右找</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Ranking</span>(T-&gt;rchild,k-(T-&gt;lsize));</span><br><span class="line">    <span class="keyword">else</span>                    <span class="comment">//往左找</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Ranking</span>(T-&gt;lchild,k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第7章"><a href="#第7章" class="headerlink" title="第7章"></a>第7章</h2><h3 id="DC07PE15"><a href="#DC07PE15" class="headerlink" title="DC07PE15"></a>DC07PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Leave</span><span class="params">(CSTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!T-&gt;firstChild)  <span class="comment">//该节点没有儿子,说明是叶子节点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">Leave</span>(T-&gt;nextSibling);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Leave</span>(T-&gt;firstChild) + <span class="built_in">Leave</span>(T-&gt;nextSibling);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE17"><a href="#DC07PE17" class="headerlink" title="DC07PE17"></a>DC07PE17</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Degree</span><span class="params">(CSTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> currentDegree = <span class="number">0</span>,childMaxDegree = <span class="number">0</span>;</span><br><span class="line">    CSTree temp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;firstChild)</span><br><span class="line">    &#123;</span><br><span class="line">        currentDegree++;</span><br><span class="line">        temp = T-&gt;firstChild-&gt;nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(temp)</span><br><span class="line">    &#123;</span><br><span class="line">        currentDegree++;</span><br><span class="line">        temp = temp-&gt;nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line">    childMaxDegree = <span class="built_in">Degree</span>(T-&gt;firstChild) &gt; <span class="built_in">Degree</span>(T-&gt;nextSibling) ? <span class="built_in">Degree</span>(T-&gt;firstChild):<span class="built_in">Degree</span>(T-&gt;nextSibling);</span><br><span class="line">    <span class="keyword">return</span> currentDegree &gt; childMaxDegree ?currentDegree:childMaxDegree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE22"><a href="#DC07PE22" class="headerlink" title="DC07PE22"></a>DC07PE22</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">PTreeDepth</span><span class="params">(PTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T.nodes)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> depth = <span class="number">1</span>;  <span class="comment">//若只有一个结点，则深度为1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = T.nodeNum<span class="number">-1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = i,tempDepth = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(t != T.r)</span><br><span class="line">        &#123;</span><br><span class="line">            tempDepth++;</span><br><span class="line">            t = T.nodes[t].parent;</span><br><span class="line">        &#125;</span><br><span class="line">        depth = depth &gt; tempDepth ? depth: tempDepth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> depth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE24"><a href="#DC07PE24" class="headerlink" title="DC07PE24"></a>DC07PE24</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">PCTreeDepth</span><span class="params">(PCTree T)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(T.n == <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> depth = <span class="number">0</span>, n = T.n;</span><br><span class="line">    PCTreeNode node;</span><br><span class="line">    <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        node = T.nodes[--n];</span><br><span class="line">        <span class="keyword">while</span>(node.parent != <span class="number">-1</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            node = T.nodes[node.parent];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count &gt; depth) depth = count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> depth + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE26"><a href="#DC07PE26" class="headerlink" title="DC07PE26"></a>DC07PE26</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">TreeDepth</span><span class="params">(CSTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(!T)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>+<span class="built_in">TreeDepth</span>(T-&gt;firstChild)&gt;<span class="built_in">TreeDepth</span>(T-&gt;nextSibling)?<span class="number">1</span>+<span class="built_in">TreeDepth</span>(T-&gt;firstChild):<span class="built_in">TreeDepth</span>(T-&gt;nextSibling);</span><br><span class="line">    <span class="comment">// 一种比较简洁的写法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC07PE63"><a href="#DC07PE63" class="headerlink" title="DC07PE63"></a>DC07PE63</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(MFSet S, <span class="type">int</span> i)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= S.n)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="type">int</span> parent = i, temp = i;</span><br><span class="line">    <span class="keyword">while</span> (S.parent[parent] &gt;= <span class="number">0</span>)       <span class="comment">//若还没到根结点</span></span><br><span class="line">        parent = S.parent[parent];</span><br><span class="line">    <span class="keyword">while</span> (S.parent[i] &gt;= <span class="number">0</span> &amp;&amp; i &gt;= <span class="number">0</span>)  <span class="comment">//对路径上经过的结点进行路径压缩</span></span><br><span class="line">    &#123;</span><br><span class="line">        temp = S.parent[i];</span><br><span class="line">        S.parent[i] = parent;</span><br><span class="line">        i = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第8章"><a href="#第8章" class="headerlink" title="第8章"></a>第8章</h2><h3 id="DC08PE12"><a href="#DC08PE12" class="headerlink" title="DC08PE12"></a>DC08PE12</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateDG</span><span class="params">(MGraph &amp;G, VexType *vexs, <span class="type">int</span> n,</span></span></span><br><span class="line"><span class="params"><span class="function">                           ArcInfo *arcs, <span class="type">int</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">InitGraph</span>(G,DG,n))</span><br><span class="line">    &#123;</span><br><span class="line">        G.n = n;</span><br><span class="line">        G.e = e;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            G.vexs[i] = vexs[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; MAX_VEX_NUM; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; MAX_VEX_NUM; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                G.arcs[i][j].adj = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; e; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            G.arcs[<span class="built_in">LocateVex</span>(G,arcs[i].v)][<span class="built_in">LocateVex</span>(G,arcs[i].w)].adj = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE15"><a href="#DC08PE15" class="headerlink" title="DC08PE15"></a>DC08PE15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">NextAdjVex</span><span class="params">(MGraph G, <span class="type">int</span> k, <span class="type">int</span> m)</span> </span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(G.n == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(k &lt; <span class="number">0</span> || k &gt; G.n || G.e &lt; <span class="number">2</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=m<span class="number">+1</span>; i&lt;G.n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(G.kind == UDG || G.kind == DG &amp;&amp; G.arcs[k][i].adj == <span class="number">1</span> &amp;&amp; i != k) </span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        <span class="comment">// if(G.arcs[k][i].adj != INFINITY &amp;&amp; i != k) </span></span><br><span class="line">        <span class="comment">//     return i;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE17"><a href="#DC08PE17" class="headerlink" title="DC08PE17"></a>DC08PE17</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">SetArc</span><span class="params">(MGraph &amp;G, VexType v, VexType w, ArcCell info)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> k = <span class="built_in">LocateVex</span>(G,v);</span><br><span class="line">    <span class="type">int</span> m = <span class="built_in">LocateVex</span>(G,w);</span><br><span class="line">    <span class="keyword">if</span> (k &lt; <span class="number">0</span> || k &gt;= G.n || m &lt; <span class="number">0</span> || m &gt;= G.n)</span><br><span class="line">        <span class="keyword">return</span> ERROR;   <span class="comment">// k顶点或m顶点不存在</span></span><br><span class="line">    <span class="keyword">if</span>(G.kind == UDG || G.kind == UDN)</span><br><span class="line">        G.arcs[k][m] = G.arcs[m][k] = info;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        G.arcs[k][m] = info;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE21"><a href="#DC08PE21" class="headerlink" title="DC08PE21"></a>DC08PE21</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">outDegree</span><span class="params">(ALGraph G, <span class="type">int</span> k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(k &lt; <span class="number">0</span> || k &gt;= G.n)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> out_degree = <span class="number">0</span>;</span><br><span class="line">    AdjVexNodeP p = G.vexs[k].firstArc;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        out_degree++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> out_degree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE32"><a href="#DC08PE32" class="headerlink" title="DC08PE32"></a>DC08PE32</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateDG</span><span class="params">(ALGraph &amp;G, VexType *vexs, <span class="type">int</span> n,</span></span></span><br><span class="line"><span class="params"><span class="function">                            ArcInfo *arcs, <span class="type">int</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    VexType v, w;</span><br><span class="line">    AdjVexNodeP p;</span><br><span class="line">    G.n = n;</span><br><span class="line">    G.e = e;</span><br><span class="line">    G.tags = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        G.vexs[i].data = vexs[i];</span><br><span class="line">        G.vexs[i].firstArc = <span class="literal">NULL</span>;</span><br><span class="line">        G.tags[i] = UNVISITED;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; G.e; ++k)</span><br><span class="line">    &#123;</span><br><span class="line">        v = arcs[k].v;</span><br><span class="line">        w = arcs[k].w;</span><br><span class="line">        i = <span class="built_in">LocateVex</span>(G, v);</span><br><span class="line">        j = <span class="built_in">LocateVex</span>(G, w);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || j &lt; <span class="number">0</span>) <span class="comment">// v或w顶点不存在</span></span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        <span class="comment">// 有向边创建,只需要创建一条</span></span><br><span class="line">        p = (AdjVexNodeP)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(AdjVexNode));</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        p-&gt;info = <span class="number">1</span>;</span><br><span class="line">        p-&gt;adjvex = j;</span><br><span class="line">        p-&gt;next = G.vexs[i].firstArc;</span><br><span class="line">        G.vexs[i].firstArc = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DC08PE34"><a href="#DC08PE34" class="headerlink" title="DC08PE34"></a>DC08PE34</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="function">Status <span class="title">CreateUDG</span><span class="params">(ALGraph &amp;G, VexType *vexs, <span class="type">int</span> n,</span></span></span><br><span class="line"><span class="params"><span class="function">                             ArcInfo *arcs, <span class="type">int</span> e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    VexType v, w;</span><br><span class="line">    AdjVexNodeP p;</span><br><span class="line">    G.n = n;</span><br><span class="line">    G.e = e;</span><br><span class="line">    G.tags = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        G.vexs[i].data = vexs[i];</span><br><span class="line">        G.vexs[i].firstArc = <span class="literal">NULL</span>;</span><br><span class="line">        G.tags[i] = UNVISITED;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; G.e; ++k)</span><br><span class="line">    &#123;</span><br><span class="line">        v = arcs[k].v;</span><br><span class="line">        w = arcs[k].w;</span><br><span class="line">        <span class="keyword">if</span> (v == w) <span class="comment">// 无向图无自环</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        i = <span class="built_in">LocateVex</span>(G, v);</span><br><span class="line">        j = <span class="built_in">LocateVex</span>(G, w);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || j &lt; <span class="number">0</span>) <span class="comment">// v或w顶点不存在</span></span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        <span class="comment">// 无向边创建,需要创建两条</span></span><br><span class="line">        p = (AdjVexNodeP)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(AdjVexNode));</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        p-&gt;info = <span class="number">1</span>;</span><br><span class="line">        p-&gt;adjvex = j;</span><br><span class="line">        p-&gt;next = G.vexs[i].firstArc;</span><br><span class="line">        G.vexs[i].firstArc = p;</span><br><span class="line"></span><br><span class="line">        p = (AdjVexNodeP)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(AdjVexNode));</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">        p-&gt;info = <span class="number">1</span>;</span><br><span class="line">        p-&gt;adjvex = i;</span><br><span class="line">        p-&gt;next = G.vexs[j].firstArc;</span><br><span class="line">        G.vexs[j].firstArc = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>代码基本都是我手敲的，若有纰漏，还请见谅。</p><p>也欢迎大家及时指正，更新题库。</p><p>原仓库地址<a href="https://github.com/WiseL00k/DS_Anyview">点我</a></p><p><a href="https://github.com/WiseL00k">By WiseL00k</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Anyview </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anyview程序设计参考代码</title>
      <link href="/posts/983e5740.html"/>
      <url>/posts/983e5740.html</url>
      
        <content type="html"><![CDATA[<h1 id="Anyview程序设计参考代码"><a href="#Anyview程序设计参考代码" class="headerlink" title="Anyview程序设计参考代码"></a>Anyview程序设计参考代码</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>可能会有些错误，仅供参考！！！</p><p><del>请不要做CV工程师</del>，系统有查重！</p><p>考虑到题库每年都可能更新，题目不一定完全一致。</p><p>也欢迎大家PR，纠正更新题库。</p><span id="more"></span><p><a href="https://github.com/WiseL00k/C_Anyview" class="github-corner" aria-label="View source on GitHub"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#64CEAA; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"/><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"/><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"/></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style></p><h2 id="第1章"><a href="#第1章" class="headerlink" title="第1章"></a>第1章</h2><h3 id="CP01EX025"><a href="#CP01EX025" class="headerlink" title="CP01EX025"></a>CP01EX025</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Guangdong University of Technology\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Guangzhou\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Jieyang\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP01EX055"><a href="#CP01EX055" class="headerlink" title="CP01EX055"></a>CP01EX055</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>  </span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> a,b,c,max;  </span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>,&amp;a,&amp;b,&amp;c); <span class="comment">/*请输入三个数*/</span> </span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   max = a;</span><br><span class="line">   <span class="keyword">if</span>(max &lt; b)</span><br><span class="line">   &#123;</span><br><span class="line">      max = b;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(max &lt; c) </span><br><span class="line">   &#123;</span><br><span class="line">      max = c;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;max(%d,%d,%d)=%d\n&quot;</span>,a,b,c,max);  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第3章"><a href="#第3章" class="headerlink" title="第3章"></a>第3章</h2><h3 id="CP03EX012"><a href="#CP03EX012" class="headerlink" title="CP03EX012"></a>CP03EX012</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I am a student.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX013"><a href="#CP03EX013" class="headerlink" title="CP03EX013"></a>CP03EX013</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;C Language Program\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX023"><a href="#CP03EX023" class="headerlink" title="CP03EX023"></a>CP03EX023</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;I &quot;</span>); <span class="comment">//第1个串，末尾加一个空格，但不换行</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;love &quot;</span>); <span class="comment">//第2个串，末尾加一个空格，但不换行</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;China\n&quot;</span>); <span class="comment">//第3个串显示后换行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX032"><a href="#CP03EX032" class="headerlink" title="CP03EX032"></a>CP03EX032</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Apple is red.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Banana is yellow.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX033"><a href="#CP03EX033" class="headerlink" title="CP03EX033"></a>CP03EX033</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;HUAWEI Mate60\nHUAWEI Mate60Pro\nHUAWEI Mate60Pro+\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX042"><a href="#CP03EX042" class="headerlink" title="CP03EX042"></a>CP03EX042</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Apple is red.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="comment">//只换行，实现“隔1行”</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Banana is yellow.\n&quot;</span>); <span class="comment">//最后一行显示后，通常也换行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX053"><a href="#CP03EX053" class="headerlink" title="CP03EX053"></a>CP03EX053</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="comment">//Printf Test</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;C Program\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX063"><a href="#CP03EX063" class="headerlink" title="CP03EX063"></a>CP03EX063</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">7</span>, b = <span class="number">5</span>;</span><br><span class="line">   <span class="type">int</span> c = a+b;</span><br><span class="line">   <span class="type">int</span> d = a-b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d\n&quot;</span>,a,b,c);  <span class="comment">/* 修改此语句，显示a+b的值 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d-%d=%d\n&quot;</span>,a,b,d);  <span class="comment">/* 修改此语句，显示a-b的值 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX073"><a href="#CP03EX073" class="headerlink" title="CP03EX073"></a>CP03EX073</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"> <span class="type">int</span> a = <span class="number">215</span>, b = <span class="number">19</span>, c = <span class="number">75</span>, d,e,f,g;</span><br><span class="line">   d = a/b;</span><br><span class="line">   e = a%b;</span><br><span class="line">   f = a/c;</span><br><span class="line">   g = a%c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d...%d\n&quot;</span>,a,b,d,e); </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d...%d\n&quot;</span>,a,c,f,g);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX076"><a href="#CP03EX076" class="headerlink" title="CP03EX076"></a>CP03EX076</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">17</span>, b = <span class="number">5</span>,c,d,e;</span><br><span class="line">   c = a * b;</span><br><span class="line">   d = a / b;</span><br><span class="line">   e = a % b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d\n&quot;</span>,a,b,c); <span class="comment">/* 修改此语句，显示a乘b的积c */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d\n&quot;</span>,a,b,d); <span class="comment">/* 修改此语句，显示a除以b的商d */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d\%%%d=%d\n&quot;</span>,a,b,e); <span class="comment">/* 修改此语句，显示a除以b的余数e */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX083"><a href="#CP03EX083" class="headerlink" title="CP03EX083"></a>CP03EX083</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d+%d*%d=%d\n&quot;</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">11</span>+<span class="number">2</span>*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX092"><a href="#CP03EX092" class="headerlink" title="CP03EX092"></a>CP03EX092</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">11</span>, b = <span class="number">2</span>, c;</span><br><span class="line">   c = a/b*(b-a%<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX093"><a href="#CP03EX093" class="headerlink" title="CP03EX093"></a>CP03EX093</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">511</span>, b = <span class="number">246</span>, c =<span class="number">257</span>, d = <span class="number">495</span>, e;</span><br><span class="line">e = (a+b)/((b-c)*(a-d));</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(%d+%d)/((%d-%d)*(%d-%d))=%d\n&quot;</span>,a,b,b,c,a,d,e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX103"><a href="#CP03EX103" class="headerlink" title="CP03EX103"></a>CP03EX103</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">27</span>, b = <span class="number">36</span>, c = <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> d = (a+b)/c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(%d+%d)/%d=%d\n&quot;</span>,a,b,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX106"><a href="#CP03EX106" class="headerlink" title="CP03EX106"></a>CP03EX106</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">-25</span>, b = <span class="number">5</span>;</span><br><span class="line">   <span class="type">int</span> c = a/b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX113"><a href="#CP03EX113" class="headerlink" title="CP03EX113"></a>CP03EX113</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a,b,c = <span class="number">58</span>;</span><br><span class="line">a = b = <span class="number">20</span>;</span><br><span class="line">   <span class="type">int</span> d = (c-a/<span class="number">5</span>)/(c<span class="number">-2</span>*b);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(%d-%d/5)/(%d-2*%d)=%d\n&quot;</span>, c, a, c, b, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX123"><a href="#CP03EX123" class="headerlink" title="CP03EX123"></a>CP03EX123</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">12</span>, b = <span class="number">34</span>, c = <span class="number">56</span>,d;</span><br><span class="line">d = a * b * c;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d*%d*%d=%d\n&quot;</span>,a,b,c,d);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX132"><a href="#CP03EX132" class="headerlink" title="CP03EX132"></a>CP03EX132</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">1.234</span>, b = <span class="number">23.456</span>,c,d; </span><br><span class="line">   c = a+b;</span><br><span class="line">   d = a-b;</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%f+%f=%f\n&quot;</span>, a, b, c);  <span class="comment">// 打印a+b值</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%f-%f=%f\n&quot;</span>, a, b, d);  <span class="comment">// 打印a-b值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX133"><a href="#CP03EX133" class="headerlink" title="CP03EX133"></a>CP03EX133</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> f = <span class="number">12.345</span>, g = <span class="number">67.89</span>, h;</span><br><span class="line">   h = f*g;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.3f*%.2f=%f\n&quot;</span>,f,g,h);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX135"><a href="#CP03EX135" class="headerlink" title="CP03EX135"></a>CP03EX135</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">111.234</span>, b = <span class="number">23.456</span>,c,d;</span><br><span class="line">   c = a*b;</span><br><span class="line">   d = a/b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.3f*%.3f=%f\n&quot;</span>,a,b,c);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.3f/%.3f=%f\n&quot;</span>,a,b,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX142"><a href="#CP03EX142" class="headerlink" title="CP03EX142"></a>CP03EX142</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">3.45</span>, b = <span class="number">4.56</span>, c = <span class="number">5.67</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%.2f+%.2f+%.2f=%.2f\n&quot;</span>,a,b,c,a+b+c);  <span class="comment">/*修改此语句，显示a+b+c的值*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX143"><a href="#CP03EX143" class="headerlink" title="CP03EX143"></a>CP03EX143</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">float</span> f = <span class="number">2.345</span>,g = <span class="number">6.789</span>,h;</span><br><span class="line">h = f*f+g*g;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>,h);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX145"><a href="#CP03EX145" class="headerlink" title="CP03EX145"></a>CP03EX145</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    <span class="comment">//Add your code here</span></span><br><span class="line">    <span class="type">float</span> f = <span class="number">-2.345</span>, g = <span class="number">6.789</span>;</span><br><span class="line">    <span class="type">float</span> h = f*f*f + g*g*g;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,h);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX153"><a href="#CP03EX153" class="headerlink" title="CP03EX153"></a>CP03EX153</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line">   <span class="type">int</span> a;</span><br><span class="line">   <span class="type">float</span> b,c;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   a = <span class="number">12</span>;</span><br><span class="line">   b = <span class="number">345.678</span>;</span><br><span class="line">   c = (<span class="type">float</span>)a*b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%f\n&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX162"><a href="#CP03EX162" class="headerlink" title="CP03EX162"></a>CP03EX162</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">float</span> a = <span class="number">1.63</span>, b = <span class="number">4.46</span>;</span><br><span class="line">   <span class="type">int</span> c = a + b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX163"><a href="#CP03EX163" class="headerlink" title="CP03EX163"></a>CP03EX163</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line">   <span class="type">int</span> a1,a2;</span><br><span class="line">   <span class="type">float</span> b,c;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   b = <span class="number">34.567</span>,c = <span class="number">56.789</span>;</span><br><span class="line">   a1 = b*c;</span><br><span class="line">   a2 = (<span class="type">int</span>)b*(<span class="type">int</span>)c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a1=%d\n&quot;</span>,a1);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a2=%d\n&quot;</span>,a2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX166"><a href="#CP03EX166" class="headerlink" title="CP03EX166"></a>CP03EX166</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line">   <span class="type">int</span> a;</span><br><span class="line">   <span class="type">float</span> b,c;</span><br><span class="line">   <span class="comment">// Add your code here </span></span><br><span class="line">   b = <span class="number">2.34567</span>, c = <span class="number">56.789</span>;</span><br><span class="line">   a = (<span class="type">int</span>)b+(<span class="type">int</span>)c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX168"><a href="#CP03EX168" class="headerlink" title="CP03EX168"></a>CP03EX168</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span>  y;</span><br><span class="line">   y = <span class="number">1</span>/<span class="number">3</span>;   <span class="comment">/*修改此语句，变量y保存表达式1/3的值*/</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;y=%f\n&quot;</span>, y); <span class="comment">/*修改此语句，输出y*/</span></span><br><span class="line">   y = <span class="number">1.0</span>/<span class="number">3.0</span>;   <span class="comment">/*修改此语句，变量y保存表达式1.0/3.0的值*/</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;y=%f\n&quot;</span>, y); <span class="comment">/*修改此语句，输出y*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX173"><a href="#CP03EX173" class="headerlink" title="CP03EX173"></a>CP03EX173</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> a,b;</span><br><span class="line">    a = <span class="number">34</span>, b = <span class="number">56</span>;</span><br><span class="line">    a += b;</span><br><span class="line">    b *= a;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;a=%d b=%d\n&quot;</span>,a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX175"><a href="#CP03EX175" class="headerlink" title="CP03EX175"></a>CP03EX175</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> a = <span class="number">567</span>, b = <span class="number">18</span>, c = <span class="number">5</span>;</span><br><span class="line">     a /= b;</span><br><span class="line">     b %= c;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d b=%d c=%d\n&quot;</span>,a,b,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX183"><a href="#CP03EX183" class="headerlink" title="CP03EX183"></a>CP03EX183</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">600</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,++a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX184"><a href="#CP03EX184" class="headerlink" title="CP03EX184"></a>CP03EX184</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,++a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX185"><a href="#CP03EX185" class="headerlink" title="CP03EX185"></a>CP03EX185</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>, b = ++a+<span class="number">10</span>,c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line">    c = <span class="number">10</span>-a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX186"><a href="#CP03EX186" class="headerlink" title="CP03EX186"></a>CP03EX186</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">10</span>,b = <span class="number">0</span>,c = <span class="number">0</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d &quot;</span>,a);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   b = ++a+<span class="number">5</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   c = <span class="number">7</span>+a++;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX193"><a href="#CP03EX193" class="headerlink" title="CP03EX193"></a>CP03EX193</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">600</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a--);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,--a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX194"><a href="#CP03EX194" class="headerlink" title="CP03EX194"></a>CP03EX194</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a--);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,--a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX196"><a href="#CP03EX196" class="headerlink" title="CP03EX196"></a>CP03EX196</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>, b, c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d &quot;</span>,a);</span><br><span class="line">    b = --a+<span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line">    c = <span class="number">7</span>+a--;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX197"><a href="#CP03EX197" class="headerlink" title="CP03EX197"></a>CP03EX197</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a,b,c;</span><br><span class="line">   a = <span class="number">100</span>;</span><br><span class="line">   b = --a<span class="number">-10</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;b=%d &quot;</span>,b);</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">   <span class="comment">// Add your code here</span></span><br><span class="line">   c = <span class="number">10</span>+a--;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d &quot;</span>,c);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX203"><a href="#CP03EX203" class="headerlink" title="CP03EX203"></a>CP03EX203</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">-20</span>,c;</span><br><span class="line">   c = a&gt;b?b*b:<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d\n&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX213"><a href="#CP03EX213" class="headerlink" title="CP03EX213"></a>CP03EX213</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">int</span> a = <span class="number">9</span>, b = <span class="number">11</span>,c,d;</span><br><span class="line">     c = a &gt;&gt; <span class="number">2</span>;</span><br><span class="line">     d = b &lt;&lt; <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c=%d d=%d\n&quot;</span>,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX223"><a href="#CP03EX223" class="headerlink" title="CP03EX223"></a>CP03EX223</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">0x123a</span>, b = <span class="number">0x1100</span>, c;</span><br><span class="line">   c = a&amp;b;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%x &amp; %x = %x\n&quot;</span>,a,b,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX243"><a href="#CP03EX243" class="headerlink" title="CP03EX243"></a>CP03EX243</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> a = <span class="number">0x12ac</span>,b;</span><br><span class="line">   b = ~a;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%x\n&quot;</span>,a);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;b=%x\n&quot;</span>,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX253"><a href="#CP03EX253" class="headerlink" title="CP03EX253"></a>CP03EX253</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    <span class="type">int</span> d, e, f;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    d = a&amp;&amp; b;</span><br><span class="line">    e = a || c;</span><br><span class="line">    f = a &amp;&amp; c;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;\n你的结果：\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &amp;&amp; %d = %d\n&quot;</span>, a, b, d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d || %d = %d\n&quot;</span>, a, c, e);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &amp;&amp; %d = %d\n&quot;</span>, a, c, f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX263"><a href="#CP03EX263" class="headerlink" title="CP03EX263"></a>CP03EX263</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="type">int</span> c, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    c = !a;</span><br><span class="line">    d = !b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;\n你的结果：\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;!%d=%d\n&quot;</span>, a, c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;!%d=%d\n&quot;</span>, b, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX293"><a href="#CP03EX293" class="headerlink" title="CP03EX293"></a>CP03EX293</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="type">char</span> a, b, c;</span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    a = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    b = <span class="string">&#x27;K&#x27;</span>;</span><br><span class="line">    c = <span class="string">&#x27;!&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c:%d %c:%d %c:%d\n&quot;</span>,a,a,b,b,c,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX303"><a href="#CP03EX303" class="headerlink" title="CP03EX303"></a>CP03EX303</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//add your code here</span></span><br><span class="line">   <span class="type">int</span> a, b, c;</span><br><span class="line">   a = <span class="number">79</span>, b = <span class="number">75</span>, c = <span class="number">33</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d:%c %d:%c %d:%c\n&quot;</span>, a, a, b, b, c, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX305"><a href="#CP03EX305" class="headerlink" title="CP03EX305"></a>CP03EX305</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//add your code here </span></span><br><span class="line">   <span class="type">int</span> a, b, c, d, e;</span><br><span class="line">   a = <span class="number">83</span>, b = <span class="number">116</span>, c = <span class="number">117</span>, d = <span class="number">100</span>, e = <span class="number">121</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c%c\n&quot;</span>,a,b,c,d,e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX542"><a href="#CP03EX542" class="headerlink" title="CP03EX542"></a>CP03EX542</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123; <span class="comment">//add your code here</span></span><br><span class="line">  b = a-a%<span class="number">10</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;b=%d,a=%d\n&quot;</span>, b, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX546"><a href="#CP03EX546" class="headerlink" title="CP03EX546"></a>CP03EX546</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123;   <span class="comment">//add your code here</span></span><br><span class="line">   b = a - a%<span class="number">100</span> + a%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX554"><a href="#CP03EX554" class="headerlink" title="CP03EX554"></a>CP03EX554</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123; <span class="comment">//add your code here</span></span><br><span class="line">   b = a%<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX556"><a href="#CP03EX556" class="headerlink" title="CP03EX556"></a>CP03EX556</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;  <span class="comment">//add your code here</span></span><br><span class="line">    b = (a/<span class="number">100</span>)*<span class="number">100</span> + <span class="number">10</span>*(a%<span class="number">10</span>)+(a/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX557"><a href="#CP03EX557" class="headerlink" title="CP03EX557"></a>CP03EX557</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;  <span class="comment">// add your code here</span></span><br><span class="line">   <span class="type">int</span> digt_1,digt_2,digt_3;</span><br><span class="line">   digt_1 = a/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">   digt_2 = a/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">   digt_3 = a%<span class="number">10</span>;</span><br><span class="line">   b = digt_2+digt_1*<span class="number">10</span>+digt_3*<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX558"><a href="#CP03EX558" class="headerlink" title="CP03EX558"></a>CP03EX558</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;   <span class="comment">//add your code here</span></span><br><span class="line">   <span class="type">int</span> digt_1,digt_2,digt_3;</span><br><span class="line">   digt_1 = a/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">   digt_2 = a/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">   digt_3 = a%<span class="number">10</span>;</span><br><span class="line">   a = digt_2*<span class="number">100</span>+digt_3*<span class="number">10</span>+digt_1;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;移位后：a = %d\n&quot;</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX560"><a href="#CP03EX560" class="headerlink" title="CP03EX560"></a>CP03EX560</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;  <span class="comment">//add your code here</span></span><br><span class="line">   <span class="type">int</span> digt_a1,digt_b1;</span><br><span class="line">   digt_a1 = a%<span class="number">10</span>;</span><br><span class="line">   digt_b1 = b%<span class="number">10</span>;</span><br><span class="line">   c = digt_a1*<span class="number">10</span>+digt_b1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX561"><a href="#CP03EX561" class="headerlink" title="CP03EX561"></a>CP03EX561</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;   <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a1,digt_b1;</span><br><span class="line">   digt_a1 = a%<span class="number">10</span>;</span><br><span class="line">   digt_b1 = b%<span class="number">10</span>;</span><br><span class="line">   c = digt_b1*<span class="number">10</span>+digt_a1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX562"><a href="#CP03EX562" class="headerlink" title="CP03EX562"></a>CP03EX562</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;   <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">100</span>;</span><br><span class="line">    digt_b = b%<span class="number">100</span>;</span><br><span class="line">    c = digt_a*<span class="number">100</span>+digt_b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX563"><a href="#CP03EX563" class="headerlink" title="CP03EX563"></a>CP03EX563</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;   <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">10</span>*<span class="number">10</span>+a/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">    digt_b = b%<span class="number">10</span>*<span class="number">10</span>+b/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">    c = digt_a*<span class="number">100</span>+digt_b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX566"><a href="#CP03EX566" class="headerlink" title="CP03EX566"></a>CP03EX566</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span><br><span class="line">&#123;  <span class="comment">// add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">1000</span>;</span><br><span class="line">    digt_b = b%<span class="number">1000</span>;</span><br><span class="line">    c = digt_a*<span class="number">1000</span>+digt_b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP03EX567"><a href="#CP03EX567" class="headerlink" title="CP03EX567"></a>CP03EX567</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">long</span> <span class="type">int</span> c)</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="comment">//add your code here</span></span><br><span class="line">    <span class="type">int</span> digt_a,digt_b;</span><br><span class="line">    digt_a = a%<span class="number">10</span>*<span class="number">100</span>+a/<span class="number">10</span>%<span class="number">10</span>*<span class="number">10</span>+a/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">    digt_b = b%<span class="number">10</span>*<span class="number">100</span>+b/<span class="number">10</span>%<span class="number">10</span>*<span class="number">10</span>+b/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">    c = digt_a*<span class="number">1000</span>+digt_b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,c=%d\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第8章"><a href="#第8章" class="headerlink" title="第8章"></a>第8章</h2><h3 id="CP08EX011"><a href="#CP08EX011" class="headerlink" title="CP08EX011"></a>CP08EX011</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> t[], <span class="type">int</span> n)</span> </span><br><span class="line"><span class="comment">/* 数组s的前n个元素存放给定的字符序列，</span></span><br><span class="line"><span class="comment">   数组t的前n个元素存放s的逆序列。</span></span><br><span class="line"><span class="comment">   注意：数组的下标从0开始。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123; <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      t[i] = s[n-i<span class="number">-1</span>];</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX012"><a href="#CP08EX012" class="headerlink" title="CP08EX012"></a>CP08EX012</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> *t)</span> </span><br><span class="line"><span class="comment">/* s是给定字符串的起始地址，</span></span><br><span class="line"><span class="comment">   t是求得s的逆串的起始地址</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="type">int</span> length = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(length = <span class="number">0</span>; s[length] != <span class="string">&#x27;\0&#x27;</span>; length++);</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      t[length<span class="number">-1</span>-i] = s[i];</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX015"><a href="#CP08EX015" class="headerlink" title="CP08EX015"></a>CP08EX015</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s1, <span class="type">char</span> *s2, <span class="type">int</span> n)</span></span><br><span class="line"><span class="comment">/* s1为字符串的起始地址，s2为新字符串的起始地址，n为字符串的长度。</span></span><br><span class="line"><span class="comment">   要求：s1串不能发生改变；请用s2串存放新的字符串。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      s2[i] = s1[i];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(n &gt; <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      sort(s2+<span class="number">1</span>,s2+n<span class="number">-1</span>,greater&lt;<span class="type">char</span>&gt;());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX016"><a href="#CP08EX016" class="headerlink" title="CP08EX016"></a>CP08EX016</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s1, <span class="type">char</span> *s2)</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; s1[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s2[i] = s1[i];</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sort(s2+<span class="number">1</span>,s2+n<span class="number">-1</span>,greater&lt;<span class="type">char</span>&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX018"><a href="#CP08EX018" class="headerlink" title="CP08EX018"></a>CP08EX018</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sub_str</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> m, <span class="type">char</span> *t)</span></span><br><span class="line">&#123;  </span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    *t = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">        n++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = m,j = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++,j++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[j] = s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    t[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(m &lt; n)</span><br><span class="line">        sort(t,t+j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX020"><a href="#CP08EX020" class="headerlink" title="CP08EX020"></a>CP08EX020</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">match</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> c)</span> <span class="comment">// 返回字符c在串s中首次出现的位置指针</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">   <span class="keyword">while</span>(*s != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">if</span>(*s == c)</span><br><span class="line">         <span class="keyword">return</span> s;</span><br><span class="line">      s++;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX033"><a href="#CP08EX033" class="headerlink" title="CP08EX033"></a>CP08EX033</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">month_day</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> yearday, <span class="type">int</span> *pmonth, <span class="type">int</span> *pday)</span> </span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="keyword">if</span>(year &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    *pmonth = <span class="number">1</span>;</span><br><span class="line">    *pday = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> monthDays[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>((year % <span class="number">4</span> == <span class="number">0</span> and year % <span class="number">100</span> != <span class="number">0</span>) or (year % <span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yearday &lt;= <span class="number">0</span> || yearday &gt; <span class="number">366</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        monthDays[<span class="number">2</span>] = <span class="number">29</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(yearday &lt;= <span class="number">0</span> || yearday &gt; <span class="number">365</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(yearday &lt;= monthDays[i])</span><br><span class="line">        &#123;</span><br><span class="line">            *pday = yearday;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        yearday -= monthDays[i];</span><br><span class="line">        (*pmonth)++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX044"><a href="#CP08EX044" class="headerlink" title="CP08EX044"></a>CP08EX044</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">long</span> <span class="title function_">func</span><span class="params">(<span class="type">char</span> *s)</span> </span><br><span class="line">&#123; <span class="comment">// s是一个数字字符串；函数返回值为由s含有的数字字符转换得到的数</span></span><br><span class="line">  <span class="comment">// Add your code here</span></span><br><span class="line">  <span class="type">long</span> num = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> firstFlag = <span class="literal">false</span>, firstNumFlag = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(s[i] == <span class="string">&#x27;-&#x27;</span> &amp;&amp; !firstNumFlag)</span><br><span class="line">      firstFlag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      firstNumFlag = <span class="literal">true</span>;</span><br><span class="line">      num *= <span class="number">10</span>;</span><br><span class="line">      num += s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(firstFlag)</span><br><span class="line">    num *= <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX105"><a href="#CP08EX105" class="headerlink" title="CP08EX105"></a>CP08EX105</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">findmax</span><span class="params">(<span class="type">int</span> s[], <span class="type">int</span> n)</span> </span><br><span class="line"><span class="comment">/* 返回s中的n个整数的最大值。注意：要求在函数中采用指针（而不是下标）来处理数组元素。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max &lt; *(s+i))</span><br><span class="line">            max = *(s+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CP08EX124"><a href="#CP08EX124" class="headerlink" title="CP08EX124"></a>CP08EX124</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;allinclude.h&quot;</span>  <span class="comment">//DO NOT edit this line</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">min3adj</span><span class="params">(<span class="type">int</span> s[], <span class="type">int</span> n)</span> <span class="comment">// 返回数组s中相邻三个数的和中的最小值。</span></span><br><span class="line">&#123;  <span class="comment">// Add your code here</span></span><br><span class="line">    <span class="type">int</span> sum = s[<span class="number">0</span>]+s[<span class="number">1</span>]+s[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum &gt; s[i<span class="number">-1</span>] + s[i] + s[i+<span class="number">1</span>])</span><br><span class="line">            sum = s[i<span class="number">-1</span>] + s[i] + s[i+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h2><p><a href="https://github.com/WiseL00k">By WiseL00k</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Anyview </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终端乱码问题解决</title>
      <link href="/posts/cb803778.html"/>
      <url>/posts/cb803778.html</url>
      
        <content type="html"><![CDATA[<h1 id="终端乱码问题解决"><a href="#终端乱码问题解决" class="headerlink" title="终端乱码问题解决"></a>终端乱码问题解决</h1><p>最近发现有时候在windows终端 <del>(就是那个黑框框)</del> 运行自己写的C\C++程序时，有时候显示的中文是乱码</p><span id="more"></span><p>后面发现如果我将源文件编码改为GBK，再编译后，运行便不会出现乱码。查阅资料后，知道了一条命令可以查看当前终端使用的编码格式。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp</span><br></pre></td></tr></table></figure><p>可以看到当前编码为936，对应的编码格式为GBK</p><p><img src="https://pic.imgdb.cn/item/674fef5cd0e0a243d4dd0de4.png" alt=""></p><p>因此，使用GBK编码的文件，编译后的程序在终端运行自然不会出现乱码问题，但是如果是使用UTF-8的，就会乱码了。</p><p>我通过查找资料后，发现解决这个问题的方法有很多</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="临时解决"><a href="#临时解决" class="headerlink" title="临时解决"></a>临时解决</h3><p>直接每次在运行程序前，在终端输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp <span class="number">65001</span></span><br></pre></td></tr></table></figure><p>将编码改为UTF-8便不会出错了</p><p><img src="https://pic.imgdb.cn/item/674feef1d0e0a243d4dd0dcd.png" alt=""></p><p>可以看到当前编码为65001，对应的编码格式为UTF-8</p><p>或者，可以使用GBK编码源文件，<del>但是都2024年了，还没人用统一码(UTF-8)吗？</del></p><h3 id="永久解决"><a href="#永久解决" class="headerlink" title="永久解决"></a>永久解决</h3><p>对于我这种有强迫症的人来说，一下用这个编码，一下用那个编码，实在太难接受了。必须想办法统一，因此还是有可以永久解决的办法的。</p><p>首先右键单击桌面右下角，打开调整日期和时间</p><p><img src="https://pic.imgdb.cn/item/674fed96d0e0a243d4dd0d66.png" alt=""></p><p>然后依次点击</p><p><img src="https://pic.imgdb.cn/item/674ff0f4d0e0a243d4dd0e70.png" alt=""></p><hr><p><img src="https://pic.imgdb.cn/item/674ff115d0e0a243d4dd0e84.png" alt=""></p><hr><p><img src="https://pic.imgdb.cn/item/674ff14bd0e0a243d4dd0ea6.png" alt=""></p><hr><p><img src="https://pic.imgdb.cn/item/674ff165d0e0a243d4dd0eb1.png" alt=""></p><p>打上勾后，重启，之后终端的默认编码格式就都变成UTF-8了。</p><p><em>PS:不过之后打开一些比较老的软件，可能会出现乱码问题。</em></p><p><em>我猜想是因为这些老的软件采用的是GBK编码，所以同样是出现了编码不兼容的问题。</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }  /* 欢迎信息 */  #welcome-info {    background: linear-gradient(45deg, #b9f4f3, #e3fbf9);    border-radius: 18px;    padding: 8px;  }  [data-theme="dark"] #welcome-info {    background: #212121;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.min.css"/>
      <url>/css/runtime.min.css</url>
      
        <content type="html"><![CDATA[div#runtime{width:180px;margin:auto;color:#fff;padding-inline:5px;border-radius:10px;background-color:rgba(0,0,0,.7)}#workboard{font-size:12px}[data-theme=dark] div#runtime{color:#28b4c8;box-shadow:0 0 5px rgba(28,69,218,.71);animation:flashlight 1s linear infinite alternate}#ghbdages .github-badge img{height:20px}@-moz-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-webkit-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-o-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hi-there-👋"><a href="#Hi-there-👋" class="headerlink" title="Hi there 👋"></a>Hi there 👋</h2><p><img src="https://pic.imgdb.cn/item/67530816d0e0a243d4deff0f.png" alt="JinxAndAiko"></p><p>欢迎来到我的个人博客!</p><p>You are my <img src="https://profile-counter.glitch.me/WiseL00k/count.svg" alt="Visitor Count"> visitor,thanks!</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/txmap.js"/>
      <url>/js/txmap.js</url>
      
        <content type="html"><![CDATA[//get请求$.ajax({    type: 'get',    url: 'https://apis.map.qq.com/ws/location/v1/ip',    data: {        key: 'F6TBZ-YWBWJ-GHKFS-DPL4W-FT64E-SMBG7',        output: 'jsonp',    },    dataType: 'jsonp',    success: function (res) {        ipLocation = res;    }})function getDistance(e1, n1, e2, n2) {    const R = 6371    const { sin, cos, asin, PI, hypot } = Math    let getPoint = (e, n) => {        e *= PI / 180        n *= PI / 180        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }    }    let a = getPoint(e1, n1)    let b = getPoint(e2, n2)    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)    let r = asin(c / 2) * 2 * R    return Math.round(r);}function showWelcome() {    let dist = getDistance(113.393116, 23.039404, ipLocation.result.location.lng, ipLocation.result.location.lat); //这里记得换成自己的经纬度    let pos = ipLocation.result.ad_info.nation;    let ip;    let posdesc;    //根据国家、省份、城市信息自定义欢迎语    switch (ipLocation.result.ad_info.nation) {        case "日本":            posdesc = "よろしく，一起去看樱花吗";            break;        case "美国":            posdesc = "Let us live in peace!";            break;        case "英国":            posdesc = "想同你一起夜乘伦敦眼";            break;        case "俄罗斯":            posdesc = "干了这瓶伏特加！";            break;        case "法国":            posdesc = "C'est La Vie";            break;        case "德国":            posdesc = "Die Zeit verging im Fluge.";            break;        case "澳大利亚":            posdesc = "一起去大堡礁吧！";            break;        case "加拿大":            posdesc = "拾起一片枫叶赠予你";            break;        case "中国":            pos = ipLocation.result.ad_info.province + " " + ipLocation.result.ad_info.city + " " + ipLocation.result.ad_info.district;            ip = ipLocation.result.ip;            switch (ipLocation.result.ad_info.province) {                case "北京市":                    posdesc = "北——京——欢迎你~~~";                    break;                case "天津市":                    posdesc = "讲段相声吧";                    break;                case "河北省":                    posdesc = "山势巍巍成壁垒，天下雄关铁马金戈由此向，无限江山";                    break;                case "山西省":                    posdesc = "展开坐具长三尺，已占山河五百余";                    break;                case "内蒙古自治区":                    posdesc = "天苍苍，野茫茫，风吹草低见牛羊";                    break;                case "辽宁省":                    posdesc = "我想吃烤鸡架！";                    break;                case "吉林省":                    posdesc = "状元阁就是东北烧烤之王";                    break;                case "黑龙江省":                    posdesc = "很喜欢哈尔滨大剧院";                    break;                case "上海市":                    posdesc = "众所周知，中国只有两个城市";                    break;                case "江苏省":                    switch (ipLocation.result.ad_info.city) {                        case "南京市":                            posdesc = "这是我挺想去的城市啦";                            break;                        case "苏州市":                            posdesc = "上有天堂，下有苏杭";                            break;                        default:                            posdesc = "散装是必须要散装的";                            break;                    }                    break;                case "浙江省":                    posdesc = "东风渐绿西湖柳，雁已还人未南归";                    break;                case "河南省":                    switch (ipLocation.result.ad_info.city) {                        case "郑州市":                            posdesc = "豫州之域，天地之中";                            break;                        case "南阳市":                            posdesc = "臣本布衣，躬耕于南阳此南阳非彼南阳！";                            break;                        case "驻马店市":                            posdesc = "峰峰有奇石，石石挟仙气嵖岈山的花很美哦！";                            break;                        case "开封市":                            posdesc = "刚正不阿包青天";                            break;                        case "洛阳市":                            posdesc = "洛阳牡丹甲天下";                            break;                        default:                            posdesc = "可否带我品尝河南烩面啦？";                            break;                    }                    break;                case "安徽省":                    posdesc = "蚌埠住了，芜湖起飞";                    break;                case "福建省":                    posdesc = "井邑白云间，岩城远带山";                    break;                case "江西省":                    posdesc = "落霞与孤鹜齐飞，秋水共长天一色";                    break;                case "山东省":                    posdesc = "遥望齐州九点烟，一泓海水杯中泻";                    break;                case "湖北省":                    switch (ipLocation.result.ad_info.city) {                        case "黄冈市":                            posdesc = "红安将军县！辈出将才！";                            break;                        default:                            posdesc = "来碗热干面~";                            break;                    }                    break;                case "湖南省":                    posdesc = "74751，长沙斯塔克";                    break;                case "广东省":                    switch (ipLocation.result.ad_info.city) {                        case "广州市":                            posdesc = "看小蛮腰，喝早茶了嘛~";                            break;                        case "深圳市":                            posdesc = "今天你逛商场了嘛~";                            break;                        case "阳江市":                            posdesc = "阳春合水！博主家乡~ 欢迎来玩~";                            break;                        default:                            posdesc = "来两斤福建人~";                            break;                    }                    break;                case "广西壮族自治区":                    posdesc = "桂林山水甲天下";                    break;                case "海南省":                    posdesc = "朝观日出逐白浪，夕看云起收霞光";                    break;                case "四川省":                    posdesc = "康康川妹子";                    break;                case "贵州省":                    posdesc = "茅台，学生，再塞200";                    break;                case "云南省":                    posdesc = "玉龙飞舞云缠绕，万仞冰川直耸天";                    break;                case "西藏自治区":                    posdesc = "躺在茫茫草原上，仰望蓝天";                    break;                case "陕西省":                    posdesc = "来份臊子面加馍";                    break;                case "甘肃省":                    posdesc = "羌笛何须怨杨柳，春风不度玉门关";                    break;                case "青海省":                    posdesc = "牛肉干和老酸奶都好好吃";                    break;                case "宁夏回族自治区":                    posdesc = "大漠孤烟直，长河落日圆";                    break;                case "新疆维吾尔自治区":                    posdesc = "驼铃古道丝绸路，胡马犹闻唐汉风";                    break;                case "台湾省":                    posdesc = "我在这头，大陆在那头";                    break;                case "香港特别行政区":                    posdesc = "永定贼有残留地鬼嚎，迎击光非岁玉";                    break;                case "澳门特别行政区":                    posdesc = "性感荷官，在线发牌";                    break;                default:                    posdesc = "带我去你的城市逛逛吧！";                    break;            }            break;        default:            posdesc = "带我去你的国家逛逛吧";            break;    }    //根据本地时间切换欢迎语    let timeChange;    let date = new Date();    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = "<span>🌤️ 早上好，一日之计在于晨</span>";    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = "<span>☀️ 中午好，记得午休喔~</span>";    else if (date.getHours() >= 13 && date.getHours() < 17) timeChange = "<span>🕞 下午好，饮茶先啦！</span>";    else if (date.getHours() >= 17 && date.getHours() < 19) timeChange = "<span>🚶‍♂️ 即将下班，记得按时吃饭~</span>";    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = "<span>🌙 晚上好，夜生活嗨起来！</span>";    else timeChange = "夜深了，早点休息，少熬夜";    try {        //自定义文本和需要放的位置        document.getElementById("welcome-info").innerHTML =            `欢迎来自 <b><span style="color: var(--kouseki-ip-color);font-size: var(--kouseki-gl-size)">${pos}</span></b> 的小友💖<br>${posdesc}🍂<br>当前位置距博主约 <b><span style="color: var(--kouseki-ip-color)">${dist}</span></b> 公里！<br>您的IP地址为：<b><span>${ip}</span></b><br>${timeChange} <br>`;    } catch (err) {         console.log("Pjax无法获取元素")    }}window.onload = showWelcome;// 如果使用了pjax在加上下面这行代码document.addEventListener('pjax:complete', showWelcome);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/pace/loading-bar.css"/>
      <url>/css/pace/loading-bar.css</url>
      
        <content type="html"><![CDATA[.pace {-webkit-pointer-events: none;pointer-events: none;-webkit-user-select: none;-moz-user-select: none;user-select: none;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;-ms-box-sizing: border-box;-o-box-sizing: border-box;box-sizing: border-box;-webkit-border-radius: 10px;-moz-border-radius: 10px;border-radius: 10px;-webkit-background-clip: padding-box;-moz-background-clip: padding;background-clip: padding-box;z-index: 2000;position: fixed;margin: auto;top: 12px;left: 0;right: 0;bottom: 0;width: 200px;height: 50px;overflow: hidden;}.pace .pace-progress {-webkit-box-sizing: border-box;-moz-box-sizing: border-box;-ms-box-sizing: border-box;-o-box-sizing: border-box;box-sizing: border-box;-webkit-border-radius: 2px;-moz-border-radius: 2px;border-radius: 2px;-webkit-background-clip: padding-box;-moz-background-clip: padding;background-clip: padding-box;-webkit-transform: translate3d(0, 0, 0);transform: translate3d(0, 0, 0);display: block;position: absolute;right: 100%;margin-right: -7px;width: 93%;top: 7px;height: 14px;font-size: 12px;background: #29d;color: #29d;line-height: 60px;font-weight: bold;font-family: Helvetica, Arial, "Lucida Grande", sans-serif;-webkit-box-shadow: 120px 0 #fff, 240px 0 #fff;-ms-box-shadow: 120px 0 #fff, 240px 0 #fff;box-shadow: 120px 0 #fff, 240px 0 #fff;}.pace .pace-progress:after {content: attr(data-progress-text);display: inline-block;position: fixed;width: 45px;text-align: right;right: 0;padding-right: 16px;top: 4px;}.pace .pace-progress[data-progress-text="0%"]:after { right: -200px }.pace .pace-progress[data-progress-text="1%"]:after { right: -198.14px }.pace .pace-progress[data-progress-text="2%"]:after { right: -196.28px }.pace .pace-progress[data-progress-text="3%"]:after { right: -194.42px }.pace .pace-progress[data-progress-text="4%"]:after { right: -192.56px }.pace .pace-progress[data-progress-text="5%"]:after { right: -190.7px }.pace .pace-progress[data-progress-text="6%"]:after { right: -188.84px }.pace .pace-progress[data-progress-text="7%"]:after { right: -186.98px }.pace .pace-progress[data-progress-text="8%"]:after { right: -185.12px }.pace .pace-progress[data-progress-text="9%"]:after { right: -183.26px }.pace .pace-progress[data-progress-text="10%"]:after { right: -181.4px }.pace .pace-progress[data-progress-text="11%"]:after { right: -179.54px }.pace .pace-progress[data-progress-text="12%"]:after { right: -177.68px }.pace .pace-progress[data-progress-text="13%"]:after { right: -175.82px }.pace .pace-progress[data-progress-text="14%"]:after { right: -173.96px }.pace .pace-progress[data-progress-text="15%"]:after { right: -172.1px }.pace .pace-progress[data-progress-text="16%"]:after { right: -170.24px }.pace .pace-progress[data-progress-text="17%"]:after { right: -168.38px }.pace .pace-progress[data-progress-text="18%"]:after { right: -166.52px }.pace .pace-progress[data-progress-text="19%"]:after { right: -164.66px }.pace .pace-progress[data-progress-text="20%"]:after { right: -162.8px }.pace .pace-progress[data-progress-text="21%"]:after { right: -160.94px }.pace .pace-progress[data-progress-text="22%"]:after { right: -159.08px }.pace .pace-progress[data-progress-text="23%"]:after { right: -157.22px }.pace .pace-progress[data-progress-text="24%"]:after { right: -155.36px }.pace .pace-progress[data-progress-text="25%"]:after { right: -153.5px }.pace .pace-progress[data-progress-text="26%"]:after { right: -151.64px }.pace .pace-progress[data-progress-text="27%"]:after { right: -149.78px }.pace .pace-progress[data-progress-text="28%"]:after { right: -147.92px }.pace .pace-progress[data-progress-text="29%"]:after { right: -146.06px }.pace .pace-progress[data-progress-text="30%"]:after { right: -144.2px }.pace .pace-progress[data-progress-text="31%"]:after { right: -142.34px }.pace .pace-progress[data-progress-text="32%"]:after { right: -140.48px }.pace .pace-progress[data-progress-text="33%"]:after { right: -138.62px }.pace .pace-progress[data-progress-text="34%"]:after { right: -136.76px }.pace .pace-progress[data-progress-text="35%"]:after { right: -134.9px }.pace .pace-progress[data-progress-text="36%"]:after { right: -133.04px }.pace .pace-progress[data-progress-text="37%"]:after { right: -131.18px }.pace .pace-progress[data-progress-text="38%"]:after { right: -129.32px }.pace .pace-progress[data-progress-text="39%"]:after { right: -127.46px }.pace .pace-progress[data-progress-text="40%"]:after { right: -125.6px }.pace .pace-progress[data-progress-text="41%"]:after { right: -123.74px }.pace .pace-progress[data-progress-text="42%"]:after { right: -121.88px }.pace .pace-progress[data-progress-text="43%"]:after { right: -120.02px }.pace .pace-progress[data-progress-text="44%"]:after { right: -118.16px }.pace .pace-progress[data-progress-text="45%"]:after { right: -116.3px }.pace .pace-progress[data-progress-text="46%"]:after { right: -114.44px }.pace .pace-progress[data-progress-text="47%"]:after { right: -112.58px }.pace .pace-progress[data-progress-text="48%"]:after { right: -110.72px }.pace .pace-progress[data-progress-text="49%"]:after { right: -108.86px }.pace .pace-progress[data-progress-text="50%"]:after { right: -107px }.pace .pace-progress[data-progress-text="51%"]:after { right: -105.14px }.pace .pace-progress[data-progress-text="52%"]:after { right: -103.28px }.pace .pace-progress[data-progress-text="53%"]:after { right: -101.42px }.pace .pace-progress[data-progress-text="54%"]:after { right: -99.56px }.pace .pace-progress[data-progress-text="55%"]:after { right: -97.7px }.pace .pace-progress[data-progress-text="56%"]:after { right: -95.84px }.pace .pace-progress[data-progress-text="57%"]:after { right: -93.98px }.pace .pace-progress[data-progress-text="58%"]:after { right: -92.12px }.pace .pace-progress[data-progress-text="59%"]:after { right: -90.26px }.pace .pace-progress[data-progress-text="60%"]:after { right: -88.4px }.pace .pace-progress[data-progress-text="61%"]:after { right: -86.53999999999999px }.pace .pace-progress[data-progress-text="62%"]:after { right: -84.68px }.pace .pace-progress[data-progress-text="63%"]:after { right: -82.82px }.pace .pace-progress[data-progress-text="64%"]:after { right: -80.96000000000001px }.pace .pace-progress[data-progress-text="65%"]:after { right: -79.1px }.pace .pace-progress[data-progress-text="66%"]:after { right: -77.24px }.pace .pace-progress[data-progress-text="67%"]:after { right: -75.38px }.pace .pace-progress[data-progress-text="68%"]:after { right: -73.52px }.pace .pace-progress[data-progress-text="69%"]:after { right: -71.66px }.pace .pace-progress[data-progress-text="70%"]:after { right: -69.8px }.pace .pace-progress[data-progress-text="71%"]:after { right: -67.94px }.pace .pace-progress[data-progress-text="72%"]:after { right: -66.08px }.pace .pace-progress[data-progress-text="73%"]:after { right: -64.22px }.pace .pace-progress[data-progress-text="74%"]:after { right: -62.36px }.pace .pace-progress[data-progress-text="75%"]:after { right: -60.5px }.pace .pace-progress[data-progress-text="76%"]:after { right: -58.64px }.pace .pace-progress[data-progress-text="77%"]:after { right: -56.78px }.pace .pace-progress[data-progress-text="78%"]:after { right: -54.92px }.pace .pace-progress[data-progress-text="79%"]:after { right: -53.06px }.pace .pace-progress[data-progress-text="80%"]:after { right: -51.2px }.pace .pace-progress[data-progress-text="81%"]:after { right: -49.34px }.pace .pace-progress[data-progress-text="82%"]:after { right: -47.480000000000004px }.pace .pace-progress[data-progress-text="83%"]:after { right: -45.62px }.pace .pace-progress[data-progress-text="84%"]:after { right: -43.76px }.pace .pace-progress[data-progress-text="85%"]:after { right: -41.9px }.pace .pace-progress[data-progress-text="86%"]:after { right: -40.04px }.pace .pace-progress[data-progress-text="87%"]:after { right: -38.18px }.pace .pace-progress[data-progress-text="88%"]:after { right: -36.32px }.pace .pace-progress[data-progress-text="89%"]:after { right: -34.46px }.pace .pace-progress[data-progress-text="90%"]:after { right: -32.6px }.pace .pace-progress[data-progress-text="91%"]:after { right: -30.740000000000002px }.pace .pace-progress[data-progress-text="92%"]:after { right: -28.880000000000003px }.pace .pace-progress[data-progress-text="93%"]:after { right: -27.02px }.pace .pace-progress[data-progress-text="94%"]:after { right: -25.16px }.pace .pace-progress[data-progress-text="95%"]:after { right: -23.3px }.pace .pace-progress[data-progress-text="96%"]:after { right: -21.439999999999998px }.pace .pace-progress[data-progress-text="97%"]:after { right: -19.58px }.pace .pace-progress[data-progress-text="98%"]:after { right: -17.72px }.pace .pace-progress[data-progress-text="99%"]:after { right: -15.86px }.pace .pace-progress[data-progress-text="100%"]:after { right: -14px }.pace .pace-activity {position: absolute;width: 100%;height: 28px;z-index: 2001;box-shadow: inset 0 0 0 2px #29d, inset 0 0 0 7px #FFF;border-radius: 10px;}.pace.pace-inactive {display: none;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.min.js"/>
      <url>/js/runtime/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){var grt=new Date("12/01/2024 00:00:00");now.setTime(now.getTime()+250);var days=(now-grt)/1e3/60/60/24,dnum=Math.floor(days),hours=(now-grt)/1e3/60/60-24*dnum,hnum=Math.floor(hours);1==String(hnum).length&&(hnum="0"+hnum);var minutes=(now-grt)/1e3/60-1440*dnum-60*hnum,mnum=Math.floor(minutes);1==String(mnum).length&&(mnum="0"+mnum);var seconds=(now-grt)/1e3-86400*dnum-3600*hnum-60*mnum,snum=Math.round(seconds);1==String(snum).length&&(snum="0"+snum);let currentTimeHtml="";currentTimeHtml=`<span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=currentTimeHtml)}setInterval(()=>{createtime()},250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var grt = new Date("12/01/2024 00:00:00");  now.setTime(now.getTime() + 250);  var days = (now - grt) / 1e3 / 60 / 60 / 24,    dnum = Math.floor(days),    hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum,    hnum = Math.floor(hours);  1 == String(hnum).length && (hnum = "0" + hnum);  var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum,    mnum = Math.floor(minutes);  1 == String(mnum).length && (mnum = "0" + mnum);  var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum,    snum = Math.round(seconds);  1 == String(snum).length && (snum = "0" + snum);  let currentTimeHtml = "";  (currentTimeHtml =    hnum < 18 && hnum >= 9    //   ? `<img class='boardsign' src='/img/badge/IconParkOutlineWorkbench.svg' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`    //   : `<img class='boardsign' src='/img/badge/MaterialSymbolsSleep.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    ? `<span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`      : `<span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = currentTimeHtml);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!(function (c) {    var l,      h,      a,      t,      i,      v =        '<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',      o = (o = document.getElementsByTagName("script"))[o.length - 1].getAttribute("data-injectcss"),      p = function (c, l) {        l.parentNode.insertBefore(c, l);      };    if (o && !c.__iconfont__svg__cssinject__) {      c.__iconfont__svg__cssinject__ = !0;      try {        document.write(          "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"        );      } catch (c) {        console && console.log(c);      }    }    function d() {      i || ((i = !0), a());    }    function m() {      try {        t.documentElement.doScroll("left");      } catch (c) {        return void setTimeout(m, 50);      }      d();    }    (l = function () {      var c,        l = document.createElement("div");      (l.innerHTML = v),        (v = null),        (l = l.getElementsByTagName("svg")[0]) &&          (l.setAttribute("aria-hidden", "true"),          (l.style.position = "absolute"),          (l.style.width = 0),          (l.style.height = 0),          (l.style.overflow = "hidden"),          (l = l),          (c = document.body).firstChild ? p(l, c.firstChild) : c.appendChild(l));    }),      document.addEventListener        ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)          ? setTimeout(l, 0)          : ((h = function () {              document.removeEventListener("DOMContentLoaded", h, !1), l();            }),            document.addEventListener("DOMContentLoaded", h, !1))        : document.attachEvent &&          ((a = l),          (t = c.document),          (i = !1),          m(),          (t.onreadystatechange = function () {            "complete" == t.readyState && ((t.onreadystatechange = null), d());          }));  })(window);]]></content>
      
    </entry>
    
    
  
</search>
